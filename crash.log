2021/02/13 15:00:00 [INFO] Terraform version: 0.14.3  
2021/02/13 15:00:00 [INFO] Go runtime version: go1.15.2
2021/02/13 15:00:00 [INFO] CLI args: []string{"/usr/bin/terraform", "apply", "-auto-approve"}
2021/02/13 15:00:00 [DEBUG] Attempting to open CLI config file: /home/nic/.terraformrc
2021/02/13 15:00:00 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/13 15:00:00 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/13 15:00:00 [DEBUG] ignoring non-existing provider search directory /home/nic/.terraform.d/plugins
2021/02/13 15:00:00 [DEBUG] ignoring non-existing provider search directory /home/nic/.local/share/terraform/plugins
2021/02/13 15:00:00 [DEBUG] ignoring non-existing provider search directory /usr/local/share/terraform/plugins
2021/02/13 15:00:00 [DEBUG] ignoring non-existing provider search directory /usr/share/terraform/plugins
2021/02/13 15:00:00 [DEBUG] ignoring non-existing provider search directory /var/lib/snapd/desktop/terraform/plugins
2021/02/13 15:00:00 [INFO] CLI command args: []string{"apply", "-auto-approve"}
2021/02/13 15:00:00 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/13 15:00:00 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/13 15:00:00 [DEBUG] New state was assigned lineage "3b397d5b-58b4-f306-a6f7-3d89d1f09cee"
2021/02/13 15:00:00 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/13 15:00:00 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/13 15:00:00 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/13 15:00:00 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/13 15:00:00 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/aws v3.22.0 for linux_amd64 at .terraform/providers/registry.terraform.io/hashicorp/aws/3.22.0/linux_amd64
2021/02/13 15:00:00 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/null v3.0.0 for linux_amd64 at .terraform/providers/registry.terraform.io/hashicorp/null/3.0.0/linux_amd64
2021/02/13 15:00:00 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/template v2.2.0 for linux_amd64 at .terraform/providers/registry.terraform.io/hashicorp/template/2.2.0/linux_amd64
2021/02/13 15:00:00 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/aws/3.22.0/linux_amd64 as a candidate package for registry.terraform.io/hashicorp/aws 3.22.0
2021/02/13 15:00:00 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/null/3.0.0/linux_amd64 as a candidate package for registry.terraform.io/hashicorp/null 3.0.0
2021/02/13 15:00:00 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/template/2.2.0/linux_amd64 as a candidate package for registry.terraform.io/hashicorp/template 2.2.0
2021/02/13 15:00:00 [TRACE] providercache.fillMetaCache: using cached result from previous scan of .terraform/providers
2021/02/13 15:00:00 [TRACE] providercache.fillMetaCache: using cached result from previous scan of .terraform/providers
2021/02/13 15:00:00 [DEBUG] checking for provisioner in "."
2021/02/13 15:00:00 [DEBUG] checking for provisioner in "/usr/bin"
2021/02/13 15:00:00 [INFO] Failed to read plugin lock file .terraform/plugins/linux_amd64/lock.json: open .terraform/plugins/linux_amd64/lock.json: no such file or directory
2021/02/13 15:00:00 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/13 15:00:00 [INFO] backend/local: starting Apply operation
2021/02/13 15:00:00 [TRACE] backend/local: requesting state manager for workspace "default"
2021/02/13 15:00:00 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/13 15:00:00 [TRACE] backend/local: requesting state lock for workspace "default"
2021/02/13 15:00:00 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/02/13 15:00:00 [TRACE] statemgr.Filesystem: existing snapshot has lineage "b732c045-e6c4-0a53-8cb1-04609737e867" serial 3321
2021/02/13 15:00:00 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/02/13 15:00:00 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/02/13 15:00:00 [TRACE] backend/local: reading remote state for workspace "default"
2021/02/13 15:00:00 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/02/13 15:00:00 [TRACE] statemgr.Filesystem: read snapshot with lineage "b732c045-e6c4-0a53-8cb1-04609737e867" serial 3321
2021/02/13 15:00:00 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/02/13 15:00:00 [TRACE] backend/local: building context for current working directory
2021/02/13 15:00:00 [TRACE] terraform.NewContext: starting
2021/02/13 15:00:00 [TRACE] terraform.NewContext: loading provider schemas
2021/02/13 15:00:00 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/aws"
2021-02-13T15:00:00.935Z [INFO]  plugin: configuring client automatic mTLS
2021-02-13T15:00:00.976Z [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.22.0/linux_amd64/terraform-provider-aws_v3.22.0_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/aws/3.22.0/linux_amd64/terraform-provider-aws_v3.22.0_x5]
2021-02-13T15:00:00.977Z [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.22.0/linux_amd64/terraform-provider-aws_v3.22.0_x5 pid=9092
2021-02-13T15:00:00.977Z [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.22.0/linux_amd64/terraform-provider-aws_v3.22.0_x5
2021-02-13T15:00:01.009Z [INFO]  plugin.terraform-provider-aws_v3.22.0_x5: configuring server automatic mTLS: timestamp=2021-02-13T15:00:01.009Z
2021-02-13T15:00:01.047Z [DEBUG] plugin: using plugin: version=5
2021-02-13T15:00:01.047Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: plugin address: address=/tmp/plugin756419227 network=unix timestamp=2021-02-13T15:00:01.047Z
2021/02/13 15:00:01 [TRACE] GRPCProvider: GetSchema
2021-02-13T15:00:01.095Z [TRACE] plugin.stdio: waiting for stdio data
2021/02/13 15:00:01 [TRACE] GRPCProvider: Close
2021-02-13T15:00:01.193Z [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-13T15:00:01.195Z [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.22.0/linux_amd64/terraform-provider-aws_v3.22.0_x5 pid=9092
2021-02-13T15:00:01.195Z [DEBUG] plugin: plugin exited
2021/02/13 15:00:01 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/null"
2021-02-13T15:00:01.195Z [INFO]  plugin: configuring client automatic mTLS
2021-02-13T15:00:01.217Z [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/null/3.0.0/linux_amd64/terraform-provider-null_v3.0.0_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/null/3.0.0/linux_amd64/terraform-provider-null_v3.0.0_x5]
2021-02-13T15:00:01.218Z [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/null/3.0.0/linux_amd64/terraform-provider-null_v3.0.0_x5 pid=9103
2021-02-13T15:00:01.218Z [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/null/3.0.0/linux_amd64/terraform-provider-null_v3.0.0_x5
2021-02-13T15:00:01.224Z [INFO]  plugin.terraform-provider-null_v3.0.0_x5: configuring server automatic mTLS: timestamp=2021-02-13T15:00:01.224Z
2021-02-13T15:00:01.251Z [DEBUG] plugin: using plugin: version=5
2021-02-13T15:00:01.251Z [DEBUG] plugin.terraform-provider-null_v3.0.0_x5: plugin address: address=/tmp/plugin485484890 network=unix timestamp=2021-02-13T15:00:01.250Z
2021/02/13 15:00:01 [TRACE] GRPCProvider: GetSchema
2021-02-13T15:00:01.301Z [TRACE] plugin.stdio: waiting for stdio data
2021/02/13 15:00:01 [TRACE] GRPCProvider: Close
2021-02-13T15:00:01.302Z [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-13T15:00:01.303Z [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/null/3.0.0/linux_amd64/terraform-provider-null_v3.0.0_x5 pid=9103
2021-02-13T15:00:01.303Z [DEBUG] plugin: plugin exited
2021/02/13 15:00:01 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/template"
2021-02-13T15:00:01.303Z [INFO]  plugin: configuring client automatic mTLS
2021-02-13T15:00:01.325Z [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/template/2.2.0/linux_amd64/terraform-provider-template_v2.2.0_x4 args=[.terraform/providers/registry.terraform.io/hashicorp/template/2.2.0/linux_amd64/terraform-provider-template_v2.2.0_x4]
2021-02-13T15:00:01.325Z [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/template/2.2.0/linux_amd64/terraform-provider-template_v2.2.0_x4 pid=9112
2021-02-13T15:00:01.325Z [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/template/2.2.0/linux_amd64/terraform-provider-template_v2.2.0_x4
2021-02-13T15:00:01.332Z [INFO]  plugin.terraform-provider-template_v2.2.0_x4: configuring server automatic mTLS: timestamp=2021-02-13T15:00:01.332Z
2021-02-13T15:00:01.359Z [DEBUG] plugin: using plugin: version=5
2021-02-13T15:00:01.359Z [DEBUG] plugin.terraform-provider-template_v2.2.0_x4: plugin address: address=/tmp/plugin492207044 network=unix timestamp=2021-02-13T15:00:01.359Z
2021/02/13 15:00:01 [TRACE] GRPCProvider: GetSchema
2021-02-13T15:00:01.411Z [TRACE] plugin.stdio: waiting for stdio data
2021-02-13T15:00:01.412Z [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unimplemented desc = unknown service plugin.GRPCStdio"
2021/02/13 15:00:01 [TRACE] No provider meta schema returned
2021/02/13 15:00:01 [TRACE] GRPCProvider: Close
2021-02-13T15:00:01.413Z [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/template/2.2.0/linux_amd64/terraform-provider-template_v2.2.0_x4 pid=9112
2021-02-13T15:00:01.413Z [DEBUG] plugin: plugin exited
2021/02/13 15:00:01 [TRACE] LoadSchemas: retrieving schema for provisioner "remote-exec"
2021-02-13T15:00:01.413Z [DEBUG] plugin: starting plugin: path=/usr/bin/terraform args=[/usr/bin/terraform, internal-plugin, provisioner, remote-exec]
2021-02-13T15:00:01.413Z [DEBUG] plugin: plugin started: path=/usr/bin/terraform pid=9121
2021-02-13T15:00:01.414Z [DEBUG] plugin: waiting for RPC address: path=/usr/bin/terraform
2021-02-13T15:00:01.461Z [DEBUG] plugin: using plugin: version=5
2021-02-13T15:00:01.462Z [TRACE] plugin.stdio: waiting for stdio data
2021-02-13T15:00:01.463Z [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-13T15:00:01.465Z [DEBUG] plugin: plugin process exited: path=/usr/bin/terraform pid=9121
2021-02-13T15:00:01.465Z [DEBUG] plugin: plugin exited
2021/02/13 15:00:01 [TRACE] LoadSchemas: retrieving schema for provisioner "file"
2021-02-13T15:00:01.466Z [DEBUG] plugin: starting plugin: path=/usr/bin/terraform args=[/usr/bin/terraform, internal-plugin, provisioner, file]
2021-02-13T15:00:01.466Z [DEBUG] plugin: plugin started: path=/usr/bin/terraform pid=9139
2021-02-13T15:00:01.466Z [DEBUG] plugin: waiting for RPC address: path=/usr/bin/terraform
2021-02-13T15:00:01.515Z [DEBUG] plugin: using plugin: version=5
2021-02-13T15:00:01.515Z [TRACE] plugin.stdio: waiting for stdio data
2021-02-13T15:00:01.517Z [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-13T15:00:01.519Z [DEBUG] plugin: plugin process exited: path=/usr/bin/terraform pid=9139
2021-02-13T15:00:01.519Z [DEBUG] plugin: plugin exited
2021/02/13 15:00:01 [TRACE] terraform.NewContext: complete
2021/02/13 15:00:01 [TRACE] backend/local: finished building terraform.Context
2021/02/13 15:00:01 [TRACE] backend/local: requesting interactive input, if necessary
2021/02/13 15:00:01 [TRACE] Context.Input: Prompting for provider arguments
2021/02/13 15:00:01 [TRACE] Context.Input: Provider provider.aws declared at provider.tf:1,1-15
2021/02/13 15:00:01 [TRACE] Context.Input: Provider provider.null implied by resource block at ansible.tf:1,1-32
2021/02/13 15:00:01 [TRACE] Context.Input: Provider provider.template implied by data block at backend.tf:2,1-31
2021/02/13 15:00:01 [TRACE] Context.Input: Input for provider.aws: map[string]cty.Value{}
2021/02/13 15:00:01 [TRACE] Context.Input: Input for provider.null: map[string]cty.Value{}
2021/02/13 15:00:01 [TRACE] Context.Input: Input for provider.template: map[string]cty.Value{}
2021/02/13 15:00:01 [TRACE] backend/local: running validation operation
2021/02/13 15:00:01 [INFO] terraform: building graph: GraphTypeValidate
2021/02/13 15:00:01 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/13 15:00:01 [TRACE] ConfigTransformer: Starting for path: 
2021/02/13 15:00:01 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup - *terraform.NodeValidatableResource
  aws_eip.eipForNatGw - *terraform.NodeValidatableResource
  aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeValidatableResource
  aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-ASG-Notification - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-EC2-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-IAM-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-KMS-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-R53-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-SNS-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-SQS-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.ansible-EC2-Policy - *terraform.NodeValidatableResource
  aws_iam_role.Ansible-Refined-Role - *terraform.NodeValidatableResource
  aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
  aws_iam_role.vmimport - *terraform.NodeValidatableResource
  aws_iam_role_policy.vmimport - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeValidatableResource
  aws_instance.aviCtrl - *terraform.NodeValidatableResource
  aws_instance.backend - *terraform.NodeValidatableResource
  aws_instance.jump - *terraform.NodeValidatableResource
  aws_internet_gateway.internetGateway - *terraform.NodeValidatableResource
  aws_key_pair.kpAvi - *terraform.NodeValidatableResource
  aws_key_pair.kpBackend - *terraform.NodeValidatableResource
  aws_key_pair.kpJump - *terraform.NodeValidatableResource
  aws_key_pair.kpMysql - *terraform.NodeValidatableResource
  aws_key_pair.kpOpencart - *terraform.NodeValidatableResource
  aws_launch_template.templateAsg - *terraform.NodeValidatableResource
  aws_nat_gateway.natGw - *terraform.NodeValidatableResource
  aws_route53_record.aviCtrl - *terraform.NodeValidatableResource
  aws_route53_record.jump - *terraform.NodeValidatableResource
  aws_route_table.rt - *terraform.NodeValidatableResource
  aws_route_table.rtPrivate - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationAviSeMgt - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationAviVs - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationBackend - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationMgt - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationMysql - *terraform.NodeValidatableResource
  aws_security_group.sgAvi - *terraform.NodeValidatableResource
  aws_security_group.sgBackend - *terraform.NodeValidatableResource
  aws_security_group.sgJump - *terraform.NodeValidatableResource
  aws_security_group.sgMysql - *terraform.NodeValidatableResource
  aws_security_group.sgOpencart - *terraform.NodeValidatableResource
  aws_subnet.subnetAviSeMgt - *terraform.NodeValidatableResource
  aws_subnet.subnetAviVs - *terraform.NodeValidatableResource
  aws_subnet.subnetBackend - *terraform.NodeValidatableResource
  aws_subnet.subnetMgt - *terraform.NodeValidatableResource
  aws_subnet.subnetMysql - *terraform.NodeValidatableResource
  aws_vpc.vpc - *terraform.NodeValidatableResource
  data.aws_ami.aviAmi - *terraform.NodeValidatableResource
  data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
  data.aws_ami.ubuntuFocal - *terraform.NodeValidatableResource
  data.aws_availability_zones.available - *terraform.NodeValidatableResource
  data.aws_route53_zone.awsAviDemo - *terraform.NodeValidatableResource
  data.template_file.backend - *terraform.NodeValidatableResource
  data.template_file.jump - *terraform.NodeValidatableResource
  null_resource.foo7 - *terraform.NodeValidatableResource
  ------
2021/02/13 15:00:01 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/13 15:00:01 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup - *terraform.NodeValidatableResource
  aws_eip.eipForNatGw - *terraform.NodeValidatableResource
  aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeValidatableResource
  aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-ASG-Notification - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-EC2-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-IAM-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-KMS-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-R53-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-SNS-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-SQS-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.ansible-EC2-Policy - *terraform.NodeValidatableResource
  aws_iam_role.Ansible-Refined-Role - *terraform.NodeValidatableResource
  aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
  aws_iam_role.vmimport - *terraform.NodeValidatableResource
  aws_iam_role_policy.vmimport - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeValidatableResource
  aws_instance.aviCtrl - *terraform.NodeValidatableResource
  aws_instance.backend - *terraform.NodeValidatableResource
  aws_instance.jump - *terraform.NodeValidatableResource
  aws_internet_gateway.internetGateway - *terraform.NodeValidatableResource
  aws_key_pair.kpAvi - *terraform.NodeValidatableResource
  aws_key_pair.kpBackend - *terraform.NodeValidatableResource
  aws_key_pair.kpJump - *terraform.NodeValidatableResource
  aws_key_pair.kpMysql - *terraform.NodeValidatableResource
  aws_key_pair.kpOpencart - *terraform.NodeValidatableResource
  aws_launch_template.templateAsg - *terraform.NodeValidatableResource
  aws_nat_gateway.natGw - *terraform.NodeValidatableResource
  aws_route53_record.aviCtrl - *terraform.NodeValidatableResource
  aws_route53_record.jump - *terraform.NodeValidatableResource
  aws_route_table.rt - *terraform.NodeValidatableResource
  aws_route_table.rtPrivate - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationAviSeMgt - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationAviVs - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationBackend - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationMgt - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationMysql - *terraform.NodeValidatableResource
  aws_security_group.sgAvi - *terraform.NodeValidatableResource
  aws_security_group.sgBackend - *terraform.NodeValidatableResource
  aws_security_group.sgJump - *terraform.NodeValidatableResource
  aws_security_group.sgMysql - *terraform.NodeValidatableResource
  aws_security_group.sgOpencart - *terraform.NodeValidatableResource
  aws_subnet.subnetAviSeMgt - *terraform.NodeValidatableResource
  aws_subnet.subnetAviVs - *terraform.NodeValidatableResource
  aws_subnet.subnetBackend - *terraform.NodeValidatableResource
  aws_subnet.subnetMgt - *terraform.NodeValidatableResource
  aws_subnet.subnetMysql - *terraform.NodeValidatableResource
  aws_vpc.vpc - *terraform.NodeValidatableResource
  data.aws_ami.aviAmi - *terraform.NodeValidatableResource
  data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
  data.aws_ami.ubuntuFocal - *terraform.NodeValidatableResource
  data.aws_availability_zones.available - *terraform.NodeValidatableResource
  data.aws_route53_zone.awsAviDemo - *terraform.NodeValidatableResource
  data.template_file.backend - *terraform.NodeValidatableResource
  data.template_file.jump - *terraform.NodeValidatableResource
  null_resource.foo7 - *terraform.NodeValidatableResource
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:01 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/13 15:00:01 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/13 15:00:01 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/13 15:00:01 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/13 15:00:01 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/13 15:00:01 [TRACE] OutputTransformer: adding az as *terraform.NodeApplyableOutput
2021/02/13 15:00:01 [TRACE] OutputTransformer: adding aviAmi as *terraform.NodeApplyableOutput
2021/02/13 15:00:01 [TRACE] OutputTransformer: adding ubuntuBionic as *terraform.NodeApplyableOutput
2021/02/13 15:00:01 [TRACE] OutputTransformer: adding ubuntuFocal as *terraform.NodeApplyableOutput
2021/02/13 15:00:01 [TRACE] OutputTransformer: adding jumpPublicIp as *terraform.NodeApplyableOutput
2021/02/13 15:00:01 [TRACE] OutputTransformer: adding aviCtrlPublicIp as *terraform.NodeApplyableOutput
2021/02/13 15:00:01 [TRACE] OutputTransformer: adding destroy as *terraform.NodeApplyableOutput
2021/02/13 15:00:01 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup - *terraform.NodeValidatableResource
  aws_eip.eipForNatGw - *terraform.NodeValidatableResource
  aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeValidatableResource
  aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-ASG-Notification - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-EC2-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-IAM-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-KMS-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-R53-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-SNS-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-SQS-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.ansible-EC2-Policy - *terraform.NodeValidatableResource
  aws_iam_role.Ansible-Refined-Role - *terraform.NodeValidatableResource
  aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
  aws_iam_role.vmimport - *terraform.NodeValidatableResource
  aws_iam_role_policy.vmimport - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeValidatableResource
  aws_instance.aviCtrl - *terraform.NodeValidatableResource
  aws_instance.backend - *terraform.NodeValidatableResource
  aws_instance.jump - *terraform.NodeValidatableResource
  aws_internet_gateway.internetGateway - *terraform.NodeValidatableResource
  aws_key_pair.kpAvi - *terraform.NodeValidatableResource
  aws_key_pair.kpBackend - *terraform.NodeValidatableResource
  aws_key_pair.kpJump - *terraform.NodeValidatableResource
  aws_key_pair.kpMysql - *terraform.NodeValidatableResource
  aws_key_pair.kpOpencart - *terraform.NodeValidatableResource
  aws_launch_template.templateAsg - *terraform.NodeValidatableResource
  aws_nat_gateway.natGw - *terraform.NodeValidatableResource
  aws_route53_record.aviCtrl - *terraform.NodeValidatableResource
  aws_route53_record.jump - *terraform.NodeValidatableResource
  aws_route_table.rt - *terraform.NodeValidatableResource
  aws_route_table.rtPrivate - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationAviSeMgt - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationAviVs - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationBackend - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationMgt - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationMysql - *terraform.NodeValidatableResource
  aws_security_group.sgAvi - *terraform.NodeValidatableResource
  aws_security_group.sgBackend - *terraform.NodeValidatableResource
  aws_security_group.sgJump - *terraform.NodeValidatableResource
  aws_security_group.sgMysql - *terraform.NodeValidatableResource
  aws_security_group.sgOpencart - *terraform.NodeValidatableResource
  aws_subnet.subnetAviSeMgt - *terraform.NodeValidatableResource
  aws_subnet.subnetAviVs - *terraform.NodeValidatableResource
  aws_subnet.subnetBackend - *terraform.NodeValidatableResource
  aws_subnet.subnetMgt - *terraform.NodeValidatableResource
  aws_subnet.subnetMysql - *terraform.NodeValidatableResource
  aws_vpc.vpc - *terraform.NodeValidatableResource
  data.aws_ami.aviAmi - *terraform.NodeValidatableResource
  data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
  data.aws_ami.ubuntuFocal - *terraform.NodeValidatableResource
  data.aws_availability_zones.available - *terraform.NodeValidatableResource
  data.aws_route53_zone.awsAviDemo - *terraform.NodeValidatableResource
  data.template_file.backend - *terraform.NodeValidatableResource
  data.template_file.jump - *terraform.NodeValidatableResource
  null_resource.foo7 - *terraform.NodeValidatableResource
  output.aviAmi - *terraform.NodeApplyableOutput
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
  output.az - *terraform.NodeApplyableOutput
  output.destroy - *terraform.NodeApplyableOutput
  output.jumpPublicIp - *terraform.NodeApplyableOutput
  output.ubuntuBionic - *terraform.NodeApplyableOutput
  output.ubuntuFocal - *terraform.NodeApplyableOutput
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:01 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/13 15:00:01 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/13 15:00:01 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/13 15:00:01 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/13 15:00:01 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/13 15:00:01 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:01 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:01 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/13 15:00:01 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/13 15:00:01 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role.vmimport" (*terraform.NodeValidatableResource) config from aws_iam.tf:155,1-35
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role.vmimport
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnetMysql" (*terraform.NodeValidatableResource) config from aws_vpc.tf:42,1-36
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_subnet.subnetMysql
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_autoscaling_group.autoScalingGroup" (*terraform.NodeValidatableResource) config from aws_instance.tf:65,1-52
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_autoscaling_group.autoScalingGroup
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach4" (*terraform.NodeValidatableResource) config from aws_iam.tf:120,1-56
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach4
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table_association.subnetAssociationBackend" (*terraform.NodeValidatableResource) config from aws_vpc.tf:116,1-66
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table_association.subnetAssociationBackend
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach8" (*terraform.NodeValidatableResource) config from aws_iam.tf:140,1-56
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach8
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_ami.ubuntuFocal" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"aws_instance.tf", Start:hcl.Pos{Line:25, Column:1, Byte:429}, End:hcl.Pos{Line:25, Column:29, Byte:457}}
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to data.aws_ami.ubuntuFocal
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnetBackend" (*terraform.NodeValidatableResource) config from aws_vpc.tf:59,1-38
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_subnet.subnetBackend
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnetMgt" (*terraform.NodeValidatableResource) config from aws_vpc.tf:36,1-34
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_subnet.subnetMgt
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_key_pair.kpAvi" (*terraform.NodeValidatableResource) config from aws_kp.tf:3,1-32
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_key_pair.kpAvi
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_key_pair.kpMysql" (*terraform.NodeValidatableResource) config from aws_kp.tf:18,1-34
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_key_pair.kpMysql
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach6" (*terraform.NodeValidatableResource) config from aws_iam.tf:130,1-56
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach6
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_key_pair.kpBackend" (*terraform.NodeValidatableResource) config from aws_kp.tf:13,1-36
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_key_pair.kpBackend
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_ami.ubuntuBionic" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"aws_instance.tf", Start:hcl.Pos{Line:14, Column:1, Byte:219}, End:hcl.Pos{Line:14, Column:30, Byte:248}}
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to data.aws_ami.ubuntuBionic
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.sgOpencart" (*terraform.NodeValidatableResource) config from aws_sg.tf:109,1-43
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group.sgOpencart
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_instance_profile.AviController-Instance-Profile" (*terraform.NodeValidatableResource) config from aws_iam.tf:150,1-69
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_instance_profile.AviController-Instance-Profile
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_vpc.vpc" (*terraform.NodeValidatableResource) config from aws_vpc.tf:5,1-25
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_vpc.vpc
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-KMS-Policy" (*terraform.NodeValidatableResource) config from aws_iam.tf:45,1-53
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-KMS-Policy
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route53_record.aviCtrl" (*terraform.NodeValidatableResource) config from aws_route53.tf:13,3-42
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route53_record.aviCtrl
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_launch_template.templateAsg" (*terraform.NodeValidatableResource) config from aws_instance.tf:57,1-45
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_launch_template.templateAsg
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.sgAvi" (*terraform.NodeValidatableResource) config from aws_sg.tf:3,1-38
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group.sgAvi
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_key_pair.kpJump" (*terraform.NodeValidatableResource) config from aws_kp.tf:8,1-33
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_key_pair.kpJump
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table_association.subnetAssociationMysql" (*terraform.NodeValidatableResource) config from aws_vpc.tf:111,1-64
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table_association.subnetAssociationMysql
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach1" (*terraform.NodeValidatableResource) config from aws_iam.tf:105,1-56
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach1
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach5" (*terraform.NodeValidatableResource) config from aws_iam.tf:125,1-56
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach5
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnetAviSeMgt" (*terraform.NodeValidatableResource) config from aws_vpc.tf:70,1-39
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_subnet.subnetAviSeMgt
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.sgBackend" (*terraform.NodeValidatableResource) config from aws_sg.tf:76,1-42
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group.sgBackend
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-SNS-Policy" (*terraform.NodeValidatableResource) config from aws_iam.tf:27,1-53
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-SNS-Policy
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table_association.subnetAssociationAviVs" (*terraform.NodeValidatableResource) config from aws_vpc.tf:128,1-64
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table_association.subnetAssociationAviVs
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table_association.subnetAssociationMgt" (*terraform.NodeValidatableResource) config from aws_vpc.tf:106,1-62
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table_association.subnetAssociationMgt
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach2" (*terraform.NodeValidatableResource) config from aws_iam.tf:110,1-56
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach2
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table_association.subnetAssociationAviSeMgt" (*terraform.NodeValidatableResource) config from aws_vpc.tf:122,1-67
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table_association.subnetAssociationAviSeMgt
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-AutoScalingGroup-Policy" (*terraform.NodeValidatableResource) config from aws_iam.tf:21,1-66
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-AutoScalingGroup-Policy
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-SQS-Policy" (*terraform.NodeValidatableResource) config from aws_iam.tf:33,1-53
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-SQS-Policy
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table.rtPrivate" (*terraform.NodeValidatableResource) config from aws_vpc.tf:95,1-39
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table.rtPrivate
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_internet_gateway.internetGateway" (*terraform.NodeValidatableResource) config from aws_vpc.tf:14,1-50
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_internet_gateway.internetGateway
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy.vmimport" (*terraform.NodeValidatableResource) config from aws_iam.tf:183,1-42
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy.vmimport
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_key_pair.kpOpencart" (*terraform.NodeValidatableResource) config from aws_kp.tf:23,1-37
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_key_pair.kpOpencart
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "null_resource.foo7" (*terraform.NodeValidatableResource) config from ansible.tf:1,1-32
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to null_resource.foo7
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.ansible-EC2-Policy" (*terraform.NodeValidatableResource) config from aws_iam.tf:3,1-47
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.ansible-EC2-Policy
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_route53_zone.awsAviDemo" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"aws_route53.tf", Start:hcl.Pos{Line:1, Column:1, Byte:0}, End:hcl.Pos{Line:1, Column:37, Byte:36}}
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to data.aws_route53_zone.awsAviDemo
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_eip.eipForNatGw" (*terraform.NodeValidatableResource) config from aws_vpc.tf:83,1-33
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_eip.eipForNatGw
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-R53-Policy" (*terraform.NodeValidatableResource) config from aws_iam.tf:15,1-53
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-R53-Policy
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.sgJump" (*terraform.NodeValidatableResource) config from aws_sg.tf:50,1-39
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group.sgJump
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_instance_profile.Ansible-Instance-Profile" (*terraform.NodeValidatableResource) config from aws_iam.tf:145,1-63
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_instance_profile.Ansible-Instance-Profile
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "data.template_file.backend" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"backend.tf", Start:hcl.Pos{Line:2, Column:1, Byte:2}, End:hcl.Pos{Line:2, Column:31, Byte:32}}
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to data.template_file.backend
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-IAM-Policy" (*terraform.NodeValidatableResource) config from aws_iam.tf:51,1-53
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-IAM-Policy
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "data.template_file.jump" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"aws_instance.tf", Start:hcl.Pos{Line:121, Column:1, Byte:2995}, End:hcl.Pos{Line:121, Column:28, Byte:3022}}
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to data.template_file.jump
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table.rt" (*terraform.NodeValidatableResource) config from aws_vpc.tf:21,1-32
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table.rt
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.backend" (*terraform.NodeValidatableResource) config from backend.tf:10,1-34
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_instance.backend
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route53_record.jump" (*terraform.NodeValidatableResource) config from aws_route53.tf:5,1-37
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route53_record.jump
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.sgMysql" (*terraform.NodeValidatableResource) config from aws_sg.tf:142,1-40
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group.sgMysql
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-EC2-Policy" (*terraform.NodeValidatableResource) config from aws_iam.tf:9,1-53
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-EC2-Policy
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.jump" (*terraform.NodeValidatableResource) config from aws_instance.tf:134,1-31
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_instance.jump
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-ASG-Notification" (*terraform.NodeValidatableResource) config from aws_iam.tf:39,1-59
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-ASG-Notification
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach3" (*terraform.NodeValidatableResource) config from aws_iam.tf:115,1-56
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach3
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.aviCtrl" (*terraform.NodeValidatableResource) config from aws_instance.tf:38,1-34
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_instance.aviCtrl
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach7" (*terraform.NodeValidatableResource) config from aws_iam.tf:135,1-56
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach7
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_ami.aviAmi" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"aws_instance.tf", Start:hcl.Pos{Line:3, Column:1, Byte:24}, End:hcl.Pos{Line:3, Column:24, Byte:47}}
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to data.aws_ami.aviAmi
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role.AviController-Refined-Role" (*terraform.NodeValidatableResource) config from aws_iam.tf:79,1-53
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role.AviController-Refined-Role
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_nat_gateway.natGw" (*terraform.NodeValidatableResource) config from aws_vpc.tf:90,1-35
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_nat_gateway.natGw
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.ansible-attach1" (*terraform.NodeValidatableResource) config from aws_iam.tf:100,1-60
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.ansible-attach1
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role.Ansible-Refined-Role" (*terraform.NodeValidatableResource) config from aws_iam.tf:57,1-47
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role.Ansible-Refined-Role
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnetAviVs" (*terraform.NodeValidatableResource) config from aws_vpc.tf:48,1-36
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_subnet.subnetAviVs
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_availability_zones.available" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"aws_vpc.tf", Start:hcl.Pos{Line:32, Column:1, Byte:637}, End:hcl.Pos{Line:32, Column:42, Byte:678}}
2021/02/13 15:00:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to data.aws_availability_zones.available
2021/02/13 15:00:01 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/13 15:00:01 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/13 15:00:01 [TRACE] MissingProviderTransformer: added implicit provisioner file, first implied by null_resource.foo7
2021/02/13 15:00:01 [TRACE] MissingProviderTransformer: added implicit provisioner remote-exec, first implied by null_resource.foo7
2021/02/13 15:00:01 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup - *terraform.NodeValidatableResource
  aws_eip.eipForNatGw - *terraform.NodeValidatableResource
  aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeValidatableResource
  aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-ASG-Notification - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-EC2-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-IAM-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-KMS-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-R53-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-SNS-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-SQS-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.ansible-EC2-Policy - *terraform.NodeValidatableResource
  aws_iam_role.Ansible-Refined-Role - *terraform.NodeValidatableResource
  aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
  aws_iam_role.vmimport - *terraform.NodeValidatableResource
  aws_iam_role_policy.vmimport - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeValidatableResource
  aws_instance.aviCtrl - *terraform.NodeValidatableResource
  aws_instance.backend - *terraform.NodeValidatableResource
  aws_instance.jump - *terraform.NodeValidatableResource
  aws_internet_gateway.internetGateway - *terraform.NodeValidatableResource
  aws_key_pair.kpAvi - *terraform.NodeValidatableResource
  aws_key_pair.kpBackend - *terraform.NodeValidatableResource
  aws_key_pair.kpJump - *terraform.NodeValidatableResource
  aws_key_pair.kpMysql - *terraform.NodeValidatableResource
  aws_key_pair.kpOpencart - *terraform.NodeValidatableResource
  aws_launch_template.templateAsg - *terraform.NodeValidatableResource
  aws_nat_gateway.natGw - *terraform.NodeValidatableResource
  aws_route53_record.aviCtrl - *terraform.NodeValidatableResource
  aws_route53_record.jump - *terraform.NodeValidatableResource
  aws_route_table.rt - *terraform.NodeValidatableResource
  aws_route_table.rtPrivate - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationAviSeMgt - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationAviVs - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationBackend - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationMgt - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationMysql - *terraform.NodeValidatableResource
  aws_security_group.sgAvi - *terraform.NodeValidatableResource
  aws_security_group.sgBackend - *terraform.NodeValidatableResource
  aws_security_group.sgJump - *terraform.NodeValidatableResource
  aws_security_group.sgMysql - *terraform.NodeValidatableResource
  aws_security_group.sgOpencart - *terraform.NodeValidatableResource
  aws_subnet.subnetAviSeMgt - *terraform.NodeValidatableResource
  aws_subnet.subnetAviVs - *terraform.NodeValidatableResource
  aws_subnet.subnetBackend - *terraform.NodeValidatableResource
  aws_subnet.subnetMgt - *terraform.NodeValidatableResource
  aws_subnet.subnetMysql - *terraform.NodeValidatableResource
  aws_vpc.vpc - *terraform.NodeValidatableResource
  data.aws_ami.aviAmi - *terraform.NodeValidatableResource
  data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
  data.aws_ami.ubuntuFocal - *terraform.NodeValidatableResource
  data.aws_availability_zones.available - *terraform.NodeValidatableResource
  data.aws_route53_zone.awsAviDemo - *terraform.NodeValidatableResource
  data.template_file.backend - *terraform.NodeValidatableResource
  data.template_file.jump - *terraform.NodeValidatableResource
  null_resource.foo7 - *terraform.NodeValidatableResource
  output.aviAmi - *terraform.NodeApplyableOutput
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
  output.az - *terraform.NodeApplyableOutput
  output.destroy - *terraform.NodeApplyableOutput
  output.jumpPublicIp - *terraform.NodeApplyableOutput
  output.ubuntuBionic - *terraform.NodeApplyableOutput
  output.ubuntuFocal - *terraform.NodeApplyableOutput
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:01 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/13 15:00:01 [TRACE] ProvisionerTransformer: null_resource.foo7 is provisioned by file ("provisioner.file")
2021/02/13 15:00:01 [TRACE] ProvisionerTransformer: null_resource.foo7 is provisioned by file ("provisioner.file")
2021/02/13 15:00:01 [TRACE] ProvisionerTransformer: null_resource.foo7 is provisioned by remote-exec ("provisioner.remote-exec")
2021/02/13 15:00:01 [TRACE] ProvisionerTransformer: aws_instance.jump is provisioned by remote-exec ("provisioner.remote-exec")
2021/02/13 15:00:01 [TRACE] Completed graph transform *terraform.ProvisionerTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup - *terraform.NodeValidatableResource
  aws_eip.eipForNatGw - *terraform.NodeValidatableResource
  aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeValidatableResource
  aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-ASG-Notification - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-EC2-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-IAM-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-KMS-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-R53-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-SNS-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-SQS-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.ansible-EC2-Policy - *terraform.NodeValidatableResource
  aws_iam_role.Ansible-Refined-Role - *terraform.NodeValidatableResource
  aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
  aws_iam_role.vmimport - *terraform.NodeValidatableResource
  aws_iam_role_policy.vmimport - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeValidatableResource
  aws_instance.aviCtrl - *terraform.NodeValidatableResource
  aws_instance.backend - *terraform.NodeValidatableResource
  aws_instance.jump - *terraform.NodeValidatableResource
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.internetGateway - *terraform.NodeValidatableResource
  aws_key_pair.kpAvi - *terraform.NodeValidatableResource
  aws_key_pair.kpBackend - *terraform.NodeValidatableResource
  aws_key_pair.kpJump - *terraform.NodeValidatableResource
  aws_key_pair.kpMysql - *terraform.NodeValidatableResource
  aws_key_pair.kpOpencart - *terraform.NodeValidatableResource
  aws_launch_template.templateAsg - *terraform.NodeValidatableResource
  aws_nat_gateway.natGw - *terraform.NodeValidatableResource
  aws_route53_record.aviCtrl - *terraform.NodeValidatableResource
  aws_route53_record.jump - *terraform.NodeValidatableResource
  aws_route_table.rt - *terraform.NodeValidatableResource
  aws_route_table.rtPrivate - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationAviSeMgt - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationAviVs - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationBackend - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationMgt - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationMysql - *terraform.NodeValidatableResource
  aws_security_group.sgAvi - *terraform.NodeValidatableResource
  aws_security_group.sgBackend - *terraform.NodeValidatableResource
  aws_security_group.sgJump - *terraform.NodeValidatableResource
  aws_security_group.sgMysql - *terraform.NodeValidatableResource
  aws_security_group.sgOpencart - *terraform.NodeValidatableResource
  aws_subnet.subnetAviSeMgt - *terraform.NodeValidatableResource
  aws_subnet.subnetAviVs - *terraform.NodeValidatableResource
  aws_subnet.subnetBackend - *terraform.NodeValidatableResource
  aws_subnet.subnetMgt - *terraform.NodeValidatableResource
  aws_subnet.subnetMysql - *terraform.NodeValidatableResource
  aws_vpc.vpc - *terraform.NodeValidatableResource
  data.aws_ami.aviAmi - *terraform.NodeValidatableResource
  data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
  data.aws_ami.ubuntuFocal - *terraform.NodeValidatableResource
  data.aws_availability_zones.available - *terraform.NodeValidatableResource
  data.aws_route53_zone.awsAviDemo - *terraform.NodeValidatableResource
  data.template_file.backend - *terraform.NodeValidatableResource
  data.template_file.jump - *terraform.NodeValidatableResource
  null_resource.foo7 - *terraform.NodeValidatableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  output.aviAmi - *terraform.NodeApplyableOutput
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
  output.az - *terraform.NodeApplyableOutput
  output.destroy - *terraform.NodeApplyableOutput
  output.jumpPublicIp - *terraform.NodeApplyableOutput
  output.ubuntuBionic - *terraform.NodeApplyableOutput
  output.ubuntuFocal - *terraform.NodeApplyableOutput
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:01 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/13 15:00:01 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/13 15:00:01 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/aws\"]" provider configuration from provider.tf:1,1-15
2021/02/13 15:00:01 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup - *terraform.NodeValidatableResource
  aws_eip.eipForNatGw - *terraform.NodeValidatableResource
  aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeValidatableResource
  aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-ASG-Notification - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-EC2-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-IAM-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-KMS-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-R53-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-SNS-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-SQS-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.ansible-EC2-Policy - *terraform.NodeValidatableResource
  aws_iam_role.Ansible-Refined-Role - *terraform.NodeValidatableResource
  aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
  aws_iam_role.vmimport - *terraform.NodeValidatableResource
  aws_iam_role_policy.vmimport - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeValidatableResource
  aws_instance.aviCtrl - *terraform.NodeValidatableResource
  aws_instance.backend - *terraform.NodeValidatableResource
  aws_instance.jump - *terraform.NodeValidatableResource
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.internetGateway - *terraform.NodeValidatableResource
  aws_key_pair.kpAvi - *terraform.NodeValidatableResource
  aws_key_pair.kpBackend - *terraform.NodeValidatableResource
  aws_key_pair.kpJump - *terraform.NodeValidatableResource
  aws_key_pair.kpMysql - *terraform.NodeValidatableResource
  aws_key_pair.kpOpencart - *terraform.NodeValidatableResource
  aws_launch_template.templateAsg - *terraform.NodeValidatableResource
  aws_nat_gateway.natGw - *terraform.NodeValidatableResource
  aws_route53_record.aviCtrl - *terraform.NodeValidatableResource
  aws_route53_record.jump - *terraform.NodeValidatableResource
  aws_route_table.rt - *terraform.NodeValidatableResource
  aws_route_table.rtPrivate - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationAviSeMgt - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationAviVs - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationBackend - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationMgt - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationMysql - *terraform.NodeValidatableResource
  aws_security_group.sgAvi - *terraform.NodeValidatableResource
  aws_security_group.sgBackend - *terraform.NodeValidatableResource
  aws_security_group.sgJump - *terraform.NodeValidatableResource
  aws_security_group.sgMysql - *terraform.NodeValidatableResource
  aws_security_group.sgOpencart - *terraform.NodeValidatableResource
  aws_subnet.subnetAviSeMgt - *terraform.NodeValidatableResource
  aws_subnet.subnetAviVs - *terraform.NodeValidatableResource
  aws_subnet.subnetBackend - *terraform.NodeValidatableResource
  aws_subnet.subnetMgt - *terraform.NodeValidatableResource
  aws_subnet.subnetMysql - *terraform.NodeValidatableResource
  aws_vpc.vpc - *terraform.NodeValidatableResource
  data.aws_ami.aviAmi - *terraform.NodeValidatableResource
  data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
  data.aws_ami.ubuntuFocal - *terraform.NodeValidatableResource
  data.aws_availability_zones.available - *terraform.NodeValidatableResource
  data.aws_route53_zone.awsAviDemo - *terraform.NodeValidatableResource
  data.template_file.backend - *terraform.NodeValidatableResource
  data.template_file.jump - *terraform.NodeValidatableResource
  null_resource.foo7 - *terraform.NodeValidatableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  output.aviAmi - *terraform.NodeApplyableOutput
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
  output.az - *terraform.NodeApplyableOutput
  output.destroy - *terraform.NodeApplyableOutput
  output.jumpPublicIp - *terraform.NodeApplyableOutput
  output.ubuntuBionic - *terraform.NodeApplyableOutput
  output.ubuntuFocal - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:01 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/13 15:00:01 [DEBUG] adding implicit provider configuration provider["registry.terraform.io/hashicorp/null"], implied first by null_resource.foo7
2021/02/13 15:00:01 [DEBUG] adding implicit provider configuration provider["registry.terraform.io/hashicorp/template"], implied first by data.template_file.backend
2021/02/13 15:00:01 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup - *terraform.NodeValidatableResource
  aws_eip.eipForNatGw - *terraform.NodeValidatableResource
  aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeValidatableResource
  aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-ASG-Notification - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-EC2-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-IAM-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-KMS-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-R53-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-SNS-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-SQS-Policy - *terraform.NodeValidatableResource
  aws_iam_policy.ansible-EC2-Policy - *terraform.NodeValidatableResource
  aws_iam_role.Ansible-Refined-Role - *terraform.NodeValidatableResource
  aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
  aws_iam_role.vmimport - *terraform.NodeValidatableResource
  aws_iam_role_policy.vmimport - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeValidatableResource
  aws_instance.aviCtrl - *terraform.NodeValidatableResource
  aws_instance.backend - *terraform.NodeValidatableResource
  aws_instance.jump - *terraform.NodeValidatableResource
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.internetGateway - *terraform.NodeValidatableResource
  aws_key_pair.kpAvi - *terraform.NodeValidatableResource
  aws_key_pair.kpBackend - *terraform.NodeValidatableResource
  aws_key_pair.kpJump - *terraform.NodeValidatableResource
  aws_key_pair.kpMysql - *terraform.NodeValidatableResource
  aws_key_pair.kpOpencart - *terraform.NodeValidatableResource
  aws_launch_template.templateAsg - *terraform.NodeValidatableResource
  aws_nat_gateway.natGw - *terraform.NodeValidatableResource
  aws_route53_record.aviCtrl - *terraform.NodeValidatableResource
  aws_route53_record.jump - *terraform.NodeValidatableResource
  aws_route_table.rt - *terraform.NodeValidatableResource
  aws_route_table.rtPrivate - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationAviSeMgt - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationAviVs - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationBackend - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationMgt - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationMysql - *terraform.NodeValidatableResource
  aws_security_group.sgAvi - *terraform.NodeValidatableResource
  aws_security_group.sgBackend - *terraform.NodeValidatableResource
  aws_security_group.sgJump - *terraform.NodeValidatableResource
  aws_security_group.sgMysql - *terraform.NodeValidatableResource
  aws_security_group.sgOpencart - *terraform.NodeValidatableResource
  aws_subnet.subnetAviSeMgt - *terraform.NodeValidatableResource
  aws_subnet.subnetAviVs - *terraform.NodeValidatableResource
  aws_subnet.subnetBackend - *terraform.NodeValidatableResource
  aws_subnet.subnetMgt - *terraform.NodeValidatableResource
  aws_subnet.subnetMysql - *terraform.NodeValidatableResource
  aws_vpc.vpc - *terraform.NodeValidatableResource
  data.aws_ami.aviAmi - *terraform.NodeValidatableResource
  data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
  data.aws_ami.ubuntuFocal - *terraform.NodeValidatableResource
  data.aws_availability_zones.available - *terraform.NodeValidatableResource
  data.aws_route53_zone.awsAviDemo - *terraform.NodeValidatableResource
  data.template_file.backend - *terraform.NodeValidatableResource
  data.template_file.jump - *terraform.NodeValidatableResource
  null_resource.foo7 - *terraform.NodeValidatableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  output.aviAmi - *terraform.NodeApplyableOutput
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
  output.az - *terraform.NodeApplyableOutput
  output.destroy - *terraform.NodeApplyableOutput
  output.jumpPublicIp - *terraform.NodeApplyableOutput
  output.ubuntuBionic - *terraform.NodeApplyableOutput
  output.ubuntuFocal - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:01 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_key_pair.kpOpencart
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_key_pair.kpOpencart" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving data.aws_ami.aviAmi
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "data.aws_ami.aviAmi" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach3
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach3" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_subnet.subnetMysql
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_subnet.subnetMysql" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-AutoScalingGroup-Policy
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-AutoScalingGroup-Policy" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/template"] serving data.template_file.backend
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "data.template_file.backend" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/template"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach4
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach4" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role.Ansible-Refined-Role
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_iam_role.Ansible-Refined-Role" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group.sgBackend
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_security_group.sgBackend" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach1
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach1" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_instance_profile.Ansible-Instance-Profile
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_iam_instance_profile.Ansible-Instance-Profile" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_instance.backend
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_instance.backend" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.ansible-attach1
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.ansible-attach1" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_subnet.subnetMgt
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_subnet.subnetMgt" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route53_record.aviCtrl
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_route53_record.aviCtrl" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table.rt
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_route_table.rt" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_instance.aviCtrl
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_instance.aviCtrl" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach5
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach5" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_subnet.subnetAviSeMgt
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_subnet.subnetAviSeMgt" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-ASG-Notification
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-ASG-Notification" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving data.aws_ami.ubuntuFocal
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "data.aws_ami.ubuntuFocal" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_subnet.subnetBackend
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_subnet.subnetBackend" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_instance_profile.AviController-Instance-Profile
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_iam_instance_profile.AviController-Instance-Profile" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table_association.subnetAssociationMgt
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_route_table_association.subnetAssociationMgt" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/null"] serving null_resource.foo7
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "null_resource.foo7" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/null"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_eip.eipForNatGw
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_eip.eipForNatGw" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-R53-Policy
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-R53-Policy" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role.AviController-Refined-Role
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_iam_role.AviController-Refined-Role" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_key_pair.kpBackend
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_key_pair.kpBackend" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.ansible-EC2-Policy
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_iam_policy.ansible-EC2-Policy" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group.sgJump
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_security_group.sgJump" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group.sgAvi
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_security_group.sgAvi" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table_association.subnetAssociationAviVs
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_route_table_association.subnetAssociationAviVs" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-EC2-Policy
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-EC2-Policy" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_autoscaling_group.autoScalingGroup
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_autoscaling_group.autoScalingGroup" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving data.aws_ami.ubuntuBionic
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "data.aws_ami.ubuntuBionic" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table_association.subnetAssociationBackend
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_route_table_association.subnetAssociationBackend" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_key_pair.kpAvi
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_key_pair.kpAvi" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group.sgOpencart
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_security_group.sgOpencart" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-SNS-Policy
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-SNS-Policy" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table.rtPrivate
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_route_table.rtPrivate" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route53_record.jump
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_route53_record.jump" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_nat_gateway.natGw
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_nat_gateway.natGw" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach8
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach8" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_internet_gateway.internetGateway
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_internet_gateway.internetGateway" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_subnet.subnetAviVs
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_subnet.subnetAviVs" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/template"] serving data.template_file.jump
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "data.template_file.jump" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/template"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_instance.jump
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_instance.jump" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_key_pair.kpJump
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_key_pair.kpJump" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-KMS-Policy
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-KMS-Policy" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach2
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach2" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy.vmimport
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_iam_role_policy.vmimport" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving data.aws_route53_zone.awsAviDemo
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "data.aws_route53_zone.awsAviDemo" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_key_pair.kpMysql
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_key_pair.kpMysql" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach6
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach6" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_vpc.vpc
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_vpc.vpc" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group.sgMysql
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_security_group.sgMysql" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving data.aws_availability_zones.available
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "data.aws_availability_zones.available" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_launch_template.templateAsg
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_launch_template.templateAsg" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table_association.subnetAssociationAviSeMgt
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_route_table_association.subnetAssociationAviSeMgt" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-SQS-Policy
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-SQS-Policy" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-IAM-Policy
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-IAM-Policy" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach7
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach7" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role.vmimport
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_iam_role.vmimport" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table_association.subnetAssociationMysql
2021/02/13 15:00:01 [DEBUG] ProviderTransformer: "aws_route_table_association.subnetAssociationMysql" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_eip.eipForNatGw - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-ASG-Notification - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-EC2-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-IAM-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-KMS-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-R53-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SNS-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SQS-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.ansible-EC2-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.Ansible-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.vmimport - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy.vmimport - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.aviCtrl - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.backend - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.jump - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.internetGateway - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpAvi - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpBackend - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpJump - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpMysql - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpOpencart - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_launch_template.templateAsg - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_nat_gateway.natGw - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.aviCtrl - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.jump - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table.rt - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table.rtPrivate - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviSeMgt - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMgt - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMysql - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgAvi - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgBackend - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgJump - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgMysql - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgOpencart - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviSeMgt - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviVs - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetBackend - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetMgt - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetMysql - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.aviAmi - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuFocal - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_route53_zone.awsAviDemo - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.template_file.backend - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  data.template_file.jump - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  null_resource.foo7 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  output.aviAmi - *terraform.NodeApplyableOutput
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
  output.az - *terraform.NodeApplyableOutput
  output.destroy - *terraform.NodeApplyableOutput
  output.jumpPublicIp - *terraform.NodeApplyableOutput
  output.ubuntuBionic - *terraform.NodeApplyableOutput
  output.ubuntuFocal - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:01 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/13 15:00:01 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/13 15:00:01 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/13 15:00:01 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/13 15:00:01 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  aws_autoscaling_group.autoScalingGroup - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_eip.eipForNatGw - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-ASG-Notification - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-EC2-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-IAM-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-KMS-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-R53-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SNS-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SQS-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.ansible-EC2-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.Ansible-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.vmimport - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy.vmimport - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.aviCtrl - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.backend - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.jump - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.internetGateway - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpAvi - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpBackend - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpJump - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpMysql - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpOpencart - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_launch_template.templateAsg - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_nat_gateway.natGw - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.aviCtrl - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.jump - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table.rt - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table.rtPrivate - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviSeMgt - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMgt - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMysql - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgAvi - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgBackend - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgJump - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgMysql - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgOpencart - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviSeMgt - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviVs - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetBackend - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetMgt - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetMysql - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.aviAmi - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuFocal - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_route53_zone.awsAviDemo - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.template_file.backend - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  data.template_file.jump - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  null_resource.foo7 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  output.aviAmi - *terraform.NodeApplyableOutput
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
  output.az - *terraform.NodeApplyableOutput
  output.destroy - *terraform.NodeApplyableOutput
  output.jumpPublicIp - *terraform.NodeApplyableOutput
  output.ubuntuBionic - *terraform.NodeApplyableOutput
  output.ubuntuFocal - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:01 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/13 15:00:01 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/13 15:00:01 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.sgMysql
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-EC2-Policy
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.jump
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching provisioner "remote-exec" config schema to aws_instance.jump
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table.rt
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.backend
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route53_record.jump
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach7
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_ami.aviAmi
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-ASG-Notification
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach3
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.aviCtrl
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role.Ansible-Refined-Role
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnetAviVs
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_availability_zones.available
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role.AviController-Refined-Role
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_nat_gateway.natGw
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.ansible-attach1
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach4
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table_association.subnetAssociationBackend
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach8
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_ami.ubuntuFocal
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role.vmimport
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnetMysql
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_autoscaling_group.autoScalingGroup
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnetBackend
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnetMgt
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_key_pair.kpAvi
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_ami.ubuntuBionic
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_key_pair.kpMysql
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach6
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_key_pair.kpBackend
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.sgOpencart
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_instance_profile.AviController-Instance-Profile
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_vpc.vpc
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-KMS-Policy
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route53_record.aviCtrl
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_launch_template.templateAsg
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.sgAvi
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_key_pair.kpJump
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table_association.subnetAssociationMysql
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.sgBackend
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach1
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach5
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnetAviSeMgt
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach2
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table_association.subnetAssociationAviSeMgt
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-AutoScalingGroup-Policy
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-SNS-Policy
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table_association.subnetAssociationAviVs
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table_association.subnetAssociationMgt
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy.vmimport
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_key_pair.kpOpencart
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-SQS-Policy
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table.rtPrivate
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_internet_gateway.internetGateway
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/null"]
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to null_resource.foo7
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching provisioner "file" config schema to null_resource.foo7
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching provisioner "file" config schema to null_resource.foo7
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching provisioner "remote-exec" config schema to null_resource.foo7
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.ansible-EC2-Policy
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_route53_zone.awsAviDemo
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_instance_profile.Ansible-Instance-Profile
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to data.template_file.backend
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_eip.eipForNatGw
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-R53-Policy
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.sgJump
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/template"]
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-IAM-Policy
2021/02/13 15:00:01 [TRACE] AttachSchemaTransformer: attaching resource schema to data.template_file.jump
2021/02/13 15:00:01 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/13 15:00:01 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/13 15:00:01 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/13 15:00:01 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/aws\"]" references: []
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_subnet.subnetMgt" references: [var.aws aws_vpc.vpc]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_key_pair.kpAvi" references: [var.public_key_path]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_key_pair.kpBackend" references: [var.public_key_path]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "data.aws_ami.ubuntuBionic" references: []
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_key_pair.kpMysql" references: [var.public_key_path]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach6" references: [aws_iam_policy.AviController-KMS-Policy aws_iam_role.AviController-Refined-Role]
2021/02/13 15:00:01 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_vpc.vpc" references: [var.aws var.aws]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "var.avi_username" references: []
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "output.ubuntuFocal" references: [data.aws_ami.ubuntuFocal]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_security_group.sgOpencart" references: [aws_vpc.vpc]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_iam_instance_profile.AviController-Instance-Profile" references: [aws_iam_role.AviController-Refined-Role]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_launch_template.templateAsg" references: [aws_security_group.sgBackend var.backend data.aws_ami.ubuntuBionic var.autoScalingGroupUserdata]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "var.avi_password" references: []
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-KMS-Policy" references: []
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_route53_record.aviCtrl" references: [aws_instance.aviCtrl var.controller var.aws data.aws_route53_zone.awsAviDemo]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationMysql" references: [aws_route_table.rtPrivate aws_subnet.subnetMysql]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "var.aws" references: []
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_security_group.sgAvi" references: [aws_vpc.vpc]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_key_pair.kpJump" references: [var.public_key_path]
2021/02/13 15:00:01 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:01 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:01 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_subnet.subnetAviSeMgt" references: [data.aws_availability_zones.available var.aws data.aws_availability_zones.available aws_vpc.vpc]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_security_group.sgBackend" references: [aws_vpc.vpc]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "var.public_key_path" references: []
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "provisioner.file" references: []
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach1" references: [aws_iam_policy.AviController-EC2-Policy aws_iam_role.AviController-Refined-Role]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach5" references: [aws_iam_policy.AviController-SQS-Policy aws_iam_role.AviController-Refined-Role]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationMgt" references: [aws_subnet.subnetMgt aws_route_table.rt]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach2" references: [aws_iam_role.AviController-Refined-Role aws_iam_policy.AviController-R53-Policy]
2021/02/13 15:00:01 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationAviSeMgt" references: [data.aws_availability_zones.available aws_subnet.subnetAviSeMgt aws_route_table.rt]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-AutoScalingGroup-Policy" references: []
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-SNS-Policy" references: []
2021/02/13 15:00:01 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationAviVs" references: [data.aws_availability_zones.available aws_route_table.rt aws_subnet.subnetAviVs]
2021/02/13 15:00:01 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_internet_gateway.internetGateway" references: [var.aws aws_vpc.vpc]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_iam_role_policy.vmimport" references: [aws_iam_role.vmimport]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_key_pair.kpOpencart" references: [var.public_key_path]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-SQS-Policy" references: []
2021/02/13 15:00:01 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_route_table.rtPrivate" references: [var.aws aws_vpc.vpc aws_nat_gateway.natGw]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "data.aws_route53_zone.awsAviDemo" references: [var.aws]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "var.privateKey" references: []
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/null\"]" references: []
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "null_resource.foo7" references: [aws_instance.jump aws_instance.jump var.privateKey var.jump var.privateKey var.privateKey var.ansible var.privateKey var.ansible var.ansible var.ansible var.avi_username var.avi_password var.controller var.controller aws_instance.aviCtrl aws_instance.aviCtrl var.aws data.aws_availability_zones.available aws_subnet.subnetAviVs aws_subnet.subnetAviSeMgt aws_vpc.vpc aws_instance.backend aws_autoscaling_group.autoScalingGroup]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_iam_policy.ansible-EC2-Policy" references: []
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_security_group.sgJump" references: [aws_vpc.vpc]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_iam_instance_profile.Ansible-Instance-Profile" references: [aws_iam_role.Ansible-Refined-Role]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "data.template_file.backend" references: [var.backend var.backend var.backend]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "var.backend" references: []
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "output.aviAmi" references: [data.aws_ami.aviAmi]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_eip.eipForNatGw" references: [aws_internet_gateway.internetGateway]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-R53-Policy" references: []
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "var.controller" references: []
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "output.ubuntuBionic" references: [data.aws_ami.ubuntuBionic]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/template\"]" references: []
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-IAM-Policy" references: []
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "data.template_file.jump" references: [var.jump var.ansible var.jump var.privateKey var.ansible var.jump]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_route53_record.jump" references: [data.aws_route53_zone.awsAviDemo aws_instance.jump var.jump var.aws]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_security_group.sgMysql" references: [aws_vpc.vpc]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-EC2-Policy" references: []
2021/02/13 15:00:01 [INFO] ReferenceTransformer: reference not found: "self"
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_instance.jump" references: [var.jump aws_subnet.subnetMgt data.aws_ami.ubuntuFocal aws_key_pair.kpJump aws_security_group.sgJump aws_iam_instance_profile.Ansible-Instance-Profile data.template_file.jump var.privateKey var.jump]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "provisioner.remote-exec" references: []
2021/02/13 15:00:01 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:01 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_route_table.rt" references: [var.aws aws_vpc.vpc aws_internet_gateway.internetGateway]
2021/02/13 15:00:01 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:01 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_instance.backend" references: [data.aws_availability_zones.available var.backend aws_subnet.subnetBackend data.aws_ami.ubuntuBionic aws_key_pair.kpBackend aws_security_group.sgBackend data.template_file.backend]
2021/02/13 15:00:01 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_instance.aviCtrl" references: [var.controller aws_key_pair.kpAvi aws_security_group.sgAvi aws_iam_instance_profile.AviController-Instance-Profile var.controller aws_subnet.subnetMgt data.aws_ami.aviAmi]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach7" references: [aws_iam_policy.AviController-ASG-Notification aws_iam_role.AviController-Refined-Role]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "data.aws_ami.aviAmi" references: [var.controller]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "output.aviCtrlPublicIp" references: [aws_instance.aviCtrl]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-ASG-Notification" references: []
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach3" references: [aws_iam_policy.AviController-AutoScalingGroup-Policy aws_iam_role.AviController-Refined-Role]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.ansible-attach1" references: [aws_iam_policy.ansible-EC2-Policy aws_iam_role.Ansible-Refined-Role]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_iam_role.Ansible-Refined-Role" references: []
2021/02/13 15:00:01 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:01 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:01 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_subnet.subnetAviVs" references: [data.aws_availability_zones.available data.aws_availability_zones.available var.aws aws_vpc.vpc]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "data.aws_availability_zones.available" references: []
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "var.autoScalingGroupUserdata" references: []
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "output.destroy" references: [var.privateKey aws_instance.jump var.ansible var.ansible var.controller]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_iam_role.AviController-Refined-Role" references: []
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_nat_gateway.natGw" references: [aws_eip.eipForNatGw aws_subnet.subnetMgt]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_autoscaling_group.autoScalingGroup" references: [aws_subnet.subnetBackend aws_subnet.subnetBackend aws_subnet.subnetBackend aws_launch_template.templateAsg]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach4" references: [aws_iam_policy.AviController-SNS-Policy aws_iam_role.AviController-Refined-Role]
2021/02/13 15:00:01 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationBackend" references: [data.aws_availability_zones.available aws_route_table.rtPrivate aws_subnet.subnetBackend]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach8" references: [aws_iam_role.AviController-Refined-Role aws_iam_policy.AviController-IAM-Policy]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "data.aws_ami.ubuntuFocal" references: []
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "var.jump" references: []
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_iam_role.vmimport" references: []
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_subnet.subnetMysql" references: [aws_vpc.vpc var.aws]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "output.jumpPublicIp" references: [aws_instance.jump]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "output.az" references: [data.aws_availability_zones.available]
2021/02/13 15:00:01 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:01 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:01 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "aws_subnet.subnetBackend" references: [data.aws_availability_zones.available data.aws_availability_zones.available var.aws aws_vpc.vpc]
2021/02/13 15:00:01 [DEBUG] ReferenceTransformer: "var.ansible" references: []
2021/02/13 15:00:01 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup - *terraform.NodeValidatableResource
    aws_launch_template.templateAsg - *terraform.NodeValidatableResource
    aws_subnet.subnetBackend - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_eip.eipForNatGw - *terraform.NodeValidatableResource
    aws_internet_gateway.internetGateway - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeValidatableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-ASG-Notification - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-EC2-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-IAM-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-KMS-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-R53-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SNS-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SQS-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.ansible-EC2-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.Ansible-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.vmimport - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy.vmimport - *terraform.NodeValidatableResource
    aws_iam_role.vmimport - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeValidatableResource
    aws_iam_policy.ansible-EC2-Policy - *terraform.NodeValidatableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-EC2-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-R53-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-SNS-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-SQS-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-KMS-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-ASG-Notification - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-IAM-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.aviCtrl - *terraform.NodeValidatableResource
    aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeValidatableResource
    aws_key_pair.kpAvi - *terraform.NodeValidatableResource
    aws_security_group.sgAvi - *terraform.NodeValidatableResource
    aws_subnet.subnetMgt - *terraform.NodeValidatableResource
    data.aws_ami.aviAmi - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.controller - *terraform.NodeRootVariable
  aws_instance.backend - *terraform.NodeValidatableResource
    aws_key_pair.kpBackend - *terraform.NodeValidatableResource
    aws_security_group.sgBackend - *terraform.NodeValidatableResource
    aws_subnet.subnetBackend - *terraform.NodeValidatableResource
    data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    data.template_file.backend - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  aws_instance.jump - *terraform.NodeValidatableResource
    aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeValidatableResource
    aws_key_pair.kpJump - *terraform.NodeValidatableResource
    aws_security_group.sgJump - *terraform.NodeValidatableResource
    aws_subnet.subnetMgt - *terraform.NodeValidatableResource
    data.aws_ami.ubuntuFocal - *terraform.NodeValidatableResource
    data.template_file.jump - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  aws_internet_gateway.internetGateway - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_key_pair.kpAvi - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpBackend - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpJump - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpMysql - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpOpencart - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_launch_template.templateAsg - *terraform.NodeValidatableResource
    aws_security_group.sgBackend - *terraform.NodeValidatableResource
    data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.autoScalingGroupUserdata - *terraform.NodeRootVariable
    var.backend - *terraform.NodeRootVariable
  aws_nat_gateway.natGw - *terraform.NodeValidatableResource
    aws_eip.eipForNatGw - *terraform.NodeValidatableResource
    aws_subnet.subnetMgt - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.aviCtrl - *terraform.NodeValidatableResource
    aws_instance.aviCtrl - *terraform.NodeValidatableResource
    data.aws_route53_zone.awsAviDemo - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
  aws_route53_record.jump - *terraform.NodeValidatableResource
    aws_instance.jump - *terraform.NodeValidatableResource
    data.aws_route53_zone.awsAviDemo - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
  aws_route_table.rt - *terraform.NodeValidatableResource
    aws_internet_gateway.internetGateway - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table.rtPrivate - *terraform.NodeValidatableResource
    aws_nat_gateway.natGw - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table_association.subnetAssociationAviSeMgt - *terraform.NodeValidatableResource
    aws_route_table.rt - *terraform.NodeValidatableResource
    aws_subnet.subnetAviSeMgt - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs - *terraform.NodeValidatableResource
    aws_route_table.rt - *terraform.NodeValidatableResource
    aws_subnet.subnetAviVs - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend - *terraform.NodeValidatableResource
    aws_route_table.rtPrivate - *terraform.NodeValidatableResource
    aws_subnet.subnetBackend - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMgt - *terraform.NodeValidatableResource
    aws_route_table.rt - *terraform.NodeValidatableResource
    aws_subnet.subnetMgt - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMysql - *terraform.NodeValidatableResource
    aws_route_table.rtPrivate - *terraform.NodeValidatableResource
    aws_subnet.subnetMysql - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgAvi - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgBackend - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgJump - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgMysql - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgOpencart - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviSeMgt - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviVs - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetBackend - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetMgt - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetMysql - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  data.aws_ami.aviAmi - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.controller - *terraform.NodeRootVariable
  data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuFocal - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_route53_zone.awsAviDemo - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  data.template_file.backend - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  data.template_file.jump - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
    var.ansible - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  null_resource.foo7 - *terraform.NodeValidatableResource
    aws_autoscaling_group.autoScalingGroup - *terraform.NodeValidatableResource
    aws_instance.aviCtrl - *terraform.NodeValidatableResource
    aws_instance.backend - *terraform.NodeValidatableResource
    aws_instance.jump - *terraform.NodeValidatableResource
    aws_subnet.subnetAviSeMgt - *terraform.NodeValidatableResource
    aws_subnet.subnetAviVs - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ansible - *terraform.NodeRootVariable
    var.avi_password - *terraform.NodeRootVariable
    var.avi_username - *terraform.NodeRootVariable
    var.aws - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  output.aviAmi - *terraform.NodeApplyableOutput
    data.aws_ami.aviAmi - *terraform.NodeValidatableResource
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
    aws_instance.aviCtrl - *terraform.NodeValidatableResource
  output.az - *terraform.NodeApplyableOutput
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
  output.destroy - *terraform.NodeApplyableOutput
    aws_instance.jump - *terraform.NodeValidatableResource
    var.ansible - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  output.jumpPublicIp - *terraform.NodeApplyableOutput
    aws_instance.jump - *terraform.NodeValidatableResource
  output.ubuntuBionic - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
  output.ubuntuFocal - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuFocal - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:01 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/13 15:00:01 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/13 15:00:01 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/13 15:00:01 [TRACE] attachDataDependenciesTransformer: data.aws_ami.ubuntuFocal depends on []
2021/02/13 15:00:01 [TRACE] attachDataDependenciesTransformer: data.aws_ami.ubuntuBionic depends on []
2021/02/13 15:00:01 [TRACE] attachDataDependenciesTransformer: data.aws_route53_zone.awsAviDemo depends on []
2021/02/13 15:00:01 [TRACE] attachDataDependenciesTransformer: data.template_file.backend depends on []
2021/02/13 15:00:01 [TRACE] attachDataDependenciesTransformer: data.template_file.jump depends on []
2021/02/13 15:00:01 [TRACE] attachDataDependenciesTransformer: data.aws_ami.aviAmi depends on []
2021/02/13 15:00:01 [TRACE] attachDataDependenciesTransformer: data.aws_availability_zones.available depends on []
2021/02/13 15:00:01 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/13 15:00:01 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:01 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:01 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/13 15:00:01 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/13 15:00:01 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/13 15:00:01 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup - *terraform.NodeValidatableResource
    aws_launch_template.templateAsg - *terraform.NodeValidatableResource
    aws_subnet.subnetBackend - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_eip.eipForNatGw - *terraform.NodeValidatableResource
    aws_internet_gateway.internetGateway - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeValidatableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-ASG-Notification - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-EC2-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-IAM-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-KMS-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-R53-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SNS-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SQS-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.ansible-EC2-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.Ansible-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.vmimport - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy.vmimport - *terraform.NodeValidatableResource
    aws_iam_role.vmimport - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeValidatableResource
    aws_iam_policy.ansible-EC2-Policy - *terraform.NodeValidatableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-EC2-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-R53-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-SNS-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-SQS-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-KMS-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-ASG-Notification - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-IAM-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.aviCtrl - *terraform.NodeValidatableResource
    aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeValidatableResource
    aws_key_pair.kpAvi - *terraform.NodeValidatableResource
    aws_security_group.sgAvi - *terraform.NodeValidatableResource
    aws_subnet.subnetMgt - *terraform.NodeValidatableResource
    data.aws_ami.aviAmi - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.controller - *terraform.NodeRootVariable
  aws_instance.backend - *terraform.NodeValidatableResource
    aws_key_pair.kpBackend - *terraform.NodeValidatableResource
    aws_security_group.sgBackend - *terraform.NodeValidatableResource
    aws_subnet.subnetBackend - *terraform.NodeValidatableResource
    data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    data.template_file.backend - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  aws_instance.jump - *terraform.NodeValidatableResource
    aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeValidatableResource
    aws_key_pair.kpJump - *terraform.NodeValidatableResource
    aws_security_group.sgJump - *terraform.NodeValidatableResource
    aws_subnet.subnetMgt - *terraform.NodeValidatableResource
    data.aws_ami.ubuntuFocal - *terraform.NodeValidatableResource
    data.template_file.jump - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  aws_internet_gateway.internetGateway - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_key_pair.kpAvi - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpBackend - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpJump - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpMysql - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpOpencart - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_launch_template.templateAsg - *terraform.NodeValidatableResource
    aws_security_group.sgBackend - *terraform.NodeValidatableResource
    data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.autoScalingGroupUserdata - *terraform.NodeRootVariable
    var.backend - *terraform.NodeRootVariable
  aws_nat_gateway.natGw - *terraform.NodeValidatableResource
    aws_eip.eipForNatGw - *terraform.NodeValidatableResource
    aws_subnet.subnetMgt - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.aviCtrl - *terraform.NodeValidatableResource
    aws_instance.aviCtrl - *terraform.NodeValidatableResource
    data.aws_route53_zone.awsAviDemo - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
  aws_route53_record.jump - *terraform.NodeValidatableResource
    aws_instance.jump - *terraform.NodeValidatableResource
    data.aws_route53_zone.awsAviDemo - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
  aws_route_table.rt - *terraform.NodeValidatableResource
    aws_internet_gateway.internetGateway - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table.rtPrivate - *terraform.NodeValidatableResource
    aws_nat_gateway.natGw - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table_association.subnetAssociationAviSeMgt - *terraform.NodeValidatableResource
    aws_route_table.rt - *terraform.NodeValidatableResource
    aws_subnet.subnetAviSeMgt - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs - *terraform.NodeValidatableResource
    aws_route_table.rt - *terraform.NodeValidatableResource
    aws_subnet.subnetAviVs - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend - *terraform.NodeValidatableResource
    aws_route_table.rtPrivate - *terraform.NodeValidatableResource
    aws_subnet.subnetBackend - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMgt - *terraform.NodeValidatableResource
    aws_route_table.rt - *terraform.NodeValidatableResource
    aws_subnet.subnetMgt - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMysql - *terraform.NodeValidatableResource
    aws_route_table.rtPrivate - *terraform.NodeValidatableResource
    aws_subnet.subnetMysql - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgAvi - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgBackend - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgJump - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgMysql - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgOpencart - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviSeMgt - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviVs - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetBackend - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetMgt - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetMysql - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  data.aws_ami.aviAmi - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.controller - *terraform.NodeRootVariable
  data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuFocal - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_route53_zone.awsAviDemo - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  data.template_file.backend - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  data.template_file.jump - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
    var.ansible - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_autoscaling_group.autoScalingGroup - *terraform.NodeValidatableResource
    aws_eip.eipForNatGw - *terraform.NodeValidatableResource
    aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeValidatableResource
    aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-ASG-Notification - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-EC2-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-IAM-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-KMS-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-R53-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-SNS-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-SQS-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.ansible-EC2-Policy - *terraform.NodeValidatableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    aws_iam_role.vmimport - *terraform.NodeValidatableResource
    aws_iam_role_policy.vmimport - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeValidatableResource
    aws_instance.aviCtrl - *terraform.NodeValidatableResource
    aws_instance.backend - *terraform.NodeValidatableResource
    aws_instance.jump - *terraform.NodeValidatableResource
    aws_internet_gateway.internetGateway - *terraform.NodeValidatableResource
    aws_key_pair.kpAvi - *terraform.NodeValidatableResource
    aws_key_pair.kpBackend - *terraform.NodeValidatableResource
    aws_key_pair.kpJump - *terraform.NodeValidatableResource
    aws_key_pair.kpMysql - *terraform.NodeValidatableResource
    aws_key_pair.kpOpencart - *terraform.NodeValidatableResource
    aws_launch_template.templateAsg - *terraform.NodeValidatableResource
    aws_nat_gateway.natGw - *terraform.NodeValidatableResource
    aws_route53_record.aviCtrl - *terraform.NodeValidatableResource
    aws_route53_record.jump - *terraform.NodeValidatableResource
    aws_route_table.rt - *terraform.NodeValidatableResource
    aws_route_table.rtPrivate - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationAviSeMgt - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationAviVs - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationBackend - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationMgt - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationMysql - *terraform.NodeValidatableResource
    aws_security_group.sgAvi - *terraform.NodeValidatableResource
    aws_security_group.sgBackend - *terraform.NodeValidatableResource
    aws_security_group.sgJump - *terraform.NodeValidatableResource
    aws_security_group.sgMysql - *terraform.NodeValidatableResource
    aws_security_group.sgOpencart - *terraform.NodeValidatableResource
    aws_subnet.subnetAviSeMgt - *terraform.NodeValidatableResource
    aws_subnet.subnetAviVs - *terraform.NodeValidatableResource
    aws_subnet.subnetBackend - *terraform.NodeValidatableResource
    aws_subnet.subnetMgt - *terraform.NodeValidatableResource
    aws_subnet.subnetMysql - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    data.aws_ami.aviAmi - *terraform.NodeValidatableResource
    data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
    data.aws_ami.ubuntuFocal - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    data.aws_route53_zone.awsAviDemo - *terraform.NodeValidatableResource
    data.template_file.backend - *terraform.NodeValidatableResource
    data.template_file.jump - *terraform.NodeValidatableResource
    null_resource.foo7 - *terraform.NodeValidatableResource
    output.aviAmi - *terraform.NodeApplyableOutput
    output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
    output.az - *terraform.NodeApplyableOutput
    output.destroy - *terraform.NodeApplyableOutput
    output.jumpPublicIp - *terraform.NodeApplyableOutput
    output.ubuntuBionic - *terraform.NodeApplyableOutput
    output.ubuntuFocal - *terraform.NodeApplyableOutput
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ansible - *terraform.NodeRootVariable
    var.autoScalingGroupUserdata - *terraform.NodeRootVariable
    var.avi_password - *terraform.NodeRootVariable
    var.avi_username - *terraform.NodeRootVariable
    var.aws - *terraform.NodeRootVariable
    var.backend - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
    var.public_key_path - *terraform.NodeRootVariable
  null_resource.foo7 - *terraform.NodeValidatableResource
    aws_autoscaling_group.autoScalingGroup - *terraform.NodeValidatableResource
    aws_instance.aviCtrl - *terraform.NodeValidatableResource
    aws_instance.backend - *terraform.NodeValidatableResource
    aws_instance.jump - *terraform.NodeValidatableResource
    aws_subnet.subnetAviSeMgt - *terraform.NodeValidatableResource
    aws_subnet.subnetAviVs - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ansible - *terraform.NodeRootVariable
    var.avi_password - *terraform.NodeRootVariable
    var.avi_username - *terraform.NodeRootVariable
    var.aws - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  output.aviAmi - *terraform.NodeApplyableOutput
    data.aws_ami.aviAmi - *terraform.NodeValidatableResource
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
    aws_instance.aviCtrl - *terraform.NodeValidatableResource
  output.az - *terraform.NodeApplyableOutput
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
  output.destroy - *terraform.NodeApplyableOutput
    aws_instance.jump - *terraform.NodeValidatableResource
    var.ansible - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  output.jumpPublicIp - *terraform.NodeApplyableOutput
    aws_instance.jump - *terraform.NodeValidatableResource
  output.ubuntuBionic - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
  output.ubuntuFocal - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuFocal - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:01 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/13 15:00:01 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup - *terraform.NodeValidatableResource
    aws_launch_template.templateAsg - *terraform.NodeValidatableResource
    aws_subnet.subnetBackend - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_eip.eipForNatGw - *terraform.NodeValidatableResource
    aws_internet_gateway.internetGateway - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeValidatableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-ASG-Notification - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-EC2-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-IAM-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-KMS-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-R53-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SNS-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SQS-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.ansible-EC2-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.Ansible-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.vmimport - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy.vmimport - *terraform.NodeValidatableResource
    aws_iam_role.vmimport - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeValidatableResource
    aws_iam_policy.ansible-EC2-Policy - *terraform.NodeValidatableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-EC2-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-R53-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-SNS-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-SQS-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-KMS-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-ASG-Notification - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-IAM-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.aviCtrl - *terraform.NodeValidatableResource
    aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeValidatableResource
    aws_key_pair.kpAvi - *terraform.NodeValidatableResource
    aws_security_group.sgAvi - *terraform.NodeValidatableResource
    aws_subnet.subnetMgt - *terraform.NodeValidatableResource
    data.aws_ami.aviAmi - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.controller - *terraform.NodeRootVariable
  aws_instance.backend - *terraform.NodeValidatableResource
    aws_key_pair.kpBackend - *terraform.NodeValidatableResource
    aws_security_group.sgBackend - *terraform.NodeValidatableResource
    aws_subnet.subnetBackend - *terraform.NodeValidatableResource
    data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    data.template_file.backend - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  aws_instance.jump - *terraform.NodeValidatableResource
    aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeValidatableResource
    aws_key_pair.kpJump - *terraform.NodeValidatableResource
    aws_security_group.sgJump - *terraform.NodeValidatableResource
    aws_subnet.subnetMgt - *terraform.NodeValidatableResource
    data.aws_ami.ubuntuFocal - *terraform.NodeValidatableResource
    data.template_file.jump - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  aws_internet_gateway.internetGateway - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_key_pair.kpAvi - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpBackend - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpJump - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpMysql - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpOpencart - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_launch_template.templateAsg - *terraform.NodeValidatableResource
    aws_security_group.sgBackend - *terraform.NodeValidatableResource
    data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.autoScalingGroupUserdata - *terraform.NodeRootVariable
    var.backend - *terraform.NodeRootVariable
  aws_nat_gateway.natGw - *terraform.NodeValidatableResource
    aws_eip.eipForNatGw - *terraform.NodeValidatableResource
    aws_subnet.subnetMgt - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.aviCtrl - *terraform.NodeValidatableResource
    aws_instance.aviCtrl - *terraform.NodeValidatableResource
    data.aws_route53_zone.awsAviDemo - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
  aws_route53_record.jump - *terraform.NodeValidatableResource
    aws_instance.jump - *terraform.NodeValidatableResource
    data.aws_route53_zone.awsAviDemo - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
  aws_route_table.rt - *terraform.NodeValidatableResource
    aws_internet_gateway.internetGateway - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table.rtPrivate - *terraform.NodeValidatableResource
    aws_nat_gateway.natGw - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table_association.subnetAssociationAviSeMgt - *terraform.NodeValidatableResource
    aws_route_table.rt - *terraform.NodeValidatableResource
    aws_subnet.subnetAviSeMgt - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs - *terraform.NodeValidatableResource
    aws_route_table.rt - *terraform.NodeValidatableResource
    aws_subnet.subnetAviVs - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend - *terraform.NodeValidatableResource
    aws_route_table.rtPrivate - *terraform.NodeValidatableResource
    aws_subnet.subnetBackend - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMgt - *terraform.NodeValidatableResource
    aws_route_table.rt - *terraform.NodeValidatableResource
    aws_subnet.subnetMgt - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMysql - *terraform.NodeValidatableResource
    aws_route_table.rtPrivate - *terraform.NodeValidatableResource
    aws_subnet.subnetMysql - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgAvi - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgBackend - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgJump - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgMysql - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgOpencart - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviSeMgt - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviVs - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetBackend - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetMgt - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetMysql - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  data.aws_ami.aviAmi - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.controller - *terraform.NodeRootVariable
  data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuFocal - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_route53_zone.awsAviDemo - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  data.template_file.backend - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  data.template_file.jump - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
    var.ansible - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_autoscaling_group.autoScalingGroup - *terraform.NodeValidatableResource
    aws_eip.eipForNatGw - *terraform.NodeValidatableResource
    aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeValidatableResource
    aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-ASG-Notification - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-EC2-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-IAM-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-KMS-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-R53-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-SNS-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-SQS-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.ansible-EC2-Policy - *terraform.NodeValidatableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    aws_iam_role.vmimport - *terraform.NodeValidatableResource
    aws_iam_role_policy.vmimport - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeValidatableResource
    aws_instance.aviCtrl - *terraform.NodeValidatableResource
    aws_instance.backend - *terraform.NodeValidatableResource
    aws_instance.jump - *terraform.NodeValidatableResource
    aws_internet_gateway.internetGateway - *terraform.NodeValidatableResource
    aws_key_pair.kpAvi - *terraform.NodeValidatableResource
    aws_key_pair.kpBackend - *terraform.NodeValidatableResource
    aws_key_pair.kpJump - *terraform.NodeValidatableResource
    aws_key_pair.kpMysql - *terraform.NodeValidatableResource
    aws_key_pair.kpOpencart - *terraform.NodeValidatableResource
    aws_launch_template.templateAsg - *terraform.NodeValidatableResource
    aws_nat_gateway.natGw - *terraform.NodeValidatableResource
    aws_route53_record.aviCtrl - *terraform.NodeValidatableResource
    aws_route53_record.jump - *terraform.NodeValidatableResource
    aws_route_table.rt - *terraform.NodeValidatableResource
    aws_route_table.rtPrivate - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationAviSeMgt - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationAviVs - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationBackend - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationMgt - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationMysql - *terraform.NodeValidatableResource
    aws_security_group.sgAvi - *terraform.NodeValidatableResource
    aws_security_group.sgBackend - *terraform.NodeValidatableResource
    aws_security_group.sgJump - *terraform.NodeValidatableResource
    aws_security_group.sgMysql - *terraform.NodeValidatableResource
    aws_security_group.sgOpencart - *terraform.NodeValidatableResource
    aws_subnet.subnetAviSeMgt - *terraform.NodeValidatableResource
    aws_subnet.subnetAviVs - *terraform.NodeValidatableResource
    aws_subnet.subnetBackend - *terraform.NodeValidatableResource
    aws_subnet.subnetMgt - *terraform.NodeValidatableResource
    aws_subnet.subnetMysql - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    data.aws_ami.aviAmi - *terraform.NodeValidatableResource
    data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
    data.aws_ami.ubuntuFocal - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    data.aws_route53_zone.awsAviDemo - *terraform.NodeValidatableResource
    data.template_file.backend - *terraform.NodeValidatableResource
    data.template_file.jump - *terraform.NodeValidatableResource
    null_resource.foo7 - *terraform.NodeValidatableResource
    output.aviAmi - *terraform.NodeApplyableOutput
    output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
    output.az - *terraform.NodeApplyableOutput
    output.destroy - *terraform.NodeApplyableOutput
    output.jumpPublicIp - *terraform.NodeApplyableOutput
    output.ubuntuBionic - *terraform.NodeApplyableOutput
    output.ubuntuFocal - *terraform.NodeApplyableOutput
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ansible - *terraform.NodeRootVariable
    var.autoScalingGroupUserdata - *terraform.NodeRootVariable
    var.avi_password - *terraform.NodeRootVariable
    var.avi_username - *terraform.NodeRootVariable
    var.aws - *terraform.NodeRootVariable
    var.backend - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
    var.public_key_path - *terraform.NodeRootVariable
  null_resource.foo7 - *terraform.NodeValidatableResource
    aws_autoscaling_group.autoScalingGroup - *terraform.NodeValidatableResource
    aws_instance.aviCtrl - *terraform.NodeValidatableResource
    aws_instance.backend - *terraform.NodeValidatableResource
    aws_instance.jump - *terraform.NodeValidatableResource
    aws_subnet.subnetAviSeMgt - *terraform.NodeValidatableResource
    aws_subnet.subnetAviVs - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ansible - *terraform.NodeRootVariable
    var.avi_password - *terraform.NodeRootVariable
    var.avi_username - *terraform.NodeRootVariable
    var.aws - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  output.aviAmi - *terraform.NodeApplyableOutput
    data.aws_ami.aviAmi - *terraform.NodeValidatableResource
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
    aws_instance.aviCtrl - *terraform.NodeValidatableResource
  output.az - *terraform.NodeApplyableOutput
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
  output.destroy - *terraform.NodeApplyableOutput
    aws_instance.jump - *terraform.NodeValidatableResource
    var.ansible - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  output.jumpPublicIp - *terraform.NodeApplyableOutput
    aws_instance.jump - *terraform.NodeValidatableResource
  output.ubuntuBionic - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
  output.ubuntuFocal - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuFocal - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    aws_autoscaling_group.autoScalingGroup - *terraform.NodeValidatableResource
    aws_eip.eipForNatGw - *terraform.NodeValidatableResource
    aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeValidatableResource
    aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-ASG-Notification - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-EC2-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-IAM-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-KMS-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-R53-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-SNS-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-SQS-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.ansible-EC2-Policy - *terraform.NodeValidatableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    aws_iam_role.vmimport - *terraform.NodeValidatableResource
    aws_iam_role_policy.vmimport - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeValidatableResource
    aws_instance.aviCtrl - *terraform.NodeValidatableResource
    aws_instance.backend - *terraform.NodeValidatableResource
    aws_instance.jump - *terraform.NodeValidatableResource
    aws_internet_gateway.internetGateway - *terraform.NodeValidatableResource
    aws_key_pair.kpAvi - *terraform.NodeValidatableResource
    aws_key_pair.kpBackend - *terraform.NodeValidatableResource
    aws_key_pair.kpJump - *terraform.NodeValidatableResource
    aws_key_pair.kpMysql - *terraform.NodeValidatableResource
    aws_key_pair.kpOpencart - *terraform.NodeValidatableResource
    aws_launch_template.templateAsg - *terraform.NodeValidatableResource
    aws_nat_gateway.natGw - *terraform.NodeValidatableResource
    aws_route53_record.aviCtrl - *terraform.NodeValidatableResource
    aws_route53_record.jump - *terraform.NodeValidatableResource
    aws_route_table.rt - *terraform.NodeValidatableResource
    aws_route_table.rtPrivate - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationAviSeMgt - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationAviVs - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationBackend - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationMgt - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationMysql - *terraform.NodeValidatableResource
    aws_security_group.sgAvi - *terraform.NodeValidatableResource
    aws_security_group.sgBackend - *terraform.NodeValidatableResource
    aws_security_group.sgJump - *terraform.NodeValidatableResource
    aws_security_group.sgMysql - *terraform.NodeValidatableResource
    aws_security_group.sgOpencart - *terraform.NodeValidatableResource
    aws_subnet.subnetAviSeMgt - *terraform.NodeValidatableResource
    aws_subnet.subnetAviVs - *terraform.NodeValidatableResource
    aws_subnet.subnetBackend - *terraform.NodeValidatableResource
    aws_subnet.subnetMgt - *terraform.NodeValidatableResource
    aws_subnet.subnetMysql - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    data.aws_ami.aviAmi - *terraform.NodeValidatableResource
    data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
    data.aws_ami.ubuntuFocal - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    data.aws_route53_zone.awsAviDemo - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] (close) - *terraform.graphNodeCloseProvider
    null_resource.foo7 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] (close) - *terraform.graphNodeCloseProvider
    data.template_file.backend - *terraform.NodeValidatableResource
    data.template_file.jump - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:01 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/13 15:00:01 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup - *terraform.NodeValidatableResource
    aws_launch_template.templateAsg - *terraform.NodeValidatableResource
    aws_subnet.subnetBackend - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_eip.eipForNatGw - *terraform.NodeValidatableResource
    aws_internet_gateway.internetGateway - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeValidatableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-ASG-Notification - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-EC2-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-IAM-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-KMS-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-R53-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SNS-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SQS-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.ansible-EC2-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.Ansible-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.vmimport - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy.vmimport - *terraform.NodeValidatableResource
    aws_iam_role.vmimport - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeValidatableResource
    aws_iam_policy.ansible-EC2-Policy - *terraform.NodeValidatableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-EC2-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-R53-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-SNS-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-SQS-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-KMS-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-ASG-Notification - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-IAM-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.aviCtrl - *terraform.NodeValidatableResource
    aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeValidatableResource
    aws_key_pair.kpAvi - *terraform.NodeValidatableResource
    aws_security_group.sgAvi - *terraform.NodeValidatableResource
    aws_subnet.subnetMgt - *terraform.NodeValidatableResource
    data.aws_ami.aviAmi - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.controller - *terraform.NodeRootVariable
  aws_instance.backend - *terraform.NodeValidatableResource
    aws_key_pair.kpBackend - *terraform.NodeValidatableResource
    aws_security_group.sgBackend - *terraform.NodeValidatableResource
    aws_subnet.subnetBackend - *terraform.NodeValidatableResource
    data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    data.template_file.backend - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  aws_instance.jump - *terraform.NodeValidatableResource
    aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeValidatableResource
    aws_key_pair.kpJump - *terraform.NodeValidatableResource
    aws_security_group.sgJump - *terraform.NodeValidatableResource
    aws_subnet.subnetMgt - *terraform.NodeValidatableResource
    data.aws_ami.ubuntuFocal - *terraform.NodeValidatableResource
    data.template_file.jump - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  aws_internet_gateway.internetGateway - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_key_pair.kpAvi - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpBackend - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpJump - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpMysql - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpOpencart - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_launch_template.templateAsg - *terraform.NodeValidatableResource
    aws_security_group.sgBackend - *terraform.NodeValidatableResource
    data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.autoScalingGroupUserdata - *terraform.NodeRootVariable
    var.backend - *terraform.NodeRootVariable
  aws_nat_gateway.natGw - *terraform.NodeValidatableResource
    aws_eip.eipForNatGw - *terraform.NodeValidatableResource
    aws_subnet.subnetMgt - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.aviCtrl - *terraform.NodeValidatableResource
    aws_instance.aviCtrl - *terraform.NodeValidatableResource
    data.aws_route53_zone.awsAviDemo - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
  aws_route53_record.jump - *terraform.NodeValidatableResource
    aws_instance.jump - *terraform.NodeValidatableResource
    data.aws_route53_zone.awsAviDemo - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
  aws_route_table.rt - *terraform.NodeValidatableResource
    aws_internet_gateway.internetGateway - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table.rtPrivate - *terraform.NodeValidatableResource
    aws_nat_gateway.natGw - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table_association.subnetAssociationAviSeMgt - *terraform.NodeValidatableResource
    aws_route_table.rt - *terraform.NodeValidatableResource
    aws_subnet.subnetAviSeMgt - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs - *terraform.NodeValidatableResource
    aws_route_table.rt - *terraform.NodeValidatableResource
    aws_subnet.subnetAviVs - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend - *terraform.NodeValidatableResource
    aws_route_table.rtPrivate - *terraform.NodeValidatableResource
    aws_subnet.subnetBackend - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMgt - *terraform.NodeValidatableResource
    aws_route_table.rt - *terraform.NodeValidatableResource
    aws_subnet.subnetMgt - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMysql - *terraform.NodeValidatableResource
    aws_route_table.rtPrivate - *terraform.NodeValidatableResource
    aws_subnet.subnetMysql - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgAvi - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgBackend - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgJump - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgMysql - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgOpencart - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviSeMgt - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviVs - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetBackend - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetMgt - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetMysql - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  data.aws_ami.aviAmi - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.controller - *terraform.NodeRootVariable
  data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuFocal - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_route53_zone.awsAviDemo - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  data.template_file.backend - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  data.template_file.jump - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
    var.ansible - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_autoscaling_group.autoScalingGroup - *terraform.NodeValidatableResource
    aws_eip.eipForNatGw - *terraform.NodeValidatableResource
    aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeValidatableResource
    aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-ASG-Notification - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-EC2-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-IAM-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-KMS-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-R53-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-SNS-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-SQS-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.ansible-EC2-Policy - *terraform.NodeValidatableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    aws_iam_role.vmimport - *terraform.NodeValidatableResource
    aws_iam_role_policy.vmimport - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeValidatableResource
    aws_instance.aviCtrl - *terraform.NodeValidatableResource
    aws_instance.backend - *terraform.NodeValidatableResource
    aws_instance.jump - *terraform.NodeValidatableResource
    aws_internet_gateway.internetGateway - *terraform.NodeValidatableResource
    aws_key_pair.kpAvi - *terraform.NodeValidatableResource
    aws_key_pair.kpBackend - *terraform.NodeValidatableResource
    aws_key_pair.kpJump - *terraform.NodeValidatableResource
    aws_key_pair.kpMysql - *terraform.NodeValidatableResource
    aws_key_pair.kpOpencart - *terraform.NodeValidatableResource
    aws_launch_template.templateAsg - *terraform.NodeValidatableResource
    aws_nat_gateway.natGw - *terraform.NodeValidatableResource
    aws_route53_record.aviCtrl - *terraform.NodeValidatableResource
    aws_route53_record.jump - *terraform.NodeValidatableResource
    aws_route_table.rt - *terraform.NodeValidatableResource
    aws_route_table.rtPrivate - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationAviSeMgt - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationAviVs - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationBackend - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationMgt - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationMysql - *terraform.NodeValidatableResource
    aws_security_group.sgAvi - *terraform.NodeValidatableResource
    aws_security_group.sgBackend - *terraform.NodeValidatableResource
    aws_security_group.sgJump - *terraform.NodeValidatableResource
    aws_security_group.sgMysql - *terraform.NodeValidatableResource
    aws_security_group.sgOpencart - *terraform.NodeValidatableResource
    aws_subnet.subnetAviSeMgt - *terraform.NodeValidatableResource
    aws_subnet.subnetAviVs - *terraform.NodeValidatableResource
    aws_subnet.subnetBackend - *terraform.NodeValidatableResource
    aws_subnet.subnetMgt - *terraform.NodeValidatableResource
    aws_subnet.subnetMysql - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    data.aws_ami.aviAmi - *terraform.NodeValidatableResource
    data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
    data.aws_ami.ubuntuFocal - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    data.aws_route53_zone.awsAviDemo - *terraform.NodeValidatableResource
    data.template_file.backend - *terraform.NodeValidatableResource
    data.template_file.jump - *terraform.NodeValidatableResource
    null_resource.foo7 - *terraform.NodeValidatableResource
    output.aviAmi - *terraform.NodeApplyableOutput
    output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
    output.az - *terraform.NodeApplyableOutput
    output.destroy - *terraform.NodeApplyableOutput
    output.jumpPublicIp - *terraform.NodeApplyableOutput
    output.ubuntuBionic - *terraform.NodeApplyableOutput
    output.ubuntuFocal - *terraform.NodeApplyableOutput
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ansible - *terraform.NodeRootVariable
    var.autoScalingGroupUserdata - *terraform.NodeRootVariable
    var.avi_password - *terraform.NodeRootVariable
    var.avi_username - *terraform.NodeRootVariable
    var.aws - *terraform.NodeRootVariable
    var.backend - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
    var.public_key_path - *terraform.NodeRootVariable
  null_resource.foo7 - *terraform.NodeValidatableResource
    aws_autoscaling_group.autoScalingGroup - *terraform.NodeValidatableResource
    aws_instance.aviCtrl - *terraform.NodeValidatableResource
    aws_instance.backend - *terraform.NodeValidatableResource
    aws_instance.jump - *terraform.NodeValidatableResource
    aws_subnet.subnetAviSeMgt - *terraform.NodeValidatableResource
    aws_subnet.subnetAviVs - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ansible - *terraform.NodeRootVariable
    var.avi_password - *terraform.NodeRootVariable
    var.avi_username - *terraform.NodeRootVariable
    var.aws - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  output.aviAmi - *terraform.NodeApplyableOutput
    data.aws_ami.aviAmi - *terraform.NodeValidatableResource
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
    aws_instance.aviCtrl - *terraform.NodeValidatableResource
  output.az - *terraform.NodeApplyableOutput
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
  output.destroy - *terraform.NodeApplyableOutput
    aws_instance.jump - *terraform.NodeValidatableResource
    var.ansible - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  output.jumpPublicIp - *terraform.NodeApplyableOutput
    aws_instance.jump - *terraform.NodeValidatableResource
  output.ubuntuBionic - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
  output.ubuntuFocal - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuFocal - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    aws_autoscaling_group.autoScalingGroup - *terraform.NodeValidatableResource
    aws_eip.eipForNatGw - *terraform.NodeValidatableResource
    aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeValidatableResource
    aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-ASG-Notification - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-EC2-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-IAM-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-KMS-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-R53-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-SNS-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-SQS-Policy - *terraform.NodeValidatableResource
    aws_iam_policy.ansible-EC2-Policy - *terraform.NodeValidatableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    aws_iam_role.vmimport - *terraform.NodeValidatableResource
    aws_iam_role_policy.vmimport - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeValidatableResource
    aws_instance.aviCtrl - *terraform.NodeValidatableResource
    aws_instance.backend - *terraform.NodeValidatableResource
    aws_instance.jump - *terraform.NodeValidatableResource
    aws_internet_gateway.internetGateway - *terraform.NodeValidatableResource
    aws_key_pair.kpAvi - *terraform.NodeValidatableResource
    aws_key_pair.kpBackend - *terraform.NodeValidatableResource
    aws_key_pair.kpJump - *terraform.NodeValidatableResource
    aws_key_pair.kpMysql - *terraform.NodeValidatableResource
    aws_key_pair.kpOpencart - *terraform.NodeValidatableResource
    aws_launch_template.templateAsg - *terraform.NodeValidatableResource
    aws_nat_gateway.natGw - *terraform.NodeValidatableResource
    aws_route53_record.aviCtrl - *terraform.NodeValidatableResource
    aws_route53_record.jump - *terraform.NodeValidatableResource
    aws_route_table.rt - *terraform.NodeValidatableResource
    aws_route_table.rtPrivate - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationAviSeMgt - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationAviVs - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationBackend - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationMgt - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationMysql - *terraform.NodeValidatableResource
    aws_security_group.sgAvi - *terraform.NodeValidatableResource
    aws_security_group.sgBackend - *terraform.NodeValidatableResource
    aws_security_group.sgJump - *terraform.NodeValidatableResource
    aws_security_group.sgMysql - *terraform.NodeValidatableResource
    aws_security_group.sgOpencart - *terraform.NodeValidatableResource
    aws_subnet.subnetAviSeMgt - *terraform.NodeValidatableResource
    aws_subnet.subnetAviVs - *terraform.NodeValidatableResource
    aws_subnet.subnetBackend - *terraform.NodeValidatableResource
    aws_subnet.subnetMgt - *terraform.NodeValidatableResource
    aws_subnet.subnetMysql - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    data.aws_ami.aviAmi - *terraform.NodeValidatableResource
    data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
    data.aws_ami.ubuntuFocal - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
    data.aws_route53_zone.awsAviDemo - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] (close) - *terraform.graphNodeCloseProvider
    null_resource.foo7 - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] (close) - *terraform.graphNodeCloseProvider
    data.template_file.backend - *terraform.NodeValidatableResource
    data.template_file.jump - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/null"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/template"] (close) - *terraform.graphNodeCloseProvider
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:01 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/13 15:00:01 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup - *terraform.NodeValidatableResource
    aws_launch_template.templateAsg - *terraform.NodeValidatableResource
    aws_subnet.subnetBackend - *terraform.NodeValidatableResource
  aws_eip.eipForNatGw - *terraform.NodeValidatableResource
    aws_internet_gateway.internetGateway - *terraform.NodeValidatableResource
  aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeValidatableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeValidatableResource
  aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
  aws_iam_policy.AviController-ASG-Notification - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-EC2-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-IAM-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-KMS-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-R53-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SNS-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SQS-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.ansible-EC2-Policy - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.Ansible-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.vmimport - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy.vmimport - *terraform.NodeValidatableResource
    aws_iam_role.vmimport - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeValidatableResource
    aws_iam_policy.ansible-EC2-Policy - *terraform.NodeValidatableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-EC2-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-R53-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-SNS-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-SQS-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-KMS-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-ASG-Notification - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeValidatableResource
    aws_iam_policy.AviController-IAM-Policy - *terraform.NodeValidatableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeValidatableResource
  aws_instance.aviCtrl - *terraform.NodeValidatableResource
    aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeValidatableResource
    aws_key_pair.kpAvi - *terraform.NodeValidatableResource
    aws_security_group.sgAvi - *terraform.NodeValidatableResource
    aws_subnet.subnetMgt - *terraform.NodeValidatableResource
    data.aws_ami.aviAmi - *terraform.NodeValidatableResource
  aws_instance.backend - *terraform.NodeValidatableResource
    aws_key_pair.kpBackend - *terraform.NodeValidatableResource
    aws_security_group.sgBackend - *terraform.NodeValidatableResource
    aws_subnet.subnetBackend - *terraform.NodeValidatableResource
    data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
    data.template_file.backend - *terraform.NodeValidatableResource
  aws_instance.jump - *terraform.NodeValidatableResource
    aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeValidatableResource
    aws_key_pair.kpJump - *terraform.NodeValidatableResource
    aws_security_group.sgJump - *terraform.NodeValidatableResource
    aws_subnet.subnetMgt - *terraform.NodeValidatableResource
    data.aws_ami.ubuntuFocal - *terraform.NodeValidatableResource
    data.template_file.jump - *terraform.NodeValidatableResource
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.internetGateway - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
  aws_key_pair.kpAvi - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpBackend - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpJump - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpMysql - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpOpencart - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_launch_template.templateAsg - *terraform.NodeValidatableResource
    aws_security_group.sgBackend - *terraform.NodeValidatableResource
    data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
    var.autoScalingGroupUserdata - *terraform.NodeRootVariable
    var.backend - *terraform.NodeRootVariable
  aws_nat_gateway.natGw - *terraform.NodeValidatableResource
    aws_eip.eipForNatGw - *terraform.NodeValidatableResource
    aws_subnet.subnetMgt - *terraform.NodeValidatableResource
  aws_route53_record.aviCtrl - *terraform.NodeValidatableResource
    aws_instance.aviCtrl - *terraform.NodeValidatableResource
    data.aws_route53_zone.awsAviDemo - *terraform.NodeValidatableResource
  aws_route53_record.jump - *terraform.NodeValidatableResource
    aws_instance.jump - *terraform.NodeValidatableResource
    data.aws_route53_zone.awsAviDemo - *terraform.NodeValidatableResource
  aws_route_table.rt - *terraform.NodeValidatableResource
    aws_internet_gateway.internetGateway - *terraform.NodeValidatableResource
  aws_route_table.rtPrivate - *terraform.NodeValidatableResource
    aws_nat_gateway.natGw - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationAviSeMgt - *terraform.NodeValidatableResource
    aws_route_table.rt - *terraform.NodeValidatableResource
    aws_subnet.subnetAviSeMgt - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationAviVs - *terraform.NodeValidatableResource
    aws_route_table.rt - *terraform.NodeValidatableResource
    aws_subnet.subnetAviVs - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationBackend - *terraform.NodeValidatableResource
    aws_route_table.rtPrivate - *terraform.NodeValidatableResource
    aws_subnet.subnetBackend - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationMgt - *terraform.NodeValidatableResource
    aws_route_table.rt - *terraform.NodeValidatableResource
    aws_subnet.subnetMgt - *terraform.NodeValidatableResource
  aws_route_table_association.subnetAssociationMysql - *terraform.NodeValidatableResource
    aws_route_table.rtPrivate - *terraform.NodeValidatableResource
    aws_subnet.subnetMysql - *terraform.NodeValidatableResource
  aws_security_group.sgAvi - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
  aws_security_group.sgBackend - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
  aws_security_group.sgJump - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
  aws_security_group.sgMysql - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
  aws_security_group.sgOpencart - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
  aws_subnet.subnetAviSeMgt - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
  aws_subnet.subnetAviVs - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
  aws_subnet.subnetBackend - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
  aws_subnet.subnetMgt - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
  aws_subnet.subnetMysql - *terraform.NodeValidatableResource
    aws_vpc.vpc - *terraform.NodeValidatableResource
  aws_vpc.vpc - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  data.aws_ami.aviAmi - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.controller - *terraform.NodeRootVariable
  data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuFocal - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_availability_zones.available - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_route53_zone.awsAviDemo - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  data.template_file.backend - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  data.template_file.jump - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
    var.ansible - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_iam_role_policy.vmimport - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeValidatableResource
    aws_key_pair.kpMysql - *terraform.NodeValidatableResource
    aws_key_pair.kpOpencart - *terraform.NodeValidatableResource
    aws_route53_record.aviCtrl - *terraform.NodeValidatableResource
    aws_route53_record.jump - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationAviSeMgt - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationAviVs - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationBackend - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationMgt - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationMysql - *terraform.NodeValidatableResource
    aws_security_group.sgMysql - *terraform.NodeValidatableResource
    aws_security_group.sgOpencart - *terraform.NodeValidatableResource
    null_resource.foo7 - *terraform.NodeValidatableResource
    output.aviAmi - *terraform.NodeApplyableOutput
    output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
    output.az - *terraform.NodeApplyableOutput
    output.destroy - *terraform.NodeApplyableOutput
    output.jumpPublicIp - *terraform.NodeApplyableOutput
    output.ubuntuBionic - *terraform.NodeApplyableOutput
    output.ubuntuFocal - *terraform.NodeApplyableOutput
  null_resource.foo7 - *terraform.NodeValidatableResource
    aws_autoscaling_group.autoScalingGroup - *terraform.NodeValidatableResource
    aws_instance.aviCtrl - *terraform.NodeValidatableResource
    aws_instance.backend - *terraform.NodeValidatableResource
    aws_instance.jump - *terraform.NodeValidatableResource
    aws_subnet.subnetAviSeMgt - *terraform.NodeValidatableResource
    aws_subnet.subnetAviVs - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    var.avi_password - *terraform.NodeRootVariable
    var.avi_username - *terraform.NodeRootVariable
  output.aviAmi - *terraform.NodeApplyableOutput
    data.aws_ami.aviAmi - *terraform.NodeValidatableResource
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
    aws_instance.aviCtrl - *terraform.NodeValidatableResource
  output.az - *terraform.NodeApplyableOutput
    data.aws_availability_zones.available - *terraform.NodeValidatableResource
  output.destroy - *terraform.NodeApplyableOutput
    aws_instance.jump - *terraform.NodeValidatableResource
    var.controller - *terraform.NodeRootVariable
  output.jumpPublicIp - *terraform.NodeApplyableOutput
    aws_instance.jump - *terraform.NodeValidatableResource
  output.ubuntuBionic - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuBionic - *terraform.NodeValidatableResource
  output.ubuntuFocal - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuFocal - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    aws_autoscaling_group.autoScalingGroup - *terraform.NodeValidatableResource
    aws_iam_role_policy.vmimport - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeValidatableResource
    aws_instance.backend - *terraform.NodeValidatableResource
    aws_key_pair.kpMysql - *terraform.NodeValidatableResource
    aws_key_pair.kpOpencart - *terraform.NodeValidatableResource
    aws_route53_record.aviCtrl - *terraform.NodeValidatableResource
    aws_route53_record.jump - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationAviSeMgt - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationAviVs - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationBackend - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationMgt - *terraform.NodeValidatableResource
    aws_route_table_association.subnetAssociationMysql - *terraform.NodeValidatableResource
    aws_security_group.sgMysql - *terraform.NodeValidatableResource
    aws_security_group.sgOpencart - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] (close) - *terraform.graphNodeCloseProvider
    null_resource.foo7 - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] (close) - *terraform.graphNodeCloseProvider
    data.template_file.backend - *terraform.NodeValidatableResource
    data.template_file.jump - *terraform.NodeValidatableResource
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/null"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/template"] (close) - *terraform.graphNodeCloseProvider
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:01 [DEBUG] Starting graph walk: walkValidate
2021/02/13 15:00:01 [TRACE] dag/walk: visiting "var.privateKey"
2021/02/13 15:00:01 [TRACE] vertex "var.privateKey": starting visit (*terraform.NodeRootVariable)
2021/02/13 15:00:01 [TRACE] dag/walk: visiting "var.avi_username"
2021/02/13 15:00:01 [TRACE] vertex "var.avi_username": starting visit (*terraform.NodeRootVariable)
2021/02/13 15:00:01 [TRACE] vertex "var.avi_username": visit complete
2021/02/13 15:00:01 [TRACE] dag/walk: visiting "var.aws"
2021/02/13 15:00:01 [TRACE] vertex "var.aws": starting visit (*terraform.NodeRootVariable)
2021/02/13 15:00:01 [TRACE] vertex "var.aws": visit complete
2021/02/13 15:00:01 [TRACE] vertex "var.privateKey": visit complete
2021/02/13 15:00:01 [TRACE] dag/walk: visiting "var.backend"
2021/02/13 15:00:01 [TRACE] vertex "var.backend": starting visit (*terraform.NodeRootVariable)
2021/02/13 15:00:01 [TRACE] vertex "var.backend": visit complete
2021/02/13 15:00:01 [TRACE] dag/walk: visiting "var.avi_password"
2021/02/13 15:00:01 [TRACE] vertex "var.avi_password": starting visit (*terraform.NodeRootVariable)
2021/02/13 15:00:01 [TRACE] vertex "var.avi_password": visit complete
2021/02/13 15:00:01 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/aws\"]"
2021/02/13 15:00:01 [TRACE] dag/walk: visiting "provisioner.remote-exec"
2021/02/13 15:00:01 [TRACE] vertex "provisioner.remote-exec": starting visit (*terraform.NodeProvisioner)
2021/02/13 15:00:01 [TRACE] dag/walk: visiting "var.ansible"
2021/02/13 15:00:01 [TRACE] vertex "var.ansible": starting visit (*terraform.NodeRootVariable)
2021/02/13 15:00:01 [TRACE] vertex "var.ansible": visit complete
2021/02/13 15:00:01 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/null\"]"
2021/02/13 15:00:01 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/null\"]": starting visit (*terraform.NodeApplyableProvider)
2021/02/13 15:00:01 [TRACE] dag/walk: visiting "provisioner.file"
2021/02/13 15:00:01 [TRACE] vertex "provisioner.file": starting visit (*terraform.NodeProvisioner)
2021/02/13 15:00:01 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/template\"]"
2021-02-13T15:00:01.535Z [DEBUG] plugin: starting plugin: path=/usr/bin/terraform args=[/usr/bin/terraform, internal-plugin, provisioner, remote-exec]
2021/02/13 15:00:01 [TRACE] dag/walk: visiting "var.controller"
2021/02/13 15:00:01 [TRACE] vertex "var.controller": starting visit (*terraform.NodeRootVariable)
2021/02/13 15:00:01 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/template\"]": starting visit (*terraform.NodeApplyableProvider)
2021/02/13 15:00:01 [TRACE] vertex "var.controller": visit complete
2021/02/13 15:00:01 [TRACE] dag/walk: visiting "var.autoScalingGroupUserdata"
2021/02/13 15:00:01 [TRACE] vertex "var.autoScalingGroupUserdata": starting visit (*terraform.NodeRootVariable)
2021/02/13 15:00:01 [TRACE] vertex "var.autoScalingGroupUserdata": visit complete
2021/02/13 15:00:01 [TRACE] dag/walk: visiting "var.jump"
2021/02/13 15:00:01 [TRACE] vertex "var.jump": starting visit (*terraform.NodeRootVariable)
2021/02/13 15:00:01 [TRACE] vertex "var.jump": visit complete
2021-02-13T15:00:01.535Z [INFO]  plugin: configuring client automatic mTLS
2021/02/13 15:00:01 [TRACE] dag/walk: visiting "var.public_key_path"
2021/02/13 15:00:01 [TRACE] vertex "var.public_key_path": starting visit (*terraform.NodeRootVariable)
2021/02/13 15:00:01 [TRACE] vertex "var.public_key_path": visit complete
2021-02-13T15:00:01.535Z [DEBUG] plugin: plugin started: path=/usr/bin/terraform pid=9157
2021-02-13T15:00:01.535Z [DEBUG] plugin: waiting for RPC address: path=/usr/bin/terraform
2021/02/13 15:00:01 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-13T15:00:01.559Z [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/null/3.0.0/linux_amd64/terraform-provider-null_v3.0.0_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/null/3.0.0/linux_amd64/terraform-provider-null_v3.0.0_x5]
2021-02-13T15:00:01.559Z [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/null/3.0.0/linux_amd64/terraform-provider-null_v3.0.0_x5 pid=9165
2021-02-13T15:00:01.559Z [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/null/3.0.0/linux_amd64/terraform-provider-null_v3.0.0_x5
2021-02-13T15:00:01.564Z [INFO]  plugin.terraform-provider-null_v3.0.0_x5: configuring server automatic mTLS: timestamp=2021-02-13T15:00:01.563Z
2021-02-13T15:00:01.586Z [DEBUG] plugin: using plugin: version=5
2021/02/13 15:00:01 [TRACE] vertex "provisioner.remote-exec": visit complete
2021-02-13T15:00:01.587Z [DEBUG] plugin: starting plugin: path=/usr/bin/terraform args=[/usr/bin/terraform, internal-plugin, provisioner, file]
2021-02-13T15:00:01.587Z [TRACE] plugin.stdio: waiting for stdio data
2021-02-13T15:00:01.587Z [DEBUG] plugin: plugin started: path=/usr/bin/terraform pid=9181
2021-02-13T15:00:01.587Z [DEBUG] plugin: waiting for RPC address: path=/usr/bin/terraform
2021-02-13T15:00:01.597Z [DEBUG] plugin.terraform-provider-null_v3.0.0_x5: plugin address: network=unix address=/tmp/plugin830685622 timestamp=2021-02-13T15:00:01.597Z
2021-02-13T15:00:01.597Z [DEBUG] plugin: using plugin: version=5
2021-02-13T15:00:01.646Z [DEBUG] plugin: using plugin: version=5
2021/02/13 15:00:01 [TRACE] vertex "provisioner.file": visit complete
2021-02-13T15:00:01.647Z [TRACE] plugin.stdio: waiting for stdio data
2021/02/13 15:00:01 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/null\"]" provider for provider["registry.terraform.io/hashicorp/null"]
2021/02/13 15:00:01 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/null"]: no configuration at all
2021/02/13 15:00:01 [TRACE] GRPCProvider: GetSchema
2021-02-13T15:00:01.647Z [TRACE] plugin.stdio: waiting for stdio data
2021-02-13T15:00:01.647Z [INFO]  plugin: configuring client automatic mTLS
2021/02/13 15:00:01 [TRACE] GRPCProvider: PrepareProviderConfig
2021/02/13 15:00:01 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/null\"]": visit complete
2021-02-13T15:00:01.670Z [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/template/2.2.0/linux_amd64/terraform-provider-template_v2.2.0_x4 args=[.terraform/providers/registry.terraform.io/hashicorp/template/2.2.0/linux_amd64/terraform-provider-template_v2.2.0_x4]
2021-02-13T15:00:01.671Z [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/template/2.2.0/linux_amd64/terraform-provider-template_v2.2.0_x4 pid=9203
2021-02-13T15:00:01.671Z [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/template/2.2.0/linux_amd64/terraform-provider-template_v2.2.0_x4
2021-02-13T15:00:01.678Z [INFO]  plugin.terraform-provider-template_v2.2.0_x4: configuring server automatic mTLS: timestamp=2021-02-13T15:00:01.677Z
2021-02-13T15:00:01.704Z [DEBUG] plugin.terraform-provider-template_v2.2.0_x4: plugin address: address=/tmp/plugin847032181 network=unix timestamp=2021-02-13T15:00:01.704Z
2021-02-13T15:00:01.704Z [DEBUG] plugin: using plugin: version=5
2021/02/13 15:00:01 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/template\"]" provider for provider["registry.terraform.io/hashicorp/template"]
2021-02-13T15:00:01.756Z [TRACE] plugin.stdio: waiting for stdio data
2021-02-13T15:00:01.757Z [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unimplemented desc = unknown service plugin.GRPCStdio"
2021-02-13T15:00:01.756Z [INFO]  plugin: configuring client automatic mTLS
2021-02-13T15:00:01.781Z [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.22.0/linux_amd64/terraform-provider-aws_v3.22.0_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/aws/3.22.0/linux_amd64/terraform-provider-aws_v3.22.0_x5]
2021-02-13T15:00:01.782Z [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.22.0/linux_amd64/terraform-provider-aws_v3.22.0_x5 pid=9213
2021-02-13T15:00:01.782Z [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.22.0/linux_amd64/terraform-provider-aws_v3.22.0_x5
2021-02-13T15:00:01.817Z [INFO]  plugin.terraform-provider-aws_v3.22.0_x5: configuring server automatic mTLS: timestamp=2021-02-13T15:00:01.816Z
2021-02-13T15:00:01.845Z [DEBUG] plugin: using plugin: version=5
2021-02-13T15:00:01.845Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: plugin address: address=/tmp/plugin728735468 network=unix timestamp=2021-02-13T15:00:01.844Z
2021/02/13 15:00:01 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/aws\"]" provider for provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:01 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/aws"]: using explicit config only
2021/02/13 15:00:01 [TRACE] GRPCProvider: GetSchema
2021-02-13T15:00:01.896Z [TRACE] plugin.stdio: waiting for stdio data
2021/02/13 15:00:01 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/template"]: no configuration at all
2021/02/13 15:00:01 [TRACE] GRPCProvider: GetSchema
2021/02/13 15:00:01 [TRACE] No provider meta schema returned
2021/02/13 15:00:01 [TRACE] GRPCProvider: PrepareProviderConfig
2021/02/13 15:00:01 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/template\"]": visit complete
2021/02/13 15:00:01 [TRACE] dag/walk: visiting "data.template_file.backend"
2021/02/13 15:00:01 [TRACE] vertex "data.template_file.backend": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:01 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/02/13 15:00:01 [TRACE] dag/walk: visiting "data.template_file.jump"
2021/02/13 15:00:01 [TRACE] vertex "data.template_file.jump": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:01 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/02/13 15:00:01 [TRACE] vertex "data.template_file.backend": visit complete
2021/02/13 15:00:01 [TRACE] vertex "data.template_file.jump": visit complete
2021/02/13 15:00:01 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/template\"] (close)"
2021/02/13 15:00:01 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/template\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/13 15:00:01 [TRACE] GRPCProvider: Close
2021-02-13T15:00:01.899Z [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/template/2.2.0/linux_amd64/terraform-provider-template_v2.2.0_x4 pid=9203
2021-02-13T15:00:01.899Z [DEBUG] plugin: plugin exited
2021/02/13 15:00:01 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/template\"] (close)": visit complete
2021/02/13 15:00:01 [TRACE] GRPCProvider: PrepareProviderConfig
2021/02/13 15:00:02 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"]": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "data.aws_ami.ubuntuBionic"
2021/02/13 15:00:02 [TRACE] vertex "data.aws_ami.ubuntuBionic": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_iam_role.vmimport"
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_role.vmimport": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_key_pair.kpOpencart"
2021/02/13 15:00:02 [TRACE] vertex "aws_key_pair.kpOpencart": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-ASG-Notification"
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_key_pair.kpAvi"
2021/02/13 15:00:02 [TRACE] vertex "aws_key_pair.kpAvi": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_policy.AviController-ASG-Notification": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-KMS-Policy"
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_policy.AviController-KMS-Policy": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "data.aws_ami.aviAmi"
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_iam_policy.ansible-EC2-Policy"
2021/02/13 15:00:02 [TRACE] vertex "data.aws_ami.aviAmi": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-EC2-Policy"
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_policy.AviController-EC2-Policy": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-AutoScalingGroup-Policy"
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_policy.AviController-AutoScalingGroup-Policy": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_iam_role.AviController-Refined-Role"
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_role.AviController-Refined-Role": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "data.aws_availability_zones.available"
2021/02/13 15:00:02 [TRACE] vertex "data.aws_availability_zones.available": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "data.aws_route53_zone.awsAviDemo"
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_key_pair.kpMysql"
2021/02/13 15:00:02 [TRACE] vertex "aws_key_pair.kpMysql": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_iam_role.Ansible-Refined-Role"
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_role.Ansible-Refined-Role": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_key_pair.kpBackend"
2021/02/13 15:00:02 [TRACE] vertex "aws_key_pair.kpBackend": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_vpc.vpc"
2021/02/13 15:00:02 [TRACE] vertex "aws_vpc.vpc": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_key_pair.kpJump"
2021/02/13 15:00:02 [TRACE] vertex "aws_key_pair.kpJump": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] vertex "data.aws_route53_zone.awsAviDemo": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-IAM-Policy"
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_policy.AviController-IAM-Policy": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-SNS-Policy"
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_policy.AviController-SNS-Policy": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_policy.ansible-EC2-Policy": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-SQS-Policy"
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_policy.AviController-SQS-Policy": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "data.aws_ami.ubuntuFocal"
2021/02/13 15:00:02 [TRACE] vertex "data.aws_ami.ubuntuFocal": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-R53-Policy"
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_policy.AviController-R53-Policy": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021-02-13T15:00:02.037Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:02 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_role.vmimport": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_iam_role_policy.vmimport"
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_role_policy.vmimport": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] vertex "aws_key_pair.kpAvi": visit complete
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_policy.AviController-ASG-Notification": visit complete
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_policy.AviController-KMS-Policy": visit complete
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_role.AviController-Refined-Role": visit complete
2021/02/13 15:00:02 [TRACE] vertex "data.aws_ami.ubuntuBionic": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "output.ubuntuBionic"
2021/02/13 15:00:02 [TRACE] vertex "output.ubuntuBionic": starting visit (*terraform.NodeApplyableOutput)
2021/02/13 15:00:02 [TRACE] vertex "aws_key_pair.kpOpencart": visit complete
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_policy.AviController-AutoScalingGroup-Policy": visit complete
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach7"
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach7": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach6"
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach6": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_iam_instance_profile.AviController-Instance-Profile"
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_instance_profile.AviController-Instance-Profile": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach3"
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach3": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] vertex "aws_vpc.vpc": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_security_group.sgJump"
2021/02/13 15:00:02 [TRACE] vertex "aws_security_group.sgJump": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] vertex "data.aws_route53_zone.awsAviDemo": visit complete
2021/02/13 15:00:02 [TRACE] vertex "data.aws_ami.aviAmi": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "output.aviAmi"
2021/02/13 15:00:02 [TRACE] vertex "output.aviAmi": starting visit (*terraform.NodeApplyableOutput)
2021/02/13 15:00:02 [TRACE] vertex "aws_key_pair.kpBackend": visit complete
2021/02/13 15:00:02 [TRACE] vertex "aws_key_pair.kpJump": visit complete
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] vertex "data.aws_availability_zones.available": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "output.az"
2021/02/13 15:00:02 [TRACE] vertex "output.az": starting visit (*terraform.NodeApplyableOutput)
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_policy.AviController-EC2-Policy": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach1"
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach1": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_policy.AviController-IAM-Policy": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach8"
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach8": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_security_group.sgMysql"
2021/02/13 15:00:02 [TRACE] vertex "aws_security_group.sgMysql": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_security_group.sgOpencart"
2021/02/13 15:00:02 [TRACE] vertex "aws_security_group.sgOpencart": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_internet_gateway.internetGateway"
2021/02/13 15:00:02 [TRACE] vertex "aws_internet_gateway.internetGateway": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] vertex "aws_key_pair.kpMysql": visit complete
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_role.Ansible-Refined-Role": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_iam_instance_profile.Ansible-Instance-Profile"
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_instance_profile.Ansible-Instance-Profile": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_subnet.subnetMysql"
2021/02/13 15:00:02 [TRACE] vertex "aws_subnet.subnetMysql": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_subnet.subnetBackend"
2021/02/13 15:00:02 [TRACE] vertex "aws_subnet.subnetBackend": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_subnet.subnetMgt"
2021/02/13 15:00:02 [TRACE] vertex "aws_subnet.subnetMgt": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_subnet.subnetAviVs"
2021/02/13 15:00:02 [TRACE] vertex "aws_subnet.subnetAviVs": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_security_group.sgBackend"
2021/02/13 15:00:02 [TRACE] vertex "aws_security_group.sgBackend": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_security_group.sgAvi"
2021/02/13 15:00:02 [TRACE] vertex "aws_security_group.sgAvi": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_subnet.subnetAviSeMgt"
2021/02/13 15:00:02 [TRACE] vertex "aws_subnet.subnetAviSeMgt": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_policy.AviController-R53-Policy": visit complete
2021/02/13 15:00:02 [TRACE] ExecuteWriteOutput: Saving Create change for output.ubuntuBionic in changeset
2021/02/13 15:00:02 [TRACE] EvalWriteOutput: Removing output.ubuntuBionic from state (it is now null)
2021/02/13 15:00:02 [TRACE] vertex "output.ubuntuBionic": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach2"
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach2": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021-02-13T15:00:02.041Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:02 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021-02-13T15:00:02.041Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:02 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach6": visit complete
2021/02/13 15:00:02 [TRACE] ExecuteWriteOutput: Saving Create change for output.aviAmi in changeset
2021/02/13 15:00:02 [TRACE] EvalWriteOutput: Removing output.aviAmi from state (it is now null)
2021/02/13 15:00:02 [TRACE] vertex "output.aviAmi": visit complete
2021/02/13 15:00:02 [TRACE] ExecuteWriteOutput: Saving Create change for output.az in changeset
2021/02/13 15:00:02 [TRACE] EvalWriteOutput: Removing output.az from state (it is now null)
2021/02/13 15:00:02 [TRACE] vertex "output.az": visit complete
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_instance_profile.AviController-Instance-Profile": visit complete
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach3": visit complete
2021-02-13T15:00:02.041Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:02 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach8": visit complete
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_role_policy.vmimport": visit complete
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_policy.AviController-SQS-Policy": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach5"
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach5": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_policy.AviController-SNS-Policy": visit complete
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] vertex "aws_security_group.sgJump": visit complete
2021/02/13 15:00:02 [TRACE] vertex "data.aws_ami.ubuntuFocal": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "output.ubuntuFocal"
2021/02/13 15:00:02 [TRACE] vertex "output.ubuntuFocal": starting visit (*terraform.NodeApplyableOutput)
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_policy.ansible-EC2-Policy": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.ansible-attach1"
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach4"
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_role_policy_attachment.ansible-attach1": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach4": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach7": visit complete
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach1": visit complete
2021/02/13 15:00:02 [TRACE] vertex "aws_internet_gateway.internetGateway": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_eip.eipForNatGw"
2021/02/13 15:00:02 [TRACE] vertex "aws_eip.eipForNatGw": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] vertex "aws_subnet.subnetBackend": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_route_table.rt"
2021/02/13 15:00:02 [TRACE] vertex "aws_route_table.rt": starting visit (*terraform.NodeValidatableResource)
2021-02-13T15:00:02.042Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:02 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021-02-13T15:00:02.042Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:02 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021/02/13 15:00:02 [TRACE] vertex "aws_security_group.sgOpencart": visit complete
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021-02-13T15:00:02.043Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:02 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021-02-13T15:00:02.043Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:02 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021/02/13 15:00:02 [TRACE] vertex "aws_security_group.sgMysql": visit complete
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach5": visit complete
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] vertex "aws_subnet.subnetMgt": visit complete
2021/02/13 15:00:02 [TRACE] ExecuteWriteOutput: Saving Create change for output.ubuntuFocal in changeset
2021/02/13 15:00:02 [TRACE] EvalWriteOutput: Removing output.ubuntuFocal from state (it is now null)
2021/02/13 15:00:02 [TRACE] vertex "output.ubuntuFocal": visit complete
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] vertex "aws_subnet.subnetAviVs": visit complete
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_role_policy_attachment.ansible-attach1": visit complete
2021-02-13T15:00:02.044Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:02 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021-02-13T15:00:02.044Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:02 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021/02/13 15:00:02 [TRACE] vertex "aws_security_group.sgBackend": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_launch_template.templateAsg"
2021/02/13 15:00:02 [TRACE] vertex "aws_launch_template.templateAsg": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] vertex "aws_subnet.subnetMysql": visit complete
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach4": visit complete
2021/02/13 15:00:02 [TRACE] vertex "aws_eip.eipForNatGw": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_nat_gateway.natGw"
2021/02/13 15:00:02 [TRACE] vertex "aws_nat_gateway.natGw": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] vertex "aws_route_table.rt": visit complete
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_instance_profile.Ansible-Instance-Profile": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationMgt"
2021/02/13 15:00:02 [TRACE] vertex "aws_route_table_association.subnetAssociationMgt": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_instance.jump"
2021/02/13 15:00:02 [TRACE] vertex "aws_instance.jump": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] vertex "aws_nat_gateway.natGw": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_route_table.rtPrivate"
2021-02-13T15:00:02.045Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:02 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021/02/13 15:00:02 [TRACE] vertex "aws_route_table.rtPrivate": starting visit (*terraform.NodeValidatableResource)
2021-02-13T15:00:02.045Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:02 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_instance.backend"
2021/02/13 15:00:02 [TRACE] vertex "aws_instance.backend": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] vertex "aws_security_group.sgAvi": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_instance.aviCtrl"
2021/02/13 15:00:02 [TRACE] vertex "aws_instance.aviCtrl": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationAviVs"
2021/02/13 15:00:02 [TRACE] vertex "aws_route_table_association.subnetAssociationAviVs": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] vertex "aws_launch_template.templateAsg": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_autoscaling_group.autoScalingGroup"
2021/02/13 15:00:02 [TRACE] vertex "aws_autoscaling_group.autoScalingGroup": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] vertex "aws_instance.aviCtrl": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "output.aviCtrlPublicIp"
2021/02/13 15:00:02 [TRACE] vertex "output.aviCtrlPublicIp": starting visit (*terraform.NodeApplyableOutput)
2021/02/13 15:00:02 [TRACE] vertex "aws_instance.backend": visit complete
2021/02/13 15:00:02 [TRACE] vertex "aws_subnet.subnetAviSeMgt": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationAviSeMgt"
2021/02/13 15:00:02 [TRACE] vertex "aws_route_table_association.subnetAssociationAviSeMgt": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] ExecuteWriteOutput: Saving Create change for output.aviCtrlPublicIp in changeset
2021/02/13 15:00:02 [TRACE] EvalWriteOutput: Removing output.aviCtrlPublicIp from state (it is now null)
2021/02/13 15:00:02 [TRACE] vertex "output.aviCtrlPublicIp": visit complete
2021/02/13 15:00:02 [TRACE] vertex "aws_autoscaling_group.autoScalingGroup": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_route53_record.aviCtrl"
2021/02/13 15:00:02 [TRACE] vertex "aws_route53_record.aviCtrl": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] vertex "aws_route_table_association.subnetAssociationMgt": visit complete
2021/02/13 15:00:02 [TRACE] vertex "aws_route_table.rtPrivate": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationBackend"
2021/02/13 15:00:02 [TRACE] vertex "aws_route_table_association.subnetAssociationBackend": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] vertex "aws_route_table_association.subnetAssociationAviVs": visit complete
2021/02/13 15:00:02 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach2": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationMysql"
2021/02/13 15:00:02 [TRACE] vertex "aws_route_table_association.subnetAssociationMysql": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] vertex "aws_route_table_association.subnetAssociationBackend": visit complete
2021/02/13 15:00:02 [TRACE] vertex "aws_route53_record.aviCtrl": visit complete
2021/02/13 15:00:02 [TRACE] vertex "aws_route_table_association.subnetAssociationMysql": visit complete
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] vertex "aws_instance.jump": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "output.jumpPublicIp"
2021/02/13 15:00:02 [TRACE] vertex "output.jumpPublicIp": starting visit (*terraform.NodeApplyableOutput)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "aws_route53_record.jump"
2021/02/13 15:00:02 [TRACE] vertex "aws_route53_record.jump": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] vertex "aws_route_table_association.subnetAssociationAviSeMgt": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "output.destroy"
2021/02/13 15:00:02 [TRACE] ExecuteWriteOutput: Saving Create change for output.jumpPublicIp in changeset
2021/02/13 15:00:02 [TRACE] EvalWriteOutput: Removing output.jumpPublicIp from state (it is now null)
2021/02/13 15:00:02 [TRACE] vertex "output.jumpPublicIp": visit complete
2021/02/13 15:00:02 [TRACE] vertex "output.destroy": starting visit (*terraform.NodeApplyableOutput)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "null_resource.foo7"
2021/02/13 15:00:02 [TRACE] vertex "null_resource.foo7": starting visit (*terraform.NodeValidatableResource)
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] ExecuteWriteOutput: Saving Create change for output.destroy in changeset
2021/02/13 15:00:02 [TRACE] EvalWriteOutput: Removing output.destroy from state (it is now null)
2021/02/13 15:00:02 [TRACE] vertex "output.destroy": visit complete
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:02 [TRACE] vertex "aws_route53_record.jump": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/aws\"] (close)"
2021/02/13 15:00:02 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/13 15:00:02 [TRACE] GRPCProvider: Close
2021-02-13T15:00:02.051Z [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-13T15:00:02.054Z [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.22.0/linux_amd64/terraform-provider-aws_v3.22.0_x5 pid=9213
2021-02-13T15:00:02.054Z [DEBUG] plugin: plugin exited
2021/02/13 15:00:02 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)": visit complete
2021/02/13 15:00:02 [TRACE] vertex "null_resource.foo7": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/null\"] (close)"
2021/02/13 15:00:02 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/null\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/13 15:00:02 [TRACE] GRPCProvider: Close
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/13 15:00:02 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/13 15:00:02 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-13T15:00:02.054Z [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-13T15:00:02.055Z [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/null/3.0.0/linux_amd64/terraform-provider-null_v3.0.0_x5 pid=9165
2021-02-13T15:00:02.055Z [DEBUG] plugin: plugin exited
2021/02/13 15:00:02 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/null\"] (close)": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "root"
2021/02/13 15:00:02 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/13 15:00:02 [TRACE] vertex "root": visit complete
2021/02/13 15:00:02 [INFO] backend/local: apply calling Plan
2021/02/13 15:00:02 [INFO] terraform: building graph: GraphTypePlan
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/13 15:00:02 [TRACE] ConfigTransformer: Starting for path: 
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandPlannableResource
  aws_eip.eipForNatGw (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role.vmimport (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandPlannableResource
  aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
  aws_instance.backend (expand) - *terraform.nodeExpandPlannableResource
  aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
  aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpAvi (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpBackend (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpJump (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpMysql (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandPlannableResource
  aws_launch_template.templateAsg (expand) - *terraform.nodeExpandPlannableResource
  aws_nat_gateway.natGw (expand) - *terraform.nodeExpandPlannableResource
  aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
  aws_route53_record.jump (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table.rtPrivate (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgAvi (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgBackend (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgJump (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgMysql (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgOpencart (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetMysql (expand) - *terraform.nodeExpandPlannableResource
  aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
  data.aws_ami.aviAmi (expand) - *terraform.nodeExpandPlannableResource
  data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
  data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandPlannableResource
  data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
  data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandPlannableResource
  data.template_file.backend (expand) - *terraform.nodeExpandPlannableResource
  data.template_file.jump (expand) - *terraform.nodeExpandPlannableResource
  null_resource.foo7 (expand) - *terraform.nodeExpandPlannableResource
  ------
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandPlannableResource
  aws_eip.eipForNatGw (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role.vmimport (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandPlannableResource
  aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
  aws_instance.backend (expand) - *terraform.nodeExpandPlannableResource
  aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
  aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpAvi (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpBackend (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpJump (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpMysql (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandPlannableResource
  aws_launch_template.templateAsg (expand) - *terraform.nodeExpandPlannableResource
  aws_nat_gateway.natGw (expand) - *terraform.nodeExpandPlannableResource
  aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
  aws_route53_record.jump (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table.rtPrivate (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgAvi (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgBackend (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgJump (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgMysql (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgOpencart (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetMysql (expand) - *terraform.nodeExpandPlannableResource
  aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
  data.aws_ami.aviAmi (expand) - *terraform.nodeExpandPlannableResource
  data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
  data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandPlannableResource
  data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
  data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandPlannableResource
  data.template_file.backend (expand) - *terraform.nodeExpandPlannableResource
  data.template_file.jump (expand) - *terraform.nodeExpandPlannableResource
  null_resource.foo7 (expand) - *terraform.nodeExpandPlannableResource
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/13 15:00:02 [TRACE] OutputTransformer: adding jumpPublicIp as *terraform.NodeApplyableOutput
2021/02/13 15:00:02 [TRACE] OutputTransformer: adding aviCtrlPublicIp as *terraform.NodeApplyableOutput
2021/02/13 15:00:02 [TRACE] OutputTransformer: adding destroy as *terraform.NodeApplyableOutput
2021/02/13 15:00:02 [TRACE] OutputTransformer: adding az as *terraform.NodeApplyableOutput
2021/02/13 15:00:02 [TRACE] OutputTransformer: adding aviAmi as *terraform.NodeApplyableOutput
2021/02/13 15:00:02 [TRACE] OutputTransformer: adding ubuntuBionic as *terraform.NodeApplyableOutput
2021/02/13 15:00:02 [TRACE] OutputTransformer: adding ubuntuFocal as *terraform.NodeApplyableOutput
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandPlannableResource
  aws_eip.eipForNatGw (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role.vmimport (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandPlannableResource
  aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
  aws_instance.backend (expand) - *terraform.nodeExpandPlannableResource
  aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
  aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpAvi (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpBackend (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpJump (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpMysql (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandPlannableResource
  aws_launch_template.templateAsg (expand) - *terraform.nodeExpandPlannableResource
  aws_nat_gateway.natGw (expand) - *terraform.nodeExpandPlannableResource
  aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
  aws_route53_record.jump (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table.rtPrivate (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgAvi (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgBackend (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgJump (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgMysql (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgOpencart (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetMysql (expand) - *terraform.nodeExpandPlannableResource
  aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
  data.aws_ami.aviAmi (expand) - *terraform.nodeExpandPlannableResource
  data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
  data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandPlannableResource
  data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
  data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandPlannableResource
  data.template_file.backend (expand) - *terraform.nodeExpandPlannableResource
  data.template_file.jump (expand) - *terraform.nodeExpandPlannableResource
  null_resource.foo7 (expand) - *terraform.nodeExpandPlannableResource
  output.aviAmi - *terraform.NodeApplyableOutput
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
  output.az - *terraform.NodeApplyableOutput
  output.destroy - *terraform.NodeApplyableOutput
  output.jumpPublicIp - *terraform.NodeApplyableOutput
  output.ubuntuBionic - *terraform.NodeApplyableOutput
  output.ubuntuFocal - *terraform.NodeApplyableOutput
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/13 15:00:02 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.jump (expand)" (*terraform.nodeExpandPlannableResource) config from aws_instance.tf:134,1-31
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_instance.jump (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table_association.subnetAssociationAviVs (expand)" (*terraform.nodeExpandPlannableResource) config from aws_vpc.tf:128,1-64
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table_association.subnetAssociationAviVs (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_instance_profile.AviController-Instance-Profile (expand)" (*terraform.nodeExpandPlannableResource) config from aws_iam.tf:150,1-69
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_instance_profile.AviController-Instance-Profile (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_key_pair.kpOpencart (expand)" (*terraform.nodeExpandPlannableResource) config from aws_kp.tf:23,1-37
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_key_pair.kpOpencart (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role.vmimport (expand)" (*terraform.nodeExpandPlannableResource) config from aws_iam.tf:155,1-35
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role.vmimport (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_eip.eipForNatGw (expand)" (*terraform.nodeExpandPlannableResource) config from aws_vpc.tf:83,1-33
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_eip.eipForNatGw (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach3 (expand)" (*terraform.nodeExpandPlannableResource) config from aws_iam.tf:115,1-56
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach3 (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route53_record.aviCtrl (expand)" (*terraform.nodeExpandPlannableResource) config from aws_route53.tf:13,3-42
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route53_record.aviCtrl (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.sgOpencart (expand)" (*terraform.nodeExpandPlannableResource) config from aws_sg.tf:109,1-43
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group.sgOpencart (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table.rtPrivate (expand)" (*terraform.nodeExpandPlannableResource) config from aws_vpc.tf:95,1-39
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table.rtPrivate (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-R53-Policy (expand)" (*terraform.nodeExpandPlannableResource) config from aws_iam.tf:15,1-53
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-R53-Policy (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route53_record.jump (expand)" (*terraform.nodeExpandPlannableResource) config from aws_route53.tf:5,1-37
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route53_record.jump (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_instance_profile.Ansible-Instance-Profile (expand)" (*terraform.nodeExpandPlannableResource) config from aws_iam.tf:145,1-63
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_instance_profile.Ansible-Instance-Profile (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "data.template_file.jump (expand)" (*terraform.nodeExpandPlannableResource) config from hcl.Range{Filename:"aws_instance.tf", Start:hcl.Pos{Line:121, Column:1, Byte:2995}, End:hcl.Pos{Line:121, Column:28, Byte:3022}}
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to data.template_file.jump (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnetAviVs (expand)" (*terraform.nodeExpandPlannableResource) config from aws_vpc.tf:48,1-36
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_subnet.subnetAviVs (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_autoscaling_group.autoScalingGroup (expand)" (*terraform.nodeExpandPlannableResource) config from aws_instance.tf:65,1-52
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_autoscaling_group.autoScalingGroup (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach6 (expand)" (*terraform.nodeExpandPlannableResource) config from aws_iam.tf:130,1-56
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach6 (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_ami.ubuntuFocal (expand)" (*terraform.nodeExpandPlannableResource) config from hcl.Range{Filename:"aws_instance.tf", Start:hcl.Pos{Line:25, Column:1, Byte:429}, End:hcl.Pos{Line:25, Column:29, Byte:457}}
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to data.aws_ami.ubuntuFocal (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach4 (expand)" (*terraform.nodeExpandPlannableResource) config from aws_iam.tf:120,1-56
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach4 (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_launch_template.templateAsg (expand)" (*terraform.nodeExpandPlannableResource) config from aws_instance.tf:57,1-45
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_launch_template.templateAsg (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnetBackend (expand)" (*terraform.nodeExpandPlannableResource) config from aws_vpc.tf:59,1-38
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_subnet.subnetBackend (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnetMgt (expand)" (*terraform.nodeExpandPlannableResource) config from aws_vpc.tf:36,1-34
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_subnet.subnetMgt (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach5 (expand)" (*terraform.nodeExpandPlannableResource) config from aws_iam.tf:125,1-56
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach5 (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table_association.subnetAssociationBackend (expand)" (*terraform.nodeExpandPlannableResource) config from aws_vpc.tf:116,1-66
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table_association.subnetAssociationBackend (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-IAM-Policy (expand)" (*terraform.nodeExpandPlannableResource) config from aws_iam.tf:51,1-53
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-IAM-Policy (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach7 (expand)" (*terraform.nodeExpandPlannableResource) config from aws_iam.tf:135,1-56
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach7 (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table_association.subnetAssociationAviSeMgt (expand)" (*terraform.nodeExpandPlannableResource) config from aws_vpc.tf:122,1-67
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table_association.subnetAssociationAviSeMgt (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach8 (expand)" (*terraform.nodeExpandPlannableResource) config from aws_iam.tf:140,1-56
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach8 (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach1 (expand)" (*terraform.nodeExpandPlannableResource) config from aws_iam.tf:105,1-56
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach1 (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "null_resource.foo7 (expand)" (*terraform.nodeExpandPlannableResource) config from ansible.tf:1,1-32
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to null_resource.foo7 (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.aviCtrl (expand)" (*terraform.nodeExpandPlannableResource) config from aws_instance.tf:38,1-34
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_instance.aviCtrl (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.sgBackend (expand)" (*terraform.nodeExpandPlannableResource) config from aws_sg.tf:76,1-42
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group.sgBackend (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.sgJump (expand)" (*terraform.nodeExpandPlannableResource) config from aws_sg.tf:50,1-39
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group.sgJump (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-SNS-Policy (expand)" (*terraform.nodeExpandPlannableResource) config from aws_iam.tf:27,1-53
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-SNS-Policy (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnetAviSeMgt (expand)" (*terraform.nodeExpandPlannableResource) config from aws_vpc.tf:70,1-39
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_subnet.subnetAviSeMgt (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.sgAvi (expand)" (*terraform.nodeExpandPlannableResource) config from aws_sg.tf:3,1-38
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group.sgAvi (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.ansible-EC2-Policy (expand)" (*terraform.nodeExpandPlannableResource) config from aws_iam.tf:3,1-47
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.ansible-EC2-Policy (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-AutoScalingGroup-Policy (expand)" (*terraform.nodeExpandPlannableResource) config from aws_iam.tf:21,1-66
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-AutoScalingGroup-Policy (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table_association.subnetAssociationMysql (expand)" (*terraform.nodeExpandPlannableResource) config from aws_vpc.tf:111,1-64
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table_association.subnetAssociationMysql (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy.vmimport (expand)" (*terraform.nodeExpandPlannableResource) config from aws_iam.tf:183,1-42
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy.vmimport (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.backend (expand)" (*terraform.nodeExpandPlannableResource) config from backend.tf:10,1-34
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_instance.backend (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.sgMysql (expand)" (*terraform.nodeExpandPlannableResource) config from aws_sg.tf:142,1-40
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group.sgMysql (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-EC2-Policy (expand)" (*terraform.nodeExpandPlannableResource) config from aws_iam.tf:9,1-53
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-EC2-Policy (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_ami.ubuntuBionic (expand)" (*terraform.nodeExpandPlannableResource) config from hcl.Range{Filename:"aws_instance.tf", Start:hcl.Pos{Line:14, Column:1, Byte:219}, End:hcl.Pos{Line:14, Column:30, Byte:248}}
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to data.aws_ami.ubuntuBionic (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnetMysql (expand)" (*terraform.nodeExpandPlannableResource) config from aws_vpc.tf:42,1-36
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_subnet.subnetMysql (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_ami.aviAmi (expand)" (*terraform.nodeExpandPlannableResource) config from hcl.Range{Filename:"aws_instance.tf", Start:hcl.Pos{Line:3, Column:1, Byte:24}, End:hcl.Pos{Line:3, Column:24, Byte:47}}
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to data.aws_ami.aviAmi (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_key_pair.kpAvi (expand)" (*terraform.nodeExpandPlannableResource) config from aws_kp.tf:3,1-32
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_key_pair.kpAvi (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-SQS-Policy (expand)" (*terraform.nodeExpandPlannableResource) config from aws_iam.tf:33,1-53
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-SQS-Policy (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_key_pair.kpMysql (expand)" (*terraform.nodeExpandPlannableResource) config from aws_kp.tf:18,1-34
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_key_pair.kpMysql (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-KMS-Policy (expand)" (*terraform.nodeExpandPlannableResource) config from aws_iam.tf:45,1-53
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-KMS-Policy (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_key_pair.kpJump (expand)" (*terraform.nodeExpandPlannableResource) config from aws_kp.tf:8,1-33
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_key_pair.kpJump (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.ansible-attach1 (expand)" (*terraform.nodeExpandPlannableResource) config from aws_iam.tf:100,1-60
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.ansible-attach1 (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "data.template_file.backend (expand)" (*terraform.nodeExpandPlannableResource) config from hcl.Range{Filename:"backend.tf", Start:hcl.Pos{Line:2, Column:1, Byte:2}, End:hcl.Pos{Line:2, Column:31, Byte:32}}
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to data.template_file.backend (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_key_pair.kpBackend (expand)" (*terraform.nodeExpandPlannableResource) config from aws_kp.tf:13,1-36
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_key_pair.kpBackend (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role.AviController-Refined-Role (expand)" (*terraform.nodeExpandPlannableResource) config from aws_iam.tf:79,1-53
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role.AviController-Refined-Role (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_nat_gateway.natGw (expand)" (*terraform.nodeExpandPlannableResource) config from aws_vpc.tf:90,1-35
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_nat_gateway.natGw (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table_association.subnetAssociationMgt (expand)" (*terraform.nodeExpandPlannableResource) config from aws_vpc.tf:106,1-62
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table_association.subnetAssociationMgt (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_availability_zones.available (expand)" (*terraform.nodeExpandPlannableResource) config from hcl.Range{Filename:"aws_vpc.tf", Start:hcl.Pos{Line:32, Column:1, Byte:637}, End:hcl.Pos{Line:32, Column:42, Byte:678}}
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to data.aws_availability_zones.available (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-ASG-Notification (expand)" (*terraform.nodeExpandPlannableResource) config from aws_iam.tf:39,1-59
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-ASG-Notification (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_internet_gateway.internetGateway (expand)" (*terraform.nodeExpandPlannableResource) config from aws_vpc.tf:14,1-50
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_internet_gateway.internetGateway (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role.Ansible-Refined-Role (expand)" (*terraform.nodeExpandPlannableResource) config from aws_iam.tf:57,1-47
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role.Ansible-Refined-Role (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach2 (expand)" (*terraform.nodeExpandPlannableResource) config from aws_iam.tf:110,1-56
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach2 (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table.rt (expand)" (*terraform.nodeExpandPlannableResource) config from aws_vpc.tf:21,1-32
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table.rt (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "aws_vpc.vpc (expand)" (*terraform.nodeExpandPlannableResource) config from aws_vpc.tf:5,1-25
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_vpc.vpc (expand)
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_route53_zone.awsAviDemo (expand)" (*terraform.nodeExpandPlannableResource) config from hcl.Range{Filename:"aws_route53.tf", Start:hcl.Pos{Line:1, Column:1, Byte:0}, End:hcl.Pos{Line:1, Column:37, Byte:36}}
2021/02/13 15:00:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to data.aws_route53_zone.awsAviDemo (expand)
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/13 15:00:02 [TRACE] MissingProviderTransformer: added implicit provisioner file, first implied by null_resource.foo7 (expand)
2021/02/13 15:00:02 [TRACE] MissingProviderTransformer: added implicit provisioner remote-exec, first implied by null_resource.foo7 (expand)
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandPlannableResource
  aws_eip.eipForNatGw (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role.vmimport (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandPlannableResource
  aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
  aws_instance.backend (expand) - *terraform.nodeExpandPlannableResource
  aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
  aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpAvi (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpBackend (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpJump (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpMysql (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandPlannableResource
  aws_launch_template.templateAsg (expand) - *terraform.nodeExpandPlannableResource
  aws_nat_gateway.natGw (expand) - *terraform.nodeExpandPlannableResource
  aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
  aws_route53_record.jump (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table.rtPrivate (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgAvi (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgBackend (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgJump (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgMysql (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgOpencart (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetMysql (expand) - *terraform.nodeExpandPlannableResource
  aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
  data.aws_ami.aviAmi (expand) - *terraform.nodeExpandPlannableResource
  data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
  data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandPlannableResource
  data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
  data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandPlannableResource
  data.template_file.backend (expand) - *terraform.nodeExpandPlannableResource
  data.template_file.jump (expand) - *terraform.nodeExpandPlannableResource
  null_resource.foo7 (expand) - *terraform.nodeExpandPlannableResource
  output.aviAmi - *terraform.NodeApplyableOutput
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
  output.az - *terraform.NodeApplyableOutput
  output.destroy - *terraform.NodeApplyableOutput
  output.jumpPublicIp - *terraform.NodeApplyableOutput
  output.ubuntuBionic - *terraform.NodeApplyableOutput
  output.ubuntuFocal - *terraform.NodeApplyableOutput
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/13 15:00:02 [TRACE] ProvisionerTransformer: aws_instance.jump (expand) is provisioned by remote-exec ("provisioner.remote-exec")
2021/02/13 15:00:02 [TRACE] ProvisionerTransformer: null_resource.foo7 (expand) is provisioned by file ("provisioner.file")
2021/02/13 15:00:02 [TRACE] ProvisionerTransformer: null_resource.foo7 (expand) is provisioned by file ("provisioner.file")
2021/02/13 15:00:02 [TRACE] ProvisionerTransformer: null_resource.foo7 (expand) is provisioned by remote-exec ("provisioner.remote-exec")
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.ProvisionerTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandPlannableResource
  aws_eip.eipForNatGw (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role.vmimport (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandPlannableResource
  aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
  aws_instance.backend (expand) - *terraform.nodeExpandPlannableResource
  aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpAvi (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpBackend (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpJump (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpMysql (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandPlannableResource
  aws_launch_template.templateAsg (expand) - *terraform.nodeExpandPlannableResource
  aws_nat_gateway.natGw (expand) - *terraform.nodeExpandPlannableResource
  aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
  aws_route53_record.jump (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table.rtPrivate (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgAvi (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgBackend (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgJump (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgMysql (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgOpencart (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetMysql (expand) - *terraform.nodeExpandPlannableResource
  aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
  data.aws_ami.aviAmi (expand) - *terraform.nodeExpandPlannableResource
  data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
  data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandPlannableResource
  data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
  data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandPlannableResource
  data.template_file.backend (expand) - *terraform.nodeExpandPlannableResource
  data.template_file.jump (expand) - *terraform.nodeExpandPlannableResource
  null_resource.foo7 (expand) - *terraform.nodeExpandPlannableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  output.aviAmi - *terraform.NodeApplyableOutput
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
  output.az - *terraform.NodeApplyableOutput
  output.destroy - *terraform.NodeApplyableOutput
  output.jumpPublicIp - *terraform.NodeApplyableOutput
  output.ubuntuBionic - *terraform.NodeApplyableOutput
  output.ubuntuFocal - *terraform.NodeApplyableOutput
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/13 15:00:02 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/13 15:00:02 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/aws\"]" provider configuration from provider.tf:1,1-15
2021/02/13 15:00:02 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandPlannableResource
  aws_eip.eipForNatGw (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role.vmimport (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandPlannableResource
  aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
  aws_instance.backend (expand) - *terraform.nodeExpandPlannableResource
  aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpAvi (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpBackend (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpJump (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpMysql (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandPlannableResource
  aws_launch_template.templateAsg (expand) - *terraform.nodeExpandPlannableResource
  aws_nat_gateway.natGw (expand) - *terraform.nodeExpandPlannableResource
  aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
  aws_route53_record.jump (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table.rtPrivate (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgAvi (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgBackend (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgJump (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgMysql (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgOpencart (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetMysql (expand) - *terraform.nodeExpandPlannableResource
  aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
  data.aws_ami.aviAmi (expand) - *terraform.nodeExpandPlannableResource
  data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
  data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandPlannableResource
  data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
  data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandPlannableResource
  data.template_file.backend (expand) - *terraform.nodeExpandPlannableResource
  data.template_file.jump (expand) - *terraform.nodeExpandPlannableResource
  null_resource.foo7 (expand) - *terraform.nodeExpandPlannableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  output.aviAmi - *terraform.NodeApplyableOutput
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
  output.az - *terraform.NodeApplyableOutput
  output.destroy - *terraform.NodeApplyableOutput
  output.jumpPublicIp - *terraform.NodeApplyableOutput
  output.ubuntuBionic - *terraform.NodeApplyableOutput
  output.ubuntuFocal - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:02 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/13 15:00:02 [DEBUG] adding implicit provider configuration provider["registry.terraform.io/hashicorp/template"], implied first by data.template_file.backend (expand)
2021/02/13 15:00:02 [DEBUG] adding implicit provider configuration provider["registry.terraform.io/hashicorp/null"], implied first by null_resource.foo7 (expand)
2021/02/13 15:00:02 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandPlannableResource
  aws_eip.eipForNatGw (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role.vmimport (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandPlannableResource
  aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
  aws_instance.backend (expand) - *terraform.nodeExpandPlannableResource
  aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpAvi (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpBackend (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpJump (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpMysql (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandPlannableResource
  aws_launch_template.templateAsg (expand) - *terraform.nodeExpandPlannableResource
  aws_nat_gateway.natGw (expand) - *terraform.nodeExpandPlannableResource
  aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
  aws_route53_record.jump (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table.rtPrivate (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgAvi (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgBackend (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgJump (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgMysql (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgOpencart (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetMysql (expand) - *terraform.nodeExpandPlannableResource
  aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
  data.aws_ami.aviAmi (expand) - *terraform.nodeExpandPlannableResource
  data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
  data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandPlannableResource
  data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
  data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandPlannableResource
  data.template_file.backend (expand) - *terraform.nodeExpandPlannableResource
  data.template_file.jump (expand) - *terraform.nodeExpandPlannableResource
  null_resource.foo7 (expand) - *terraform.nodeExpandPlannableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  output.aviAmi - *terraform.NodeApplyableOutput
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
  output.az - *terraform.NodeApplyableOutput
  output.destroy - *terraform.NodeApplyableOutput
  output.jumpPublicIp - *terraform.NodeApplyableOutput
  output.ubuntuBionic - *terraform.NodeApplyableOutput
  output.ubuntuFocal - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:02 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/null"] serving null_resource.foo7 (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "null_resource.foo7 (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/null"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table_association.subnetAssociationAviVs (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_route_table_association.subnetAssociationAviVs (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_instance_profile.AviController-Instance-Profile (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_iam_instance_profile.AviController-Instance-Profile (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/template"] serving data.template_file.jump (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "data.template_file.jump (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/template"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach5 (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach5 (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.ansible-attach1 (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.ansible-attach1 (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/template"] serving data.template_file.backend (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "data.template_file.backend (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/template"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role.Ansible-Refined-Role (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_iam_role.Ansible-Refined-Role (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-ASG-Notification (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-ASG-Notification (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_vpc.vpc (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_vpc.vpc (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table.rtPrivate (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_route_table.rtPrivate (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_subnet.subnetAviSeMgt (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_subnet.subnetAviSeMgt (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-AutoScalingGroup-Policy (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-AutoScalingGroup-Policy (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_key_pair.kpJump (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_key_pair.kpJump (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route53_record.aviCtrl (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_route53_record.aviCtrl (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table_association.subnetAssociationBackend (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_route_table_association.subnetAssociationBackend (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_instance.jump (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_instance.jump (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving data.aws_ami.ubuntuFocal (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "data.aws_ami.ubuntuFocal (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach8 (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach8 (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group.sgAvi (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_security_group.sgAvi (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role.AviController-Refined-Role (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_iam_role.AviController-Refined-Role (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table_association.subnetAssociationMgt (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_route_table_association.subnetAssociationMgt (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route53_record.jump (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_route53_record.jump (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_instance_profile.Ansible-Instance-Profile (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_iam_instance_profile.Ansible-Instance-Profile (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_subnet.subnetBackend (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_subnet.subnetBackend (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group.sgJump (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_security_group.sgJump (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving data.aws_availability_zones.available (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "data.aws_availability_zones.available (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table.rt (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_route_table.rt (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach3 (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach3 (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach1 (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach1 (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_instance.backend (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_instance.backend (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_eip.eipForNatGw (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_eip.eipForNatGw (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_autoscaling_group.autoScalingGroup (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_autoscaling_group.autoScalingGroup (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role.vmimport (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_iam_role.vmimport (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group.sgOpencart (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_security_group.sgOpencart (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.ansible-EC2-Policy (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_iam_policy.ansible-EC2-Policy (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group.sgMysql (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_security_group.sgMysql (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving data.aws_ami.ubuntuBionic (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "data.aws_ami.ubuntuBionic (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_subnet.subnetMgt (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_subnet.subnetMgt (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-SQS-Policy (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-SQS-Policy (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach2 (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach2 (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_instance.aviCtrl (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_instance.aviCtrl (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-R53-Policy (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-R53-Policy (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach6 (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach6 (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach4 (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach4 (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy.vmimport (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_iam_role_policy.vmimport (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving data.aws_ami.aviAmi (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "data.aws_ami.aviAmi (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_key_pair.kpOpencart (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_key_pair.kpOpencart (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_key_pair.kpBackend (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_key_pair.kpBackend (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving data.aws_route53_zone.awsAviDemo (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "data.aws_route53_zone.awsAviDemo (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-IAM-Policy (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-IAM-Policy (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_subnet.subnetMysql (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_subnet.subnetMysql (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_key_pair.kpMysql (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_key_pair.kpMysql (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_nat_gateway.natGw (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_nat_gateway.natGw (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-EC2-Policy (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-EC2-Policy (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_subnet.subnetAviVs (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_subnet.subnetAviVs (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_internet_gateway.internetGateway (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_internet_gateway.internetGateway (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-SNS-Policy (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-SNS-Policy (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table_association.subnetAssociationMysql (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_route_table_association.subnetAssociationMysql (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_key_pair.kpAvi (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_key_pair.kpAvi (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-KMS-Policy (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-KMS-Policy (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group.sgBackend (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_security_group.sgBackend (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table_association.subnetAssociationAviSeMgt (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_route_table_association.subnetAssociationAviSeMgt (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_launch_template.templateAsg (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_launch_template.templateAsg (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach7 (expand)
2021/02/13 15:00:02 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach7 (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_eip.eipForNatGw (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.vmimport (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.backend (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpAvi (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpBackend (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpJump (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpMysql (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_launch_template.templateAsg (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_nat_gateway.natGw (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.jump (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table.rtPrivate (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgAvi (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgBackend (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgJump (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgMysql (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgOpencart (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetMysql (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.aviAmi (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.template_file.backend (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  data.template_file.jump (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  null_resource.foo7 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  output.aviAmi - *terraform.NodeApplyableOutput
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
  output.az - *terraform.NodeApplyableOutput
  output.destroy - *terraform.NodeApplyableOutput
  output.jumpPublicIp - *terraform.NodeApplyableOutput
  output.ubuntuBionic - *terraform.NodeApplyableOutput
  output.ubuntuFocal - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:02 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/13 15:00:02 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/13 15:00:02 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/13 15:00:02 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_eip.eipForNatGw (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.vmimport (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.backend (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpAvi (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpBackend (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpJump (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpMysql (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_launch_template.templateAsg (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_nat_gateway.natGw (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.jump (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table.rtPrivate (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgAvi (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgBackend (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgJump (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgMysql (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgOpencart (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetMysql (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.aviAmi (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.template_file.backend (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  data.template_file.jump (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  null_resource.foo7 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  output.aviAmi - *terraform.NodeApplyableOutput
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
  output.az - *terraform.NodeApplyableOutput
  output.destroy - *terraform.NodeApplyableOutput
  output.jumpPublicIp - *terraform.NodeApplyableOutput
  output.ubuntuBionic - *terraform.NodeApplyableOutput
  output.ubuntuFocal - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_key_pair.kpBackend (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role.AviController-Refined-Role (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_nat_gateway.natGw (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table_association.subnetAssociationMgt (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_availability_zones.available (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-ASG-Notification (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_internet_gateway.internetGateway (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role.Ansible-Refined-Role (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach2 (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table.rt (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_vpc.vpc (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_route53_zone.awsAviDemo (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.jump (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching provisioner "remote-exec" config schema to aws_instance.jump (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table_association.subnetAssociationAviVs (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_instance_profile.AviController-Instance-Profile (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_key_pair.kpOpencart (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role.vmimport (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_eip.eipForNatGw (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach3 (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route53_record.aviCtrl (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.sgOpencart (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table.rtPrivate (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-R53-Policy (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route53_record.jump (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_instance_profile.Ansible-Instance-Profile (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to data.template_file.jump (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnetAviVs (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_autoscaling_group.autoScalingGroup (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach6 (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_ami.ubuntuFocal (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach4 (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_launch_template.templateAsg (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnetBackend (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnetMgt (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach5 (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table_association.subnetAssociationBackend (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-IAM-Policy (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach7 (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table_association.subnetAssociationAviSeMgt (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach8 (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach1 (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to null_resource.foo7 (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching provisioner "file" config schema to null_resource.foo7 (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching provisioner "file" config schema to null_resource.foo7 (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching provisioner "remote-exec" config schema to null_resource.foo7 (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.aviCtrl (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.sgBackend (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.sgJump (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/null"]
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-SNS-Policy (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnetAviSeMgt (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.sgAvi (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.ansible-EC2-Policy (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/template"]
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-AutoScalingGroup-Policy (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table_association.subnetAssociationMysql (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy.vmimport (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.backend (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.sgMysql (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-EC2-Policy (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_ami.ubuntuBionic (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnetMysql (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_ami.aviAmi (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_key_pair.kpAvi (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-SQS-Policy (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_key_pair.kpMysql (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-KMS-Policy (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_key_pair.kpJump (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.ansible-attach1 (expand)
2021/02/13 15:00:02 [TRACE] AttachSchemaTransformer: attaching resource schema to data.template_file.backend (expand)
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "output.destroy" references: [var.privateKey aws_instance.jump (expand) var.ansible var.ansible var.controller]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-AutoScalingGroup-Policy (expand)" references: []
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationMysql (expand)" references: [aws_subnet.subnetMysql (expand) aws_route_table.rtPrivate (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_iam_role_policy.vmimport (expand)" references: [aws_iam_role.vmimport (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "output.aviCtrlPublicIp" references: [aws_instance.aviCtrl (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "var.avi_username" references: []
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "var.jump" references: []
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "provisioner.file" references: []
2021/02/13 15:00:02 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:02 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_instance.backend (expand)" references: [data.aws_availability_zones.available (expand) data.template_file.backend (expand) var.backend aws_subnet.subnetBackend (expand) data.aws_ami.ubuntuBionic (expand) aws_key_pair.kpBackend (expand) aws_security_group.sgBackend (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_security_group.sgMysql (expand)" references: [aws_vpc.vpc (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-EC2-Policy (expand)" references: []
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "data.aws_ami.ubuntuBionic (expand)" references: []
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_subnet.subnetMysql (expand)" references: [var.aws aws_vpc.vpc (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "data.aws_ami.aviAmi (expand)" references: [var.controller]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "var.backend" references: []
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_key_pair.kpJump (expand)" references: [var.public_key_path]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.ansible-attach1 (expand)" references: [aws_iam_policy.ansible-EC2-Policy (expand) aws_iam_role.Ansible-Refined-Role (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "data.template_file.backend (expand)" references: [var.backend var.backend var.backend]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "var.avi_password" references: []
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_key_pair.kpAvi (expand)" references: [var.public_key_path]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-SQS-Policy (expand)" references: []
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_key_pair.kpMysql (expand)" references: [var.public_key_path]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-KMS-Policy (expand)" references: []
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "data.aws_availability_zones.available (expand)" references: []
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "var.controller" references: []
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "output.az" references: [data.aws_availability_zones.available (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_key_pair.kpBackend (expand)" references: [var.public_key_path]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_iam_role.AviController-Refined-Role (expand)" references: []
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_nat_gateway.natGw (expand)" references: [aws_subnet.subnetMgt (expand) aws_eip.eipForNatGw (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationMgt (expand)" references: [aws_route_table.rt (expand) aws_subnet.subnetMgt (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-ASG-Notification (expand)" references: []
2021/02/13 15:00:02 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_internet_gateway.internetGateway (expand)" references: [var.aws aws_vpc.vpc (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "var.autoScalingGroupUserdata" references: []
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_iam_role.Ansible-Refined-Role (expand)" references: []
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach2 (expand)" references: [aws_iam_role.AviController-Refined-Role (expand) aws_iam_policy.AviController-R53-Policy (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "var.public_key_path" references: []
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "provisioner.remote-exec" references: []
2021/02/13 15:00:02 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:02 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_route_table.rt (expand)" references: [var.aws aws_vpc.vpc (expand) aws_internet_gateway.internetGateway (expand)]
2021/02/13 15:00:02 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_vpc.vpc (expand)" references: [var.aws var.aws]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "data.aws_route53_zone.awsAviDemo (expand)" references: [var.aws]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/aws\"]" references: []
2021/02/13 15:00:02 [INFO] ReferenceTransformer: reference not found: "self"
2021/02/13 15:00:02 [INFO] ReferenceTransformer: reference not found: "self"
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_instance.jump (expand)" references: [aws_subnet.subnetMgt (expand) data.aws_ami.ubuntuFocal (expand) aws_key_pair.kpJump (expand) aws_iam_instance_profile.Ansible-Instance-Profile (expand) aws_security_group.sgJump (expand) data.template_file.jump (expand) var.jump var.privateKey var.jump var.privateKey var.jump]
2021/02/13 15:00:02 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationAviVs (expand)" references: [data.aws_availability_zones.available (expand) aws_subnet.subnetAviVs (expand) aws_route_table.rt (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_iam_instance_profile.AviController-Instance-Profile (expand)" references: [aws_iam_role.AviController-Refined-Role (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_key_pair.kpOpencart (expand)" references: [var.public_key_path]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_iam_role.vmimport (expand)" references: []
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_eip.eipForNatGw (expand)" references: [aws_internet_gateway.internetGateway (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach3 (expand)" references: [aws_iam_role.AviController-Refined-Role (expand) aws_iam_policy.AviController-AutoScalingGroup-Policy (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_route53_record.aviCtrl (expand)" references: [data.aws_route53_zone.awsAviDemo (expand) aws_instance.aviCtrl (expand) var.controller var.aws]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_iam_instance_profile.Ansible-Instance-Profile (expand)" references: [aws_iam_role.Ansible-Refined-Role (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "data.template_file.jump (expand)" references: [var.jump var.ansible var.jump var.privateKey var.ansible var.jump]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "var.ansible" references: []
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "output.ubuntuFocal" references: [data.aws_ami.ubuntuFocal (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_security_group.sgOpencart (expand)" references: [aws_vpc.vpc (expand)]
2021/02/13 15:00:02 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_route_table.rtPrivate (expand)" references: [var.aws aws_vpc.vpc (expand) aws_nat_gateway.natGw (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-R53-Policy (expand)" references: []
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_route53_record.jump (expand)" references: [aws_instance.jump (expand) var.jump var.aws data.aws_route53_zone.awsAviDemo (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "output.aviAmi" references: [data.aws_ami.aviAmi (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "output.ubuntuBionic" references: [data.aws_ami.ubuntuBionic (expand)]
2021/02/13 15:00:02 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:02 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:02 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_subnet.subnetAviVs (expand)" references: [data.aws_availability_zones.available (expand) aws_vpc.vpc (expand) data.aws_availability_zones.available (expand) var.aws]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_autoscaling_group.autoScalingGroup (expand)" references: [aws_subnet.subnetBackend (expand) aws_subnet.subnetBackend (expand) aws_subnet.subnetBackend (expand) aws_launch_template.templateAsg (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach6 (expand)" references: [aws_iam_role.AviController-Refined-Role (expand) aws_iam_policy.AviController-KMS-Policy (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "data.aws_ami.ubuntuFocal (expand)" references: []
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach4 (expand)" references: [aws_iam_policy.AviController-SNS-Policy (expand) aws_iam_role.AviController-Refined-Role (expand)]
2021/02/13 15:00:02 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationBackend (expand)" references: [data.aws_availability_zones.available (expand) aws_subnet.subnetBackend (expand) aws_route_table.rtPrivate (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-IAM-Policy (expand)" references: []
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "var.aws" references: []
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "output.jumpPublicIp" references: [aws_instance.jump (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_launch_template.templateAsg (expand)" references: [var.autoScalingGroupUserdata aws_security_group.sgBackend (expand) var.backend data.aws_ami.ubuntuBionic (expand)]
2021/02/13 15:00:02 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:02 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:02 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_subnet.subnetBackend (expand)" references: [data.aws_availability_zones.available (expand) var.aws aws_vpc.vpc (expand) data.aws_availability_zones.available (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_subnet.subnetMgt (expand)" references: [aws_vpc.vpc (expand) var.aws]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach5 (expand)" references: [aws_iam_policy.AviController-SQS-Policy (expand) aws_iam_role.AviController-Refined-Role (expand)]
2021/02/13 15:00:02 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_instance.aviCtrl (expand)" references: [var.controller data.aws_ami.aviAmi (expand) aws_key_pair.kpAvi (expand) aws_security_group.sgAvi (expand) aws_iam_instance_profile.AviController-Instance-Profile (expand) var.controller aws_subnet.subnetMgt (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_security_group.sgBackend (expand)" references: [aws_vpc.vpc (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_security_group.sgJump (expand)" references: [aws_vpc.vpc (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach7 (expand)" references: [aws_iam_policy.AviController-ASG-Notification (expand) aws_iam_role.AviController-Refined-Role (expand)]
2021/02/13 15:00:02 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationAviSeMgt (expand)" references: [data.aws_availability_zones.available (expand) aws_route_table.rt (expand) aws_subnet.subnetAviSeMgt (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach8 (expand)" references: [aws_iam_policy.AviController-IAM-Policy (expand) aws_iam_role.AviController-Refined-Role (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach1 (expand)" references: [aws_iam_policy.AviController-EC2-Policy (expand) aws_iam_role.AviController-Refined-Role (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "null_resource.foo7 (expand)" references: [aws_instance.jump (expand) var.privateKey var.jump aws_instance.jump (expand) var.jump aws_instance.jump (expand) var.privateKey var.privateKey var.privateKey var.jump aws_instance.jump (expand) var.privateKey var.ansible var.privateKey var.jump aws_instance.jump (expand) var.privateKey var.ansible var.ansible var.ansible var.avi_username var.avi_password var.controller var.controller aws_instance.aviCtrl (expand) aws_instance.aviCtrl (expand) var.aws data.aws_availability_zones.available (expand) aws_subnet.subnetAviVs (expand) aws_subnet.subnetAviSeMgt (expand) aws_vpc.vpc (expand) aws_instance.backend (expand) aws_autoscaling_group.autoScalingGroup (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "var.privateKey" references: []
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/null\"]" references: []
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/template\"]" references: []
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-SNS-Policy (expand)" references: []
2021/02/13 15:00:02 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:02 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:02 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_subnet.subnetAviSeMgt (expand)" references: [data.aws_availability_zones.available (expand) data.aws_availability_zones.available (expand) var.aws aws_vpc.vpc (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_security_group.sgAvi (expand)" references: [aws_vpc.vpc (expand)]
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "aws_iam_policy.ansible-EC2-Policy (expand)" references: []
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandPlannableResource
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_eip.eipForNatGw (expand) - *terraform.nodeExpandPlannableResource
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.vmimport (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.controller - *terraform.NodeRootVariable
  aws_instance.backend (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    data.template_file.backend (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgJump (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandPlannableResource
    data.template_file.jump (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_key_pair.kpAvi (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpBackend (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpJump (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpMysql (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_launch_template.templateAsg (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.autoScalingGroupUserdata - *terraform.NodeRootVariable
    var.backend - *terraform.NodeRootVariable
  aws_nat_gateway.natGw (expand) - *terraform.nodeExpandPlannableResource
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
  aws_route53_record.jump (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
  aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table.rtPrivate (expand) - *terraform.nodeExpandPlannableResource
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgAvi (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgJump (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgOpencart (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  data.aws_ami.aviAmi (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.controller - *terraform.NodeRootVariable
  data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  data.template_file.backend (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  data.template_file.jump (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
    var.ansible - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  null_resource.foo7 (expand) - *terraform.nodeExpandPlannableResource
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.backend (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ansible - *terraform.NodeRootVariable
    var.avi_password - *terraform.NodeRootVariable
    var.avi_username - *terraform.NodeRootVariable
    var.aws - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  output.aviAmi - *terraform.NodeApplyableOutput
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandPlannableResource
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
  output.az - *terraform.NodeApplyableOutput
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
  output.destroy - *terraform.NodeApplyableOutput
    aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
    var.ansible - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  output.jumpPublicIp - *terraform.NodeApplyableOutput
    aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
  output.ubuntuBionic - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
  output.ubuntuFocal - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_key_pair.kpBackend depends on []
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_iam_role.AviController-Refined-Role depends on []
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_nat_gateway.natGw depends on [aws_eip.eipForNatGw aws_internet_gateway.internetGateway aws_subnet.subnetMgt aws_vpc.vpc]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_route_table_association.subnetAssociationMgt depends on [aws_internet_gateway.internetGateway aws_route_table.rt aws_subnet.subnetMgt aws_vpc.vpc]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: data.aws_availability_zones.available depends on []
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_iam_policy.AviController-ASG-Notification depends on []
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_internet_gateway.internetGateway depends on [aws_vpc.vpc]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_iam_role.Ansible-Refined-Role depends on []
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_iam_role_policy_attachment.avi-attach2 depends on [aws_iam_policy.AviController-R53-Policy aws_iam_role.AviController-Refined-Role]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_route_table.rt depends on [aws_internet_gateway.internetGateway aws_vpc.vpc]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_vpc.vpc depends on []
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: data.aws_route53_zone.awsAviDemo depends on []
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_instance.jump depends on [aws_iam_instance_profile.Ansible-Instance-Profile aws_iam_role.Ansible-Refined-Role aws_key_pair.kpJump aws_security_group.sgJump aws_subnet.subnetMgt aws_vpc.vpc data.aws_ami.ubuntuFocal data.template_file.jump]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_route_table_association.subnetAssociationAviVs depends on [aws_internet_gateway.internetGateway aws_route_table.rt aws_subnet.subnetAviVs aws_vpc.vpc data.aws_availability_zones.available]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_iam_instance_profile.AviController-Instance-Profile depends on [aws_iam_role.AviController-Refined-Role]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_key_pair.kpOpencart depends on []
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_iam_role.vmimport depends on []
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_eip.eipForNatGw depends on [aws_internet_gateway.internetGateway aws_vpc.vpc]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_iam_role_policy_attachment.avi-attach3 depends on [aws_iam_policy.AviController-AutoScalingGroup-Policy aws_iam_role.AviController-Refined-Role]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_route53_record.aviCtrl depends on [aws_iam_instance_profile.AviController-Instance-Profile aws_iam_role.AviController-Refined-Role aws_instance.aviCtrl aws_key_pair.kpAvi aws_security_group.sgAvi aws_subnet.subnetMgt aws_vpc.vpc data.aws_ami.aviAmi data.aws_route53_zone.awsAviDemo]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_security_group.sgOpencart depends on [aws_vpc.vpc]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_route_table.rtPrivate depends on [aws_eip.eipForNatGw aws_internet_gateway.internetGateway aws_nat_gateway.natGw aws_subnet.subnetMgt aws_vpc.vpc]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_iam_policy.AviController-R53-Policy depends on []
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_route53_record.jump depends on [aws_iam_instance_profile.Ansible-Instance-Profile aws_iam_role.Ansible-Refined-Role aws_instance.jump aws_key_pair.kpJump aws_security_group.sgJump aws_subnet.subnetMgt aws_vpc.vpc data.aws_ami.ubuntuFocal data.aws_route53_zone.awsAviDemo data.template_file.jump]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_iam_instance_profile.Ansible-Instance-Profile depends on [aws_iam_role.Ansible-Refined-Role]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: data.template_file.jump depends on []
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_subnet.subnetAviVs depends on [aws_vpc.vpc data.aws_availability_zones.available]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_autoscaling_group.autoScalingGroup depends on [aws_launch_template.templateAsg aws_security_group.sgBackend aws_subnet.subnetBackend aws_vpc.vpc data.aws_ami.ubuntuBionic data.aws_availability_zones.available]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_iam_role_policy_attachment.avi-attach6 depends on [aws_iam_policy.AviController-KMS-Policy aws_iam_role.AviController-Refined-Role]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: data.aws_ami.ubuntuFocal depends on []
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_iam_role_policy_attachment.avi-attach4 depends on [aws_iam_policy.AviController-SNS-Policy aws_iam_role.AviController-Refined-Role]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_launch_template.templateAsg depends on [aws_security_group.sgBackend aws_vpc.vpc data.aws_ami.ubuntuBionic]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_subnet.subnetBackend depends on [aws_vpc.vpc data.aws_availability_zones.available]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_subnet.subnetMgt depends on [aws_vpc.vpc]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_iam_role_policy_attachment.avi-attach5 depends on [aws_iam_policy.AviController-SQS-Policy aws_iam_role.AviController-Refined-Role]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_route_table_association.subnetAssociationBackend depends on [aws_eip.eipForNatGw aws_internet_gateway.internetGateway aws_nat_gateway.natGw aws_route_table.rtPrivate aws_subnet.subnetBackend aws_subnet.subnetMgt aws_vpc.vpc data.aws_availability_zones.available]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_iam_policy.AviController-IAM-Policy depends on []
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_iam_role_policy_attachment.avi-attach7 depends on [aws_iam_policy.AviController-ASG-Notification aws_iam_role.AviController-Refined-Role]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_route_table_association.subnetAssociationAviSeMgt depends on [aws_internet_gateway.internetGateway aws_route_table.rt aws_subnet.subnetAviSeMgt aws_vpc.vpc data.aws_availability_zones.available]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_iam_role_policy_attachment.avi-attach8 depends on [aws_iam_policy.AviController-IAM-Policy aws_iam_role.AviController-Refined-Role]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_iam_role_policy_attachment.avi-attach1 depends on [aws_iam_policy.AviController-EC2-Policy aws_iam_role.AviController-Refined-Role]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: null_resource.foo7 depends on [aws_autoscaling_group.autoScalingGroup aws_iam_instance_profile.Ansible-Instance-Profile aws_iam_instance_profile.AviController-Instance-Profile aws_iam_role.Ansible-Refined-Role aws_iam_role.AviController-Refined-Role aws_instance.aviCtrl aws_instance.backend aws_instance.jump aws_key_pair.kpAvi aws_key_pair.kpBackend aws_key_pair.kpJump aws_launch_template.templateAsg aws_security_group.sgAvi aws_security_group.sgBackend aws_security_group.sgJump aws_subnet.subnetAviSeMgt aws_subnet.subnetAviVs aws_subnet.subnetBackend aws_subnet.subnetMgt aws_vpc.vpc data.aws_ami.aviAmi data.aws_ami.ubuntuBionic data.aws_ami.ubuntuFocal data.aws_availability_zones.available data.template_file.backend data.template_file.jump]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_instance.aviCtrl depends on [aws_iam_instance_profile.AviController-Instance-Profile aws_iam_role.AviController-Refined-Role aws_key_pair.kpAvi aws_security_group.sgAvi aws_subnet.subnetMgt aws_vpc.vpc data.aws_ami.aviAmi]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_security_group.sgBackend depends on [aws_vpc.vpc]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_security_group.sgJump depends on [aws_vpc.vpc]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_iam_policy.AviController-SNS-Policy depends on []
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_subnet.subnetAviSeMgt depends on [aws_vpc.vpc data.aws_availability_zones.available]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_security_group.sgAvi depends on [aws_vpc.vpc]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_iam_policy.ansible-EC2-Policy depends on []
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_iam_policy.AviController-AutoScalingGroup-Policy depends on []
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_route_table_association.subnetAssociationMysql depends on [aws_eip.eipForNatGw aws_internet_gateway.internetGateway aws_nat_gateway.natGw aws_route_table.rtPrivate aws_subnet.subnetMgt aws_subnet.subnetMysql aws_vpc.vpc]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_iam_role_policy.vmimport depends on [aws_iam_role.vmimport]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_instance.backend depends on [aws_key_pair.kpBackend aws_security_group.sgBackend aws_subnet.subnetBackend aws_vpc.vpc data.aws_ami.ubuntuBionic data.aws_availability_zones.available data.template_file.backend]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_security_group.sgMysql depends on [aws_vpc.vpc]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_iam_policy.AviController-EC2-Policy depends on []
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: data.aws_ami.ubuntuBionic depends on []
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_subnet.subnetMysql depends on [aws_vpc.vpc]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: data.aws_ami.aviAmi depends on []
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_key_pair.kpAvi depends on []
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_iam_policy.AviController-SQS-Policy depends on []
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_key_pair.kpMysql depends on []
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_iam_policy.AviController-KMS-Policy depends on []
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_key_pair.kpJump depends on []
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: aws_iam_role_policy_attachment.ansible-attach1 depends on [aws_iam_policy.ansible-EC2-Policy aws_iam_role.Ansible-Refined-Role]
2021/02/13 15:00:02 [TRACE] AttachDependenciesTransformer: data.template_file.backend depends on []
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/13 15:00:02 [TRACE] attachDataDependenciesTransformer: data.aws_ami.ubuntuBionic depends on []
2021/02/13 15:00:02 [TRACE] attachDataDependenciesTransformer: data.aws_ami.aviAmi depends on []
2021/02/13 15:00:02 [TRACE] attachDataDependenciesTransformer: data.template_file.backend depends on []
2021/02/13 15:00:02 [TRACE] attachDataDependenciesTransformer: data.aws_availability_zones.available depends on []
2021/02/13 15:00:02 [TRACE] attachDataDependenciesTransformer: data.aws_route53_zone.awsAviDemo depends on []
2021/02/13 15:00:02 [TRACE] attachDataDependenciesTransformer: data.template_file.jump depends on []
2021/02/13 15:00:02 [TRACE] attachDataDependenciesTransformer: data.aws_ami.ubuntuFocal depends on []
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_security_group.sgMysql (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_iam_policy.AviController-EC2-Policy (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "data.aws_ami.ubuntuBionic (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_instance.backend (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "data.aws_ami.aviAmi (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_subnet.subnetMysql (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_iam_policy.AviController-SQS-Policy (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_key_pair.kpMysql (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_iam_policy.AviController-KMS-Policy (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_key_pair.kpJump (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_iam_role_policy_attachment.ansible-attach1 (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "data.template_file.backend (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_key_pair.kpAvi (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_iam_role.AviController-Refined-Role (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_nat_gateway.natGw (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_route_table_association.subnetAssociationMgt (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "data.aws_availability_zones.available (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_key_pair.kpBackend (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_internet_gateway.internetGateway (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_iam_policy.AviController-ASG-Notification (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_iam_role_policy_attachment.avi-attach2 (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_iam_role.Ansible-Refined-Role (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_vpc.vpc (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "data.aws_route53_zone.awsAviDemo (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_route_table.rt (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_route_table_association.subnetAssociationAviVs (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_iam_instance_profile.AviController-Instance-Profile (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_key_pair.kpOpencart (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_instance.jump (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_eip.eipForNatGw (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_iam_role_policy_attachment.avi-attach3 (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_route53_record.aviCtrl (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_iam_role.vmimport (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_route_table.rtPrivate (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_iam_policy.AviController-R53-Policy (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_route53_record.jump (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_iam_instance_profile.Ansible-Instance-Profile (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "data.template_file.jump (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_security_group.sgOpencart (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_autoscaling_group.autoScalingGroup (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_iam_role_policy_attachment.avi-attach6 (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "data.aws_ami.ubuntuFocal (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_subnet.subnetAviVs (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_iam_role_policy_attachment.avi-attach4 (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_subnet.subnetBackend (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_subnet.subnetMgt (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_iam_role_policy_attachment.avi-attach5 (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_route_table_association.subnetAssociationBackend (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_iam_policy.AviController-IAM-Policy (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_launch_template.templateAsg (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_iam_role_policy_attachment.avi-attach8 (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_iam_role_policy_attachment.avi-attach1 (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "null_resource.foo7 (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_instance.aviCtrl (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_security_group.sgBackend (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_security_group.sgJump (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_iam_role_policy_attachment.avi-attach7 (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_route_table_association.subnetAssociationAviSeMgt (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_subnet.subnetAviSeMgt (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_security_group.sgAvi (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_iam_policy.ansible-EC2-Policy (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_iam_policy.AviController-SNS-Policy (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_route_table_association.subnetAssociationMysql (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_iam_role_policy.vmimport (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] ForcedCBDTransformer: "aws_iam_policy.AviController-AutoScalingGroup-Policy (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandPlannableResource
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_eip.eipForNatGw (expand) - *terraform.nodeExpandPlannableResource
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.vmimport (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.controller - *terraform.NodeRootVariable
  aws_instance.backend (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    data.template_file.backend (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgJump (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandPlannableResource
    data.template_file.jump (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_key_pair.kpAvi (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpBackend (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpJump (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpMysql (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_launch_template.templateAsg (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.autoScalingGroupUserdata - *terraform.NodeRootVariable
    var.backend - *terraform.NodeRootVariable
  aws_nat_gateway.natGw (expand) - *terraform.nodeExpandPlannableResource
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
  aws_route53_record.jump (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
  aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table.rtPrivate (expand) - *terraform.nodeExpandPlannableResource
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgAvi (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgJump (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgOpencart (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  data.aws_ami.aviAmi (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.controller - *terraform.NodeRootVariable
  data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  data.template_file.backend (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  data.template_file.jump (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
    var.ansible - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandPlannableResource
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.backend (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandPlannableResource
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandPlannableResource
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandPlannableResource
    aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    aws_route53_record.jump (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgJump (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgOpencart (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandPlannableResource
    data.template_file.backend (expand) - *terraform.nodeExpandPlannableResource
    data.template_file.jump (expand) - *terraform.nodeExpandPlannableResource
    null_resource.foo7 (expand) - *terraform.nodeExpandPlannableResource
    output.aviAmi - *terraform.NodeApplyableOutput
    output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
    output.az - *terraform.NodeApplyableOutput
    output.destroy - *terraform.NodeApplyableOutput
    output.jumpPublicIp - *terraform.NodeApplyableOutput
    output.ubuntuBionic - *terraform.NodeApplyableOutput
    output.ubuntuFocal - *terraform.NodeApplyableOutput
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ansible - *terraform.NodeRootVariable
    var.autoScalingGroupUserdata - *terraform.NodeRootVariable
    var.avi_password - *terraform.NodeRootVariable
    var.avi_username - *terraform.NodeRootVariable
    var.aws - *terraform.NodeRootVariable
    var.backend - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
    var.public_key_path - *terraform.NodeRootVariable
  null_resource.foo7 (expand) - *terraform.nodeExpandPlannableResource
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.backend (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ansible - *terraform.NodeRootVariable
    var.avi_password - *terraform.NodeRootVariable
    var.avi_username - *terraform.NodeRootVariable
    var.aws - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  output.aviAmi - *terraform.NodeApplyableOutput
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandPlannableResource
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
  output.az - *terraform.NodeApplyableOutput
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
  output.destroy - *terraform.NodeApplyableOutput
    aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
    var.ansible - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  output.jumpPublicIp - *terraform.NodeApplyableOutput
    aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
  output.ubuntuBionic - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
  output.ubuntuFocal - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandPlannableResource
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_eip.eipForNatGw (expand) - *terraform.nodeExpandPlannableResource
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.vmimport (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.controller - *terraform.NodeRootVariable
  aws_instance.backend (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    data.template_file.backend (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgJump (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandPlannableResource
    data.template_file.jump (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_key_pair.kpAvi (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpBackend (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpJump (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpMysql (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_launch_template.templateAsg (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.autoScalingGroupUserdata - *terraform.NodeRootVariable
    var.backend - *terraform.NodeRootVariable
  aws_nat_gateway.natGw (expand) - *terraform.nodeExpandPlannableResource
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
  aws_route53_record.jump (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
  aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table.rtPrivate (expand) - *terraform.nodeExpandPlannableResource
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgAvi (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgJump (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgOpencart (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  data.aws_ami.aviAmi (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.controller - *terraform.NodeRootVariable
  data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  data.template_file.backend (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  data.template_file.jump (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
    var.ansible - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandPlannableResource
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.backend (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandPlannableResource
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandPlannableResource
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandPlannableResource
    aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    aws_route53_record.jump (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgJump (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgOpencart (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandPlannableResource
    data.template_file.backend (expand) - *terraform.nodeExpandPlannableResource
    data.template_file.jump (expand) - *terraform.nodeExpandPlannableResource
    null_resource.foo7 (expand) - *terraform.nodeExpandPlannableResource
    output.aviAmi - *terraform.NodeApplyableOutput
    output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
    output.az - *terraform.NodeApplyableOutput
    output.destroy - *terraform.NodeApplyableOutput
    output.jumpPublicIp - *terraform.NodeApplyableOutput
    output.ubuntuBionic - *terraform.NodeApplyableOutput
    output.ubuntuFocal - *terraform.NodeApplyableOutput
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ansible - *terraform.NodeRootVariable
    var.autoScalingGroupUserdata - *terraform.NodeRootVariable
    var.avi_password - *terraform.NodeRootVariable
    var.avi_username - *terraform.NodeRootVariable
    var.aws - *terraform.NodeRootVariable
    var.backend - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
    var.public_key_path - *terraform.NodeRootVariable
  null_resource.foo7 (expand) - *terraform.nodeExpandPlannableResource
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.backend (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ansible - *terraform.NodeRootVariable
    var.avi_password - *terraform.NodeRootVariable
    var.avi_username - *terraform.NodeRootVariable
    var.aws - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  output.aviAmi - *terraform.NodeApplyableOutput
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandPlannableResource
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
  output.az - *terraform.NodeApplyableOutput
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
  output.destroy - *terraform.NodeApplyableOutput
    aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
    var.ansible - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  output.jumpPublicIp - *terraform.NodeApplyableOutput
    aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
  output.ubuntuBionic - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
  output.ubuntuFocal - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandPlannableResource
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.backend (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandPlannableResource
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandPlannableResource
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandPlannableResource
    aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    aws_route53_record.jump (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgJump (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgOpencart (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] (close) - *terraform.graphNodeCloseProvider
    null_resource.foo7 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] (close) - *terraform.graphNodeCloseProvider
    data.template_file.backend (expand) - *terraform.nodeExpandPlannableResource
    data.template_file.jump (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandPlannableResource
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_eip.eipForNatGw (expand) - *terraform.nodeExpandPlannableResource
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.vmimport (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.controller - *terraform.NodeRootVariable
  aws_instance.backend (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    data.template_file.backend (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgJump (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandPlannableResource
    data.template_file.jump (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_key_pair.kpAvi (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpBackend (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpJump (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpMysql (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_launch_template.templateAsg (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.autoScalingGroupUserdata - *terraform.NodeRootVariable
    var.backend - *terraform.NodeRootVariable
  aws_nat_gateway.natGw (expand) - *terraform.nodeExpandPlannableResource
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
  aws_route53_record.jump (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
  aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table.rtPrivate (expand) - *terraform.nodeExpandPlannableResource
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgAvi (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgJump (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgOpencart (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  data.aws_ami.aviAmi (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.controller - *terraform.NodeRootVariable
  data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  data.template_file.backend (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  data.template_file.jump (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
    var.ansible - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandPlannableResource
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.backend (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandPlannableResource
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandPlannableResource
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandPlannableResource
    aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    aws_route53_record.jump (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgJump (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgOpencart (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandPlannableResource
    data.template_file.backend (expand) - *terraform.nodeExpandPlannableResource
    data.template_file.jump (expand) - *terraform.nodeExpandPlannableResource
    null_resource.foo7 (expand) - *terraform.nodeExpandPlannableResource
    output.aviAmi - *terraform.NodeApplyableOutput
    output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
    output.az - *terraform.NodeApplyableOutput
    output.destroy - *terraform.NodeApplyableOutput
    output.jumpPublicIp - *terraform.NodeApplyableOutput
    output.ubuntuBionic - *terraform.NodeApplyableOutput
    output.ubuntuFocal - *terraform.NodeApplyableOutput
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ansible - *terraform.NodeRootVariable
    var.autoScalingGroupUserdata - *terraform.NodeRootVariable
    var.avi_password - *terraform.NodeRootVariable
    var.avi_username - *terraform.NodeRootVariable
    var.aws - *terraform.NodeRootVariable
    var.backend - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
    var.public_key_path - *terraform.NodeRootVariable
  null_resource.foo7 (expand) - *terraform.nodeExpandPlannableResource
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.backend (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ansible - *terraform.NodeRootVariable
    var.avi_password - *terraform.NodeRootVariable
    var.avi_username - *terraform.NodeRootVariable
    var.aws - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  output.aviAmi - *terraform.NodeApplyableOutput
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandPlannableResource
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
  output.az - *terraform.NodeApplyableOutput
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
  output.destroy - *terraform.NodeApplyableOutput
    aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
    var.ansible - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  output.jumpPublicIp - *terraform.NodeApplyableOutput
    aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
  output.ubuntuBionic - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
  output.ubuntuFocal - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandPlannableResource
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.backend (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandPlannableResource
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandPlannableResource
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandPlannableResource
    aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    aws_route53_record.jump (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgJump (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgOpencart (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] (close) - *terraform.graphNodeCloseProvider
    null_resource.foo7 (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] (close) - *terraform.graphNodeCloseProvider
    data.template_file.backend (expand) - *terraform.nodeExpandPlannableResource
    data.template_file.jump (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/null"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/template"] (close) - *terraform.graphNodeCloseProvider
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandPlannableResource
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
  aws_eip.eipForNatGw (expand) - *terraform.nodeExpandPlannableResource
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.vmimport (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
  aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandPlannableResource
  aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandPlannableResource
  aws_instance.backend (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
    data.template_file.backend (expand) - *terraform.nodeExpandPlannableResource
  aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgJump (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandPlannableResource
    data.template_file.jump (expand) - *terraform.nodeExpandPlannableResource
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
  aws_key_pair.kpAvi (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpBackend (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpJump (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpMysql (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_launch_template.templateAsg (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandPlannableResource
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
    var.autoScalingGroupUserdata - *terraform.NodeRootVariable
    var.backend - *terraform.NodeRootVariable
  aws_nat_gateway.natGw (expand) - *terraform.nodeExpandPlannableResource
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
  aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandPlannableResource
  aws_route53_record.jump (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table.rtPrivate (expand) - *terraform.nodeExpandPlannableResource
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rt (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
  aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgAvi (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgJump (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
  aws_security_group.sgOpencart (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
  aws_subnet.subnetMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
  aws_vpc.vpc (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  data.aws_ami.aviAmi (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.controller - *terraform.NodeRootVariable
  data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  data.template_file.backend (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  data.template_file.jump (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
    var.ansible - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandPlannableResource
    aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    aws_route53_record.jump (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgOpencart (expand) - *terraform.nodeExpandPlannableResource
    null_resource.foo7 (expand) - *terraform.nodeExpandPlannableResource
    output.aviAmi - *terraform.NodeApplyableOutput
    output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
    output.az - *terraform.NodeApplyableOutput
    output.destroy - *terraform.NodeApplyableOutput
    output.jumpPublicIp - *terraform.NodeApplyableOutput
    output.ubuntuBionic - *terraform.NodeApplyableOutput
    output.ubuntuFocal - *terraform.NodeApplyableOutput
  null_resource.foo7 (expand) - *terraform.nodeExpandPlannableResource
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.backend (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    var.avi_password - *terraform.NodeRootVariable
    var.avi_username - *terraform.NodeRootVariable
  output.aviAmi - *terraform.NodeApplyableOutput
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandPlannableResource
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
  output.az - *terraform.NodeApplyableOutput
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandPlannableResource
  output.destroy - *terraform.NodeApplyableOutput
    aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
    var.controller - *terraform.NodeRootVariable
  output.jumpPublicIp - *terraform.NodeApplyableOutput
    aws_instance.jump (expand) - *terraform.nodeExpandPlannableResource
  output.ubuntuBionic - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandPlannableResource
  output.ubuntuFocal - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandPlannableResource
    aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandPlannableResource
    aws_instance.backend (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandPlannableResource
    aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandPlannableResource
    aws_route53_record.jump (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandPlannableResource
    aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgMysql (expand) - *terraform.nodeExpandPlannableResource
    aws_security_group.sgOpencart (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] (close) - *terraform.graphNodeCloseProvider
    null_resource.foo7 (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] (close) - *terraform.graphNodeCloseProvider
    data.template_file.backend (expand) - *terraform.nodeExpandPlannableResource
    data.template_file.jump (expand) - *terraform.nodeExpandPlannableResource
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/null"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/template"] (close) - *terraform.graphNodeCloseProvider
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:02 [DEBUG] Starting graph walk: walkPlan
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "var.avi_password"
2021/02/13 15:00:02 [TRACE] vertex "var.avi_password": starting visit (*terraform.NodeRootVariable)
2021/02/13 15:00:02 [TRACE] vertex "var.avi_password": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "provisioner.remote-exec"
2021/02/13 15:00:02 [TRACE] vertex "provisioner.remote-exec": starting visit (*terraform.NodeProvisioner)
2021-02-13T15:00:02.073Z [DEBUG] plugin: starting plugin: path=/usr/bin/terraform args=[/usr/bin/terraform, internal-plugin, provisioner, remote-exec]
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "var.controller"
2021/02/13 15:00:02 [TRACE] vertex "var.controller": starting visit (*terraform.NodeRootVariable)
2021/02/13 15:00:02 [TRACE] vertex "var.controller": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/null\"]"
2021/02/13 15:00:02 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/null\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-13T15:00:02.073Z [INFO]  plugin: configuring client automatic mTLS
2021-02-13T15:00:02.073Z [DEBUG] plugin: plugin started: path=/usr/bin/terraform pid=9222
2021-02-13T15:00:02.073Z [DEBUG] plugin: waiting for RPC address: path=/usr/bin/terraform
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "var.avi_username"
2021/02/13 15:00:02 [TRACE] vertex "var.avi_username": starting visit (*terraform.NodeRootVariable)
2021/02/13 15:00:02 [TRACE] vertex "var.avi_username": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "var.jump"
2021/02/13 15:00:02 [TRACE] vertex "var.jump": starting visit (*terraform.NodeRootVariable)
2021/02/13 15:00:02 [TRACE] vertex "var.jump": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "var.autoScalingGroupUserdata"
2021/02/13 15:00:02 [TRACE] vertex "var.autoScalingGroupUserdata": starting visit (*terraform.NodeRootVariable)
2021/02/13 15:00:02 [TRACE] vertex "var.autoScalingGroupUserdata": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "var.privateKey"
2021/02/13 15:00:02 [TRACE] vertex "var.privateKey": starting visit (*terraform.NodeRootVariable)
2021/02/13 15:00:02 [TRACE] vertex "var.privateKey": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "var.public_key_path"
2021/02/13 15:00:02 [TRACE] vertex "var.public_key_path": starting visit (*terraform.NodeRootVariable)
2021/02/13 15:00:02 [TRACE] vertex "var.public_key_path": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "var.ansible"
2021/02/13 15:00:02 [TRACE] vertex "var.ansible": starting visit (*terraform.NodeRootVariable)
2021/02/13 15:00:02 [TRACE] vertex "var.ansible": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/template\"]"
2021/02/13 15:00:02 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/template\"]": starting visit (*terraform.NodeApplyableProvider)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "var.aws"
2021/02/13 15:00:02 [TRACE] vertex "var.aws": starting visit (*terraform.NodeRootVariable)
2021/02/13 15:00:02 [TRACE] vertex "var.aws": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "var.backend"
2021/02/13 15:00:02 [TRACE] vertex "var.backend": starting visit (*terraform.NodeRootVariable)
2021/02/13 15:00:02 [TRACE] vertex "var.backend": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "provisioner.file"
2021/02/13 15:00:02 [TRACE] vertex "provisioner.file": starting visit (*terraform.NodeProvisioner)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/aws\"]"
2021/02/13 15:00:02 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-13T15:00:02.096Z [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/null/3.0.0/linux_amd64/terraform-provider-null_v3.0.0_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/null/3.0.0/linux_amd64/terraform-provider-null_v3.0.0_x5]
2021-02-13T15:00:02.096Z [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/null/3.0.0/linux_amd64/terraform-provider-null_v3.0.0_x5 pid=9230
2021-02-13T15:00:02.096Z [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/null/3.0.0/linux_amd64/terraform-provider-null_v3.0.0_x5
2021-02-13T15:00:02.102Z [INFO]  plugin.terraform-provider-null_v3.0.0_x5: configuring server automatic mTLS: timestamp=2021-02-13T15:00:02.102Z
2021-02-13T15:00:02.128Z [DEBUG] plugin: using plugin: version=5
2021-02-13T15:00:02.128Z [DEBUG] plugin.terraform-provider-null_v3.0.0_x5: plugin address: address=/tmp/plugin291820879 network=unix timestamp=2021-02-13T15:00:02.128Z
2021-02-13T15:00:02.128Z [DEBUG] plugin: using plugin: version=5
2021/02/13 15:00:02 [TRACE] vertex "provisioner.remote-exec": visit complete
2021-02-13T15:00:02.129Z [DEBUG] plugin: starting plugin: path=/usr/bin/terraform args=[/usr/bin/terraform, internal-plugin, provisioner, file]
2021-02-13T15:00:02.129Z [TRACE] plugin.stdio: waiting for stdio data
2021-02-13T15:00:02.131Z [DEBUG] plugin: plugin started: path=/usr/bin/terraform pid=9247
2021-02-13T15:00:02.131Z [DEBUG] plugin: waiting for RPC address: path=/usr/bin/terraform
2021/02/13 15:00:02 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/null\"]" provider for provider["registry.terraform.io/hashicorp/null"]
2021/02/13 15:00:02 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/null"]: no configuration at all
2021/02/13 15:00:02 [TRACE] GRPCProvider: GetSchema
2021-02-13T15:00:02.179Z [TRACE] plugin.stdio: waiting for stdio data
2021-02-13T15:00:02.179Z [INFO]  plugin: configuring client automatic mTLS
2021-02-13T15:00:02.185Z [DEBUG] plugin: using plugin: version=5
2021/02/13 15:00:02 [TRACE] vertex "provisioner.file": visit complete
2021-02-13T15:00:02.186Z [TRACE] plugin.stdio: waiting for stdio data
2021-02-13T15:00:02.203Z [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/template/2.2.0/linux_amd64/terraform-provider-template_v2.2.0_x4 args=[.terraform/providers/registry.terraform.io/hashicorp/template/2.2.0/linux_amd64/terraform-provider-template_v2.2.0_x4]
2021-02-13T15:00:02.203Z [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/template/2.2.0/linux_amd64/terraform-provider-template_v2.2.0_x4 pid=9267
2021-02-13T15:00:02.203Z [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/template/2.2.0/linux_amd64/terraform-provider-template_v2.2.0_x4
2021-02-13T15:00:02.208Z [INFO]  plugin.terraform-provider-template_v2.2.0_x4: configuring server automatic mTLS: timestamp=2021-02-13T15:00:02.208Z
2021-02-13T15:00:02.234Z [DEBUG] plugin: using plugin: version=5
2021-02-13T15:00:02.234Z [DEBUG] plugin.terraform-provider-template_v2.2.0_x4: plugin address: network=unix address=/tmp/plugin706409943 timestamp=2021-02-13T15:00:02.233Z
2021/02/13 15:00:02 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/template\"]" provider for provider["registry.terraform.io/hashicorp/template"]
2021/02/13 15:00:02 [TRACE] GRPCProvider: Configure
2021-02-13T15:00:02.285Z [TRACE] plugin.stdio: waiting for stdio data
2021-02-13T15:00:02.285Z [INFO]  plugin: configuring client automatic mTLS
2021/02/13 15:00:02 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/template"]: no configuration at all
2021/02/13 15:00:02 [TRACE] GRPCProvider: GetSchema
2021-02-13T15:00:02.285Z [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unimplemented desc = unknown service plugin.GRPCStdio"
2021/02/13 15:00:02 [TRACE] No provider meta schema returned
2021/02/13 15:00:02 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/null\"]": visit complete
2021-02-13T15:00:02.310Z [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.22.0/linux_amd64/terraform-provider-aws_v3.22.0_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/aws/3.22.0/linux_amd64/terraform-provider-aws_v3.22.0_x5]
2021-02-13T15:00:02.310Z [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.22.0/linux_amd64/terraform-provider-aws_v3.22.0_x5 pid=9277
2021-02-13T15:00:02.310Z [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.22.0/linux_amd64/terraform-provider-aws_v3.22.0_x5
2021-02-13T15:00:02.345Z [INFO]  plugin.terraform-provider-aws_v3.22.0_x5: configuring server automatic mTLS: timestamp=2021-02-13T15:00:02.345Z
2021-02-13T15:00:02.371Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: plugin address: network=unix address=/tmp/plugin006388924 timestamp=2021-02-13T15:00:02.371Z
2021-02-13T15:00:02.371Z [DEBUG] plugin: using plugin: version=5
2021/02/13 15:00:02 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/aws\"]" provider for provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:02 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/aws"]: using explicit config only
2021/02/13 15:00:02 [TRACE] GRPCProvider: GetSchema
2021-02-13T15:00:02.421Z [TRACE] plugin.stdio: waiting for stdio data
2021/02/13 15:00:02 [TRACE] GRPCProvider: Configure
2021/02/13 15:00:02 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/template\"]": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "data.template_file.jump (expand)"
2021/02/13 15:00:02 [TRACE] vertex "data.template_file.jump (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:02 [TRACE] vertex "data.template_file.jump (expand)": expanding dynamic subgraph
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "data.template_file.backend (expand)"
2021/02/13 15:00:02 [TRACE] vertex "data.template_file.jump (expand)": entering dynamic subgraph
2021/02/13 15:00:02 [TRACE] vertex "data.template_file.backend (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:02 [TRACE] vertex "data.template_file.backend (expand)": expanding dynamic subgraph
2021/02/13 15:00:02 [TRACE] vertex "data.template_file.backend (expand)": entering dynamic subgraph
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "data.template_file.jump"
2021/02/13 15:00:02 [TRACE] vertex "data.template_file.jump": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "data.template_file.backend"
2021/02/13 15:00:02 [TRACE] vertex "data.template_file.backend": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:02 [TRACE] vertex "data.template_file.jump": expanding dynamic subgraph
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:02 [TRACE] ResourceCountTransformer: adding data.template_file.jump as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.template_file.jump - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:02 [DEBUG] Resource instance state not found for node "data.template_file.jump", instance data.template_file.jump
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:02 [INFO] ReferenceTransformer: reference not found: "var.jump"
2021/02/13 15:00:02 [INFO] ReferenceTransformer: reference not found: "var.jump"
2021/02/13 15:00:02 [INFO] ReferenceTransformer: reference not found: "var.ansible"
2021/02/13 15:00:02 [INFO] ReferenceTransformer: reference not found: "var.jump"
2021/02/13 15:00:02 [INFO] ReferenceTransformer: reference not found: "var.privateKey"
2021/02/13 15:00:02 [INFO] ReferenceTransformer: reference not found: "var.ansible"
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "data.template_file.jump" references: []
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:02 [TRACE] vertex "data.template_file.jump": entering dynamic subgraph
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "data.template_file.jump"
2021/02/13 15:00:02 [TRACE] vertex "data.template_file.jump": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:02 [TRACE] ReadResourceInstanceState: reading state for data.template_file.jump
2021/02/13 15:00:02 [TRACE] vertex "data.template_file.backend": expanding dynamic subgraph
2021/02/13 15:00:02 [TRACE] ReadResourceInstanceState: no state present for data.template_file.jump
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:02 [TRACE] ResourceCountTransformer: adding data.template_file.backend as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:02 [TRACE] EvalReadData: Re-validating config for data.template_file.jump
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.template_file.backend - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:02 [DEBUG] Resource instance state not found for node "data.template_file.backend", instance data.template_file.backend
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:02 [INFO] ReferenceTransformer: reference not found: "var.backend"
2021/02/13 15:00:02 [INFO] ReferenceTransformer: reference not found: "var.backend"
2021/02/13 15:00:02 [INFO] ReferenceTransformer: reference not found: "var.backend"
2021/02/13 15:00:02 [DEBUG] ReferenceTransformer: "data.template_file.backend" references: []
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:02 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:02 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:02 [TRACE] vertex "data.template_file.backend": entering dynamic subgraph
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "data.template_file.backend"
2021/02/13 15:00:02 [TRACE] vertex "data.template_file.backend": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:02 [TRACE] ReadResourceInstanceState: reading state for data.template_file.backend
2021/02/13 15:00:02 [TRACE] ReadResourceInstanceState: no state present for data.template_file.backend
2021/02/13 15:00:02 [TRACE] EvalReadData: Re-validating config for data.template_file.backend
2021/02/13 15:00:02 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/02/13 15:00:02 [TRACE] EvalReadData: data.template_file.jump configuration is complete, so reading from provider
2021/02/13 15:00:02 [TRACE] GRPCProvider: ReadDataSource
2021/02/13 15:00:02 [TRACE] EvalReadData: data.template_file.backend configuration is complete, so reading from provider
2021/02/13 15:00:02 [TRACE] GRPCProvider: ReadDataSource
2021/02/13 15:00:02 [TRACE] EvalWriteState: using RefreshState for data.template_file.jump
2021/02/13 15:00:02 [TRACE] EvalWriteState: writing current state object for data.template_file.jump
2021/02/13 15:00:02 [TRACE] EvalWriteState: using RefreshState for data.template_file.backend
2021/02/13 15:00:02 [TRACE] EvalWriteState: writing current state object for data.template_file.backend
2021/02/13 15:00:02 [TRACE] EvalWriteState: writing current state object for data.template_file.jump
2021/02/13 15:00:02 [TRACE] vertex "data.template_file.jump": visit complete
2021/02/13 15:00:02 [TRACE] vertex "data.template_file.jump": dynamic subgraph completed successfully
2021/02/13 15:00:02 [TRACE] vertex "data.template_file.jump": visit complete
2021/02/13 15:00:02 [TRACE] vertex "data.template_file.jump (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:02 [TRACE] vertex "data.template_file.jump (expand)": visit complete
2021/02/13 15:00:02 [TRACE] EvalWriteState: writing current state object for data.template_file.backend
2021/02/13 15:00:02 [TRACE] vertex "data.template_file.backend": visit complete
2021/02/13 15:00:02 [TRACE] vertex "data.template_file.backend": dynamic subgraph completed successfully
2021/02/13 15:00:02 [TRACE] vertex "data.template_file.backend": visit complete
2021/02/13 15:00:02 [TRACE] vertex "data.template_file.backend (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:02 [TRACE] vertex "data.template_file.backend (expand)": visit complete
2021/02/13 15:00:02 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/template\"] (close)"
2021/02/13 15:00:02 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/template\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/13 15:00:02 [TRACE] GRPCProvider: Close
2021-02-13T15:00:02.425Z [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/template/2.2.0/linux_amd64/terraform-provider-template_v2.2.0_x4 pid=9267
2021-02-13T15:00:02.425Z [DEBUG] plugin: plugin exited
2021/02/13 15:00:02 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/template\"] (close)": visit complete
2021/02/13 15:00:02 [TRACE] GRPCProvider: Configure
2021-02-13T15:00:02.496Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:02 [INFO] AWS Auth provider used: "EnvProvider"
2021-02-13T15:00:02.497Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:02 [DEBUG] Trying to get account information via sts:GetCallerIdentity
2021-02-13T15:00:03.356Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:03 [DEBUG] Trying to get account information via sts:GetCallerIdentity
2021/02/13 15:00:05 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"]": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-SNS-Policy (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-SNS-Policy (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-SNS-Policy (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-SNS-Policy (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_key_pair.kpOpencart (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpOpencart (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpOpencart (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpOpencart (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_key_pair.kpOpencart"
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpOpencart": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_key_pair.kpBackend (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpBackend (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "data.aws_ami.ubuntuFocal (expand)"
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_key_pair.kpAvi (expand)"
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "data.aws_availability_zones.available (expand)"
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "data.aws_ami.aviAmi (expand)"
2021/02/13 15:00:05 [TRACE] vertex "data.aws_availability_zones.available (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.aviAmi (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "data.aws_availability_zones.available (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.aviAmi (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role.vmimport (expand)"
2021/02/13 15:00:05 [TRACE] vertex "data.aws_availability_zones.available (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.vmimport (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.vmimport (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "data.aws_availability_zones.available"
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-KMS-Policy (expand)"
2021/02/13 15:00:05 [TRACE] vertex "data.aws_availability_zones.available": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-KMS-Policy (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-AutoScalingGroup-Policy (expand)"
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-IAM-Policy (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-IAM-Policy (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-IAM-Policy (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "data.aws_availability_zones.available": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-IAM-Policy (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-ASG-Notification (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-ASG-Notification (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-ASG-Notification (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-IAM-Policy"
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpOpencart": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role.Ansible-Refined-Role (expand)"
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_key_pair.kpMysql (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.Ansible-Refined-Role (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.Ansible-Refined-Role (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding data.aws_availability_zones.available as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.aws_availability_zones.available - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-AutoScalingGroup-Policy (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-AutoScalingGroup-Policy (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpMysql (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpMysql (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-SNS-Policy"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-SNS-Policy": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "data.aws_route53_zone.awsAviDemo (expand)"
2021/02/13 15:00:05 [TRACE] vertex "data.aws_route53_zone.awsAviDemo (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "data.aws_route53_zone.awsAviDemo (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.ubuntuFocal (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.ubuntuFocal (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.aviAmi (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "data.aws_ami.aviAmi"
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.aviAmi": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpAvi (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpAvi (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpBackend (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_vpc.vpc (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_vpc.vpc (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_vpc.vpc (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_key_pair.kpJump (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpJump (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpJump (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.vmimport (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role.vmimport"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.vmimport": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-SQS-Policy (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-SQS-Policy (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-SQS-Policy (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-R53-Policy (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-R53-Policy (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-R53-Policy (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_policy.ansible-EC2-Policy (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.ansible-EC2-Policy (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.ansible-EC2-Policy (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-KMS-Policy (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-IAM-Policy": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role.AviController-Refined-Role (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.AviController-Refined-Role (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.AviController-Refined-Role (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "data.aws_ami.ubuntuBionic (expand)"
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.ubuntuBionic (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.ubuntuBionic (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-EC2-Policy (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-EC2-Policy (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-EC2-Policy (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "data.aws_availability_zones.available", instance data.aws_availability_zones.available
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "data.aws_availability_zones.available" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "data.aws_availability_zones.available": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "data.aws_availability_zones.available"
2021/02/13 15:00:05 [TRACE] vertex "data.aws_availability_zones.available": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for data.aws_availability_zones.available
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for data.aws_availability_zones.available
2021/02/13 15:00:05 [TRACE] EvalReadData: Re-validating config for data.aws_availability_zones.available
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-ASG-Notification (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_key_pair.kpOpencart as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_key_pair.kpOpencart - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_key_pair.kpOpencart", instance aws_key_pair.kpOpencart
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.public_key_path"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_key_pair.kpOpencart" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpOpencart": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_key_pair.kpOpencart"
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpOpencart": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_key_pair.kpOpencart
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_key_pair.kpOpencart
2021/02/13 15:00:05 [DEBUG] refresh: aws_key_pair.kpOpencart: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_key_pair.kpOpencart
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_key_pair.kpOpencart
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-ASG-Notification"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-ASG-Notification": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-ASG-Notification": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.Ansible-Refined-Role (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role.Ansible-Refined-Role"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.Ansible-Refined-Role": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-AutoScalingGroup-Policy (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-AutoScalingGroup-Policy"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-AutoScalingGroup-Policy": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpMysql (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_key_pair.kpMysql"
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpMysql": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-SNS-Policy": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "data.aws_route53_zone.awsAviDemo (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "data.aws_route53_zone.awsAviDemo"
2021/02/13 15:00:05 [TRACE] vertex "data.aws_route53_zone.awsAviDemo": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.ubuntuFocal (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "data.aws_ami.ubuntuFocal"
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.ubuntuFocal": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.aviAmi": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpAvi (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_key_pair.kpAvi"
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpAvi": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpBackend (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_key_pair.kpBackend"
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpBackend": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_vpc.vpc (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_vpc.vpc"
2021/02/13 15:00:05 [TRACE] vertex "aws_vpc.vpc": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpJump (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_key_pair.kpJump"
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpJump": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_key_pair.kpOpencart"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.vmimport": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-SQS-Policy (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-SQS-Policy"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-SQS-Policy": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-R53-Policy (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-R53-Policy"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-R53-Policy": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.ansible-EC2-Policy (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_policy.ansible-EC2-Policy"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.ansible-EC2-Policy": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-KMS-Policy (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-KMS-Policy"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-KMS-Policy": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-IAM-Policy": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.AviController-Refined-Role (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role.AviController-Refined-Role"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.AviController-Refined-Role": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.ubuntuBionic (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "data.aws_ami.ubuntuBionic"
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.ubuntuBionic": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-EC2-Policy (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-EC2-Policy"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-EC2-Policy": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_iam_policy.AviController-ASG-Notification as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_policy.AviController-ASG-Notification - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_iam_policy.AviController-ASG-Notification", instance aws_iam_policy.AviController-ASG-Notification
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-ASG-Notification" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-ASG-Notification": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-ASG-Notification"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-ASG-Notification": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.Ansible-Refined-Role": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_iam_role.Ansible-Refined-Role as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_role.Ansible-Refined-Role - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_iam_role.Ansible-Refined-Role", instance aws_iam_role.Ansible-Refined-Role
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_iam_role.Ansible-Refined-Role" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.Ansible-Refined-Role": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role.Ansible-Refined-Role"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.Ansible-Refined-Role": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpJump": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-AutoScalingGroup-Policy": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-SQS-Policy": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-R53-Policy": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_iam_policy.AviController-R53-Policy as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_policy.AviController-R53-Policy - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_iam_policy.AviController-R53-Policy", instance aws_iam_policy.AviController-R53-Policy
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-R53-Policy" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-R53-Policy": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-R53-Policy"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-R53-Policy": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_iam_policy.AviController-AutoScalingGroup-Policy as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_iam_policy.AviController-AutoScalingGroup-Policy", instance aws_iam_policy.AviController-AutoScalingGroup-Policy
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-AutoScalingGroup-Policy" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-AutoScalingGroup-Policy": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-AutoScalingGroup-Policy"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-AutoScalingGroup-Policy": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-KMS-Policy": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_iam_policy.AviController-KMS-Policy as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_policy.AviController-KMS-Policy - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_iam_policy.AviController-KMS-Policy", instance aws_iam_policy.AviController-KMS-Policy
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-KMS-Policy" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-KMS-Policy": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-KMS-Policy"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-KMS-Policy": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_iam_policy.AviController-SQS-Policy as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_policy.AviController-SQS-Policy - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_iam_policy.AviController-SQS-Policy", instance aws_iam_policy.AviController-SQS-Policy
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-SQS-Policy" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-SQS-Policy": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-SQS-Policy"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-SQS-Policy": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.AviController-Refined-Role": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_iam_role.AviController-Refined-Role as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_role.AviController-Refined-Role - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_iam_role.AviController-Refined-Role", instance aws_iam_role.AviController-Refined-Role
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_iam_role.AviController-Refined-Role" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.AviController-Refined-Role": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role.AviController-Refined-Role"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.AviController-Refined-Role": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_iam_policy.AviController-SNS-Policy as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_policy.AviController-SNS-Policy - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_iam_policy.AviController-SNS-Policy", instance aws_iam_policy.AviController-SNS-Policy
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-SNS-Policy" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-SNS-Policy": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-SNS-Policy"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-SNS-Policy": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.ubuntuBionic": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.ubuntuFocal": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "data.aws_route53_zone.awsAviDemo": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_key_pair.kpJump as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] vertex "aws_vpc.vpc": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpBackend": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_key_pair.kpJump - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_key_pair.kpJump", instance aws_key_pair.kpJump
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.public_key_path"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_key_pair.kpJump" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpJump": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_key_pair.kpJump"
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpJump": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_iam_role.Ansible-Refined-Role
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_iam_role.Ansible-Refined-Role
2021/02/13 15:00:05 [DEBUG] refresh: aws_iam_role.Ansible-Refined-Role: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_iam_role.Ansible-Refined-Role
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_iam_role.Ansible-Refined-Role
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.ansible-EC2-Policy": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_iam_policy.ansible-EC2-Policy as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_policy.ansible-EC2-Policy - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_iam_policy.ansible-EC2-Policy", instance aws_iam_policy.ansible-EC2-Policy
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_iam_role.Ansible-Refined-Role"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_iam_policy.ansible-EC2-Policy" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.ansible-EC2-Policy": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_policy.ansible-EC2-Policy"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.ansible-EC2-Policy": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpAvi": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpMysql": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_key_pair.kpMysql as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_key_pair.kpMysql - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] EvalReadData: data.aws_availability_zones.available configuration is complete, so reading from provider
2021/02/13 15:00:05 [TRACE] GRPCProvider: ReadDataSource
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_key_pair.kpMysql", instance aws_key_pair.kpMysql
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_iam_policy.AviController-SQS-Policy
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.public_key_path"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_key_pair.kpMysql" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpMysql": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_key_pair.kpMysql"
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpMysql": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_iam_role.AviController-Refined-Role
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_iam_role.AviController-Refined-Role
2021/02/13 15:00:05 [DEBUG] refresh: aws_iam_role.AviController-Refined-Role: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_iam_role.AviController-Refined-Role
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_iam_policy.AviController-SQS-Policy
2021/02/13 15:00:05 [DEBUG] refresh: aws_iam_policy.AviController-SQS-Policy: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding data.aws_ami.ubuntuBionic as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.aws_ami.ubuntuBionic - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "data.aws_ami.ubuntuBionic", instance data.aws_ami.ubuntuBionic
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_iam_role.AviController-Refined-Role
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_iam_role.AviController-Refined-Role"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "data.aws_ami.ubuntuBionic" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.ubuntuBionic": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "data.aws_ami.ubuntuBionic"
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.ubuntuBionic": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_iam_policy.AviController-SQS-Policy
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_iam_policy.AviController-SQS-Policy
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-EC2-Policy": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_iam_policy.AviController-EC2-Policy as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_policy.AviController-EC2-Policy - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_iam_policy.AviController-EC2-Policy", instance aws_iam_policy.AviController-EC2-Policy
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-EC2-Policy" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-EC2-Policy": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-EC2-Policy"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-EC2-Policy": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding data.aws_ami.aviAmi as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.aws_ami.aviAmi - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "data.aws_ami.aviAmi", instance data.aws_ami.aviAmi
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_key_pair.kpOpencart, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDT2A0BYBJpqAR6S6MCFQt3KizmG55ql6H69fzmCG113Q1/8j7pWOMRUZUkfbpmur+hInFlp///CWnMiCJYq6VZFwzdiHsftXX1s1P4Eugwuro+P7v+kFJePQYsXkjeOObeWMr7zSTncPrzLe6X3Hol1TpXFnBHEOGy3Ea2VPmbRrS5q834NxArPZXYDk6He5ihmthwVSDrUnUeUHoHZG9ZpPSLi5yKSrKRqDvRe5eebTc1pOueJBPNJzvmd0cQgrT0R+aTwJXjQZUeJbRTZDDpBpXu4mMuGvsmdX2EtjO7yxtTbMotg83OIS6vrPTI9bcApqlTN3NL5B3HoZA7tItT avi@ansible") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDT2A0BYBJpqAR6S6MCFQt3KizmG55ql6H69fzmCG113Q1/8j7pWOMRUZUkfbpmur+hInFlp///CWnMiCJYq6VZFwzdiHsftXX1s1P4Eugwuro+P7v+kFJePQYsXkjeOObeWMr7zSTncPrzLe6X3Hol1TpXFnBHEOGy3Ea2VPmbRrS5q834NxArPZXYDk6He5ihmthwVSDrUnUeUHoHZG9ZpPSLi5yKSrKRqDvRe5eebTc1pOueJBPNJzvmd0cQgrT0R+aTwJXjQZUeJbRTZDDpBpXu4mMuGvsmdX2EtjO7yxtTbMotg83OIS6vrPTI9bcApqlTN3NL5B3HoZA7tItT avi@ansible\n")
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_key_pair.kpOpencart
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.controller"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "data.aws_ami.aviAmi" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.aviAmi": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "data.aws_ami.aviAmi"
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_iam_policy.AviController-SNS-Policy
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.aviAmi": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_iam_policy.AviController-SNS-Policy
2021/02/13 15:00:05 [DEBUG] refresh: aws_iam_policy.AviController-SNS-Policy: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_iam_policy.AviController-SNS-Policy
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_iam_policy.AviController-SNS-Policy
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_iam_policy.AviController-SQS-Policy"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_iam_policy.AviController-AutoScalingGroup-Policy
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_iam_policy.AviController-ASG-Notification
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_iam_policy.AviController-R53-Policy
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_iam_policy.AviController-SNS-Policy"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding data.aws_ami.ubuntuFocal as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.aws_ami.ubuntuFocal - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "data.aws_ami.ubuntuFocal", instance data.aws_ami.ubuntuFocal
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "data.aws_ami.ubuntuFocal" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021-02-13T15:00:05.014Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:05 [DEBUG] Reading Availability Zones.
2021-02-13T15:00:05.015Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:05 [DEBUG] Reading Availability Zones: {
2021-02-13T15:00:05.015Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Filters: [{
2021-02-13T15:00:05.015Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       Name: "state",
2021-02-13T15:00:05.015Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       Values: ["available"]
2021-02-13T15:00:05.015Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }]
2021-02-13T15:00:05.015Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_iam_policy.AviController-AutoScalingGroup-Policy
2021/02/13 15:00:05 [DEBUG] refresh: aws_iam_policy.AviController-AutoScalingGroup-Policy: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_iam_policy.AviController-AutoScalingGroup-Policy
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_iam_policy.AviController-AutoScalingGroup-Policy
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_iam_policy.AviController-R53-Policy
2021/02/13 15:00:05 [DEBUG] refresh: aws_iam_policy.AviController-R53-Policy: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_iam_policy.AviController-R53-Policy
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_iam_policy.AviController-R53-Policy
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.ubuntuFocal": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_iam_policy.AviController-R53-Policy"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_iam_policy.AviController-AutoScalingGroup-Policy"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_iam_policy.AviController-ASG-Notification
2021/02/13 15:00:05 [DEBUG] refresh: aws_iam_policy.AviController-ASG-Notification: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_iam_policy.AviController-ASG-Notification
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_iam_policy.AviController-ASG-Notification
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_iam_policy.AviController-ASG-Notification"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "data.aws_ami.ubuntuFocal"
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.ubuntuFocal": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_iam_role.vmimport as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_role.vmimport - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_iam_role.vmimport", instance aws_iam_role.vmimport
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_iam_role.vmimport" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_iam_policy.AviController-IAM-Policy as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_policy.AviController-IAM-Policy - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_iam_policy.AviController-IAM-Policy", instance aws_iam_policy.AviController-IAM-Policy
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-IAM-Policy" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.vmimport": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role.vmimport"
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_iam_policy.AviController-KMS-Policy
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.vmimport": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding data.aws_route53_zone.awsAviDemo as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.aws_route53_zone.awsAviDemo - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "data.aws_route53_zone.awsAviDemo", instance data.aws_route53_zone.awsAviDemo
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_role.Ansible-Refined-Role, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .max_session_duration: planned value cty.NumberIntVal(3600) does not match config value cty.NullVal(cty.Number)
      - .force_detach_policies: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_iam_role.Ansible-Refined-Role
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.aws"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "data.aws_route53_zone.awsAviDemo" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "data.aws_route53_zone.awsAviDemo": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "data.aws_route53_zone.awsAviDemo"
2021/02/13 15:00:05 [TRACE] vertex "data.aws_route53_zone.awsAviDemo": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_iam_policy.AviController-SQS-Policy
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-IAM-Policy": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_key_pair.kpOpencart
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpOpencart": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-IAM-Policy"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-IAM-Policy": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_iam_policy.AviController-KMS-Policy
2021/02/13 15:00:05 [DEBUG] refresh: aws_iam_policy.AviController-KMS-Policy: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_iam_policy.AviController-KMS-Policy
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_iam_policy.AviController-KMS-Policy
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_key_pair.kpJump
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_vpc.vpc[0] as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_iam_policy.AviController-KMS-Policy"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_vpc.vpc[0] - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_vpc.vpc[0]", instance aws_vpc.vpc[0]
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpOpencart": dynamic subgraph completed successfully
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.aws"
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpOpencart": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpOpencart (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpOpencart (expand)": visit complete
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.aws"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_vpc.vpc[0]" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_vpc.vpc": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_vpc.vpc[0]"
2021/02/13 15:00:05 [TRACE] vertex "aws_vpc.vpc[0]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_key_pair.kpJump
2021/02/13 15:00:05 [DEBUG] refresh: aws_key_pair.kpJump: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_key_pair.kpJump
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_key_pair.kpJump
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_key_pair.kpBackend as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_key_pair.kpBackend - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_key_pair.kpBackend", instance aws_key_pair.kpBackend
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_key_pair.kpJump"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.public_key_path"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_key_pair.kpBackend" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpBackend": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_key_pair.kpBackend"
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_key_pair.kpAvi as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_key_pair.kpAvi - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_key_pair.kpAvi", instance aws_key_pair.kpAvi
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.public_key_path"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_key_pair.kpAvi" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpAvi": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_key_pair.kpAvi"
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpAvi": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpBackend": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_role.Ansible-Refined-Role
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.Ansible-Refined-Role": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.Ansible-Refined-Role": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.Ansible-Refined-Role": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.Ansible-Refined-Role (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.Ansible-Refined-Role (expand)": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_instance_profile.Ansible-Instance-Profile (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_instance_profile.Ansible-Instance-Profile (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_instance_profile.Ansible-Instance-Profile (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_instance_profile.Ansible-Instance-Profile (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_instance_profile.Ansible-Instance-Profile"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_instance_profile.Ansible-Instance-Profile": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_policy.AviController-SQS-Policy
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-SQS-Policy": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-SQS-Policy": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-SQS-Policy": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-SQS-Policy (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-SQS-Policy (expand)": visit complete
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_iam_policy.ansible-EC2-Policy
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_iam_policy.ansible-EC2-Policy
2021/02/13 15:00:05 [DEBUG] refresh: aws_iam_policy.ansible-EC2-Policy: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_iam_policy.ansible-EC2-Policy
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_iam_policy.ansible-EC2-Policy
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_iam_policy.ansible-EC2-Policy"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_key_pair.kpMysql
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_key_pair.kpMysql
2021/02/13 15:00:05 [DEBUG] refresh: aws_key_pair.kpMysql: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_key_pair.kpMysql
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_key_pair.kpMysql
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_key_pair.kpMysql"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_iam_policy.AviController-R53-Policy
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_iam_policy.AviController-ASG-Notification
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_policy.AviController-R53-Policy
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-R53-Policy": visit complete
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-R53-Policy": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-R53-Policy": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-R53-Policy (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-R53-Policy (expand)": visit complete
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_iam_policy.AviController-SNS-Policy
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for data.aws_ami.ubuntuBionic
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for data.aws_ami.ubuntuBionic
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_policy.AviController-ASG-Notification
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-ASG-Notification": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-ASG-Notification": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-ASG-Notification": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-ASG-Notification (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-ASG-Notification (expand)": visit complete
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_iam_policy.AviController-AutoScalingGroup-Policy
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_policy.AviController-AutoScalingGroup-Policy
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-AutoScalingGroup-Policy": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-AutoScalingGroup-Policy": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-AutoScalingGroup-Policy": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-AutoScalingGroup-Policy (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-AutoScalingGroup-Policy (expand)": visit complete
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_policy.AviController-SNS-Policy
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-SNS-Policy": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-SNS-Policy": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-SNS-Policy": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-SNS-Policy (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-SNS-Policy (expand)": visit complete
2021/02/13 15:00:05 [TRACE] EvalReadData: Re-validating config for data.aws_ami.ubuntuBionic
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_iam_policy.AviController-EC2-Policy
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_iam_policy.AviController-EC2-Policy
2021/02/13 15:00:05 [DEBUG] refresh: aws_iam_policy.AviController-EC2-Policy: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_iam_policy.AviController-EC2-Policy
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_iam_policy.AviController-EC2-Policy
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_iam_policy.AviController-EC2-Policy"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for data.aws_ami.aviAmi
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for data.aws_ami.aviAmi
2021/02/13 15:00:05 [TRACE] EvalReadData: Re-validating config for data.aws_ami.aviAmi
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021-02-13T15:00:05.020Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:05 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_role.AviController-Refined-Role, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_detach_policies: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
      - .max_session_duration: planned value cty.NumberIntVal(3600) does not match config value cty.NullVal(cty.Number)
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_iam_role.AviController-Refined-Role
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_role.AviController-Refined-Role
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.AviController-Refined-Role": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.AviController-Refined-Role": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.AviController-Refined-Role": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.AviController-Refined-Role (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.AviController-Refined-Role (expand)": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_instance_profile.AviController-Instance-Profile (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_instance_profile.AviController-Instance-Profile (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_instance_profile.AviController-Instance-Profile (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_instance_profile.AviController-Instance-Profile (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_instance_profile.AviController-Instance-Profile"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_instance_profile.AviController-Instance-Profile": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for data.aws_ami.ubuntuFocal
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for data.aws_ami.ubuntuFocal
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach2 (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach2 (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach2 (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach2 (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach2"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach2": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_iam_role.vmimport
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_iam_role.vmimport
2021/02/13 15:00:05 [DEBUG] refresh: aws_iam_role.vmimport: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_iam_role.vmimport
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_iam_role.vmimport
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach5 (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach5 (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach5 (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach5 (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach4 (expand)"
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach5"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach5": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach4 (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach4 (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach4 (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach4"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach4": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach3 (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach3 (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach3 (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_iam_role.vmimport"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach7 (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach7 (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach7 (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach7 (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach7"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach3 (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach3"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach3": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach7": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] EvalReadData: data.aws_ami.ubuntuBionic configuration is complete, so reading from provider
2021/02/13 15:00:05 [TRACE] GRPCProvider: ReadDataSource
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_key_pair.kpMysql, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDT2A0BYBJpqAR6S6MCFQt3KizmG55ql6H69fzmCG113Q1/8j7pWOMRUZUkfbpmur+hInFlp///CWnMiCJYq6VZFwzdiHsftXX1s1P4Eugwuro+P7v+kFJePQYsXkjeOObeWMr7zSTncPrzLe6X3Hol1TpXFnBHEOGy3Ea2VPmbRrS5q834NxArPZXYDk6He5ihmthwVSDrUnUeUHoHZG9ZpPSLi5yKSrKRqDvRe5eebTc1pOueJBPNJzvmd0cQgrT0R+aTwJXjQZUeJbRTZDDpBpXu4mMuGvsmdX2EtjO7yxtTbMotg83OIS6vrPTI9bcApqlTN3NL5B3HoZA7tItT avi@ansible") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDT2A0BYBJpqAR6S6MCFQt3KizmG55ql6H69fzmCG113Q1/8j7pWOMRUZUkfbpmur+hInFlp///CWnMiCJYq6VZFwzdiHsftXX1s1P4Eugwuro+P7v+kFJePQYsXkjeOObeWMr7zSTncPrzLe6X3Hol1TpXFnBHEOGy3Ea2VPmbRrS5q834NxArPZXYDk6He5ihmthwVSDrUnUeUHoHZG9ZpPSLi5yKSrKRqDvRe5eebTc1pOueJBPNJzvmd0cQgrT0R+aTwJXjQZUeJbRTZDDpBpXu4mMuGvsmdX2EtjO7yxtTbMotg83OIS6vrPTI9bcApqlTN3NL5B3HoZA7tItT avi@ansible\n")
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_key_pair.kpMysql
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_iam_policy.ansible-EC2-Policy
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_key_pair.kpJump, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDT2A0BYBJpqAR6S6MCFQt3KizmG55ql6H69fzmCG113Q1/8j7pWOMRUZUkfbpmur+hInFlp///CWnMiCJYq6VZFwzdiHsftXX1s1P4Eugwuro+P7v+kFJePQYsXkjeOObeWMr7zSTncPrzLe6X3Hol1TpXFnBHEOGy3Ea2VPmbRrS5q834NxArPZXYDk6He5ihmthwVSDrUnUeUHoHZG9ZpPSLi5yKSrKRqDvRe5eebTc1pOueJBPNJzvmd0cQgrT0R+aTwJXjQZUeJbRTZDDpBpXu4mMuGvsmdX2EtjO7yxtTbMotg83OIS6vrPTI9bcApqlTN3NL5B3HoZA7tItT avi@ansible") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDT2A0BYBJpqAR6S6MCFQt3KizmG55ql6H69fzmCG113Q1/8j7pWOMRUZUkfbpmur+hInFlp///CWnMiCJYq6VZFwzdiHsftXX1s1P4Eugwuro+P7v+kFJePQYsXkjeOObeWMr7zSTncPrzLe6X3Hol1TpXFnBHEOGy3Ea2VPmbRrS5q834NxArPZXYDk6He5ihmthwVSDrUnUeUHoHZG9ZpPSLi5yKSrKRqDvRe5eebTc1pOueJBPNJzvmd0cQgrT0R+aTwJXjQZUeJbRTZDDpBpXu4mMuGvsmdX2EtjO7yxtTbMotg83OIS6vrPTI9bcApqlTN3NL5B3HoZA7tItT avi@ansible\n")
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_policy.ansible-EC2-Policy
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_key_pair.kpMysql
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.ansible-EC2-Policy": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpMysql": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.ansible-EC2-Policy": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_key_pair.kpJump
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.ansible-EC2-Policy": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.ansible-EC2-Policy (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.ansible-EC2-Policy (expand)": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.ansible-attach1 (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.ansible-attach1 (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.ansible-attach1 (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.ansible-attach1 (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_key_pair.kpJump
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpJump": visit complete
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for data.aws_route53_zone.awsAviDemo
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for data.aws_route53_zone.awsAviDemo
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_iam_policy.AviController-IAM-Policy
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_iam_policy.AviController-IAM-Policy
2021/02/13 15:00:05 [DEBUG] refresh: aws_iam_policy.AviController-IAM-Policy: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_iam_policy.AviController-IAM-Policy
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_iam_policy.AviController-IAM-Policy
2021/02/13 15:00:05 [TRACE] EvalReadData: Re-validating config for data.aws_ami.ubuntuFocal
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/02/13 15:00:05 [TRACE] EvalReadData: Re-validating config for data.aws_route53_zone.awsAviDemo
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_iam_policy.AviController-IAM-Policy"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpMysql": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_iam_policy.AviController-KMS-Policy
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.ansible-attach1"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.ansible-attach1": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpJump": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpJump": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpJump (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpJump (expand)": visit complete
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_policy.AviController-KMS-Policy
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-KMS-Policy": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-KMS-Policy": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-KMS-Policy": visit complete
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_vpc.vpc[0]
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-KMS-Policy (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_vpc.vpc[0]
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-KMS-Policy (expand)": visit complete
2021/02/13 15:00:05 [DEBUG] refresh: aws_vpc.vpc[0]: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_vpc.vpc[0]
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_vpc.vpc[0]
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach6 (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach6 (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach6 (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach6 (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach6"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach6": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpMysql": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpMysql (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpMysql (expand)": visit complete
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_vpc.vpc[0]"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_key_pair.kpAvi
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_key_pair.kpAvi
2021/02/13 15:00:05 [DEBUG] refresh: aws_key_pair.kpAvi: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_key_pair.kpAvi
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_key_pair.kpAvi
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_key_pair.kpAvi"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_iam_policy.AviController-EC2-Policy
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021-02-13T15:00:05.023Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:05 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] EvalReadData: data.aws_route53_zone.awsAviDemo configuration is complete, so reading from provider
2021/02/13 15:00:05 [TRACE] GRPCProvider: ReadDataSource
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_iam_policy.AviController-IAM-Policy
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_key_pair.kpAvi, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDT2A0BYBJpqAR6S6MCFQt3KizmG55ql6H69fzmCG113Q1/8j7pWOMRUZUkfbpmur+hInFlp///CWnMiCJYq6VZFwzdiHsftXX1s1P4Eugwuro+P7v+kFJePQYsXkjeOObeWMr7zSTncPrzLe6X3Hol1TpXFnBHEOGy3Ea2VPmbRrS5q834NxArPZXYDk6He5ihmthwVSDrUnUeUHoHZG9ZpPSLi5yKSrKRqDvRe5eebTc1pOueJBPNJzvmd0cQgrT0R+aTwJXjQZUeJbRTZDDpBpXu4mMuGvsmdX2EtjO7yxtTbMotg83OIS6vrPTI9bcApqlTN3NL5B3HoZA7tItT avi@ansible") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDT2A0BYBJpqAR6S6MCFQt3KizmG55ql6H69fzmCG113Q1/8j7pWOMRUZUkfbpmur+hInFlp///CWnMiCJYq6VZFwzdiHsftXX1s1P4Eugwuro+P7v+kFJePQYsXkjeOObeWMr7zSTncPrzLe6X3Hol1TpXFnBHEOGy3Ea2VPmbRrS5q834NxArPZXYDk6He5ihmthwVSDrUnUeUHoHZG9ZpPSLi5yKSrKRqDvRe5eebTc1pOueJBPNJzvmd0cQgrT0R+aTwJXjQZUeJbRTZDDpBpXu4mMuGvsmdX2EtjO7yxtTbMotg83OIS6vrPTI9bcApqlTN3NL5B3HoZA7tItT avi@ansible\n")
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_key_pair.kpAvi
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_policy.AviController-IAM-Policy
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_key_pair.kpAvi
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpAvi": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-IAM-Policy": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpAvi": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpAvi": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-IAM-Policy": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-IAM-Policy": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpAvi (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpAvi (expand)": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-IAM-Policy (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-IAM-Policy (expand)": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach8 (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_instance_profile.Ansible-Instance-Profile": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach8 (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_iam_instance_profile.Ansible-Instance-Profile as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_iam_instance_profile.Ansible-Instance-Profile", instance aws_iam_instance_profile.Ansible-Instance-Profile
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_key_pair.kpBackend
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_iam_instance_profile.Ansible-Instance-Profile" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_instance_profile.Ansible-Instance-Profile": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_instance_profile.Ansible-Instance-Profile"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_instance_profile.Ansible-Instance-Profile": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach8 (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_key_pair.kpBackend
2021/02/13 15:00:05 [DEBUG] refresh: aws_key_pair.kpBackend: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_key_pair.kpBackend
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_key_pair.kpBackend
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_key_pair.kpBackend"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach8 (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach8"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach8": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_instance_profile.AviController-Instance-Profile": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_iam_instance_profile.AviController-Instance-Profile as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_iam_instance_profile.AviController-Instance-Profile", instance aws_iam_instance_profile.AviController-Instance-Profile
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_iam_instance_profile.AviController-Instance-Profile" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_instance_profile.AviController-Instance-Profile": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_instance_profile.AviController-Instance-Profile"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_instance_profile.AviController-Instance-Profile": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_policy.AviController-EC2-Policy
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-EC2-Policy": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-EC2-Policy": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-EC2-Policy": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-EC2-Policy (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_policy.AviController-EC2-Policy (expand)": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach1 (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach1 (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach1 (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach1 (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach1"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach1": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach2": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_iam_role_policy_attachment.avi-attach2 as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_iam_role_policy_attachment.avi-attach2", instance aws_iam_role_policy_attachment.avi-attach2
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach2" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach2": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach2"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach2": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach5": expanding dynamic subgraph
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_role.vmimport, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .max_session_duration: planned value cty.NumberIntVal(3600) does not match config value cty.NullVal(cty.Number)
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
      - .force_detach_policies: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_iam_role.vmimport
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach4": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_iam_role_policy_attachment.avi-attach4 as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_iam_role_policy_attachment.avi-attach4", instance aws_iam_role_policy_attachment.avi-attach4
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021-02-13T15:00:05.025Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:05 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021-02-13T15:00:05.025Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:05 [DEBUG] Reading AMI: {
2021-02-13T15:00:05.025Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Filters: [{
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach4" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach4": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach4"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach4": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_iam_role_policy_attachment.avi-attach5 as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_iam_role_policy_attachment.avi-attach5", instance aws_iam_role_policy_attachment.avi-attach5
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach5" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach5": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach5"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach5": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_vpc.vpc[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .instance_tenancy: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .assign_generated_ipv6_cidr_block: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach6": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_vpc.vpc[0]
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_iam_role_policy_attachment.avi-attach6 as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_iam_role_policy_attachment.avi-attach6", instance aws_iam_role_policy_attachment.avi-attach6
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach6" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach6": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] EvalReadData: data.aws_ami.ubuntuFocal configuration is complete, so reading from provider
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach6"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach6": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] GRPCProvider: ReadDataSource
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach3": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_iam_role_policy_attachment.avi-attach3 as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_iam_role_policy_attachment.avi-attach3", instance aws_iam_role_policy_attachment.avi-attach3
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_iam_instance_profile.Ansible-Instance-Profile
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach3" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.ansible-attach1": expanding dynamic subgraph
2021-02-13T15:00:05.025Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       Name: "name",
2021-02-13T15:00:05.025Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       Values: ["ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-*"]
2021-02-13T15:00:05.025Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021/02/13 15:00:05 [TRACE] EvalReadData: data.aws_ami.aviAmi configuration is complete, so reading from provider
2021-02-13T15:00:05.025Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Owners: ["099720109477"]
2021/02/13 15:00:05 [TRACE] GRPCProvider: ReadDataSource
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach7": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach3": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach3"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach3": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_iam_instance_profile.Ansible-Instance-Profile
2021/02/13 15:00:05 [DEBUG] refresh: aws_iam_instance_profile.Ansible-Instance-Profile: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_iam_instance_profile.Ansible-Instance-Profile
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_iam_instance_profile.Ansible-Instance-Profile
2021-02-13T15:00:05.025Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:05.025Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:05 [DEBUG] Reading Route53 Zone: {
2021-02-13T15:00:05.025Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 
2021-02-13T15:00:05.025Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_vpc.vpc[0]
2021/02/13 15:00:05 [TRACE] vertex "aws_vpc.vpc[0]": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_vpc.vpc": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_vpc.vpc": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_vpc.vpc (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_vpc.vpc (expand)": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_security_group.sgAvi (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgAvi (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgAvi (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach8": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_iam_instance_profile.Ansible-Instance-Profile"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_role.vmimport
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.vmimport": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.vmimport": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.vmimport": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.vmimport (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role.vmimport (expand)": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role_policy.vmimport (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy.vmimport (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy.vmimport (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_subnet.subnetMysql (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetMysql (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetMysql (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_security_group.sgBackend (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgBackend (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgBackend (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_security_group.sgJump (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgJump (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgJump (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_security_group.sgMysql (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgMysql (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgMysql (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_subnet.subnetMgt (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetMgt (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetMgt (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_security_group.sgOpencart (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgOpencart (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgOpencart (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_internet_gateway.internetGateway (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_internet_gateway.internetGateway (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_internet_gateway.internetGateway (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_iam_role_policy_attachment.ansible-attach1 as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_iam_role_policy_attachment.ansible-attach1", instance aws_iam_role_policy_attachment.ansible-attach1
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.ansible-attach1" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.ansible-attach1": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_iam_instance_profile.AviController-Instance-Profile
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_iam_instance_profile.AviController-Instance-Profile
2021/02/13 15:00:05 [DEBUG] refresh: aws_iam_instance_profile.AviController-Instance-Profile: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_iam_instance_profile.AviController-Instance-Profile
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_iam_instance_profile.AviController-Instance-Profile
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_iam_role_policy_attachment.avi-attach2
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_iam_role_policy_attachment.avi-attach2
2021/02/13 15:00:05 [DEBUG] refresh: aws_iam_role_policy_attachment.avi-attach2: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_iam_role_policy_attachment.avi-attach2
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_iam_role_policy_attachment.avi-attach2
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_iam_role_policy_attachment.avi-attach7 as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_iam_role_policy_attachment.avi-attach7", instance aws_iam_role_policy_attachment.avi-attach7
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach7" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach7": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach7"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach7": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach1": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_iam_role_policy_attachment.avi-attach1 as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_iam_role_policy_attachment.avi-attach2"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_iam_instance_profile.AviController-Instance-Profile"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.ansible-attach1"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.ansible-attach1": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_iam_role_policy_attachment.avi-attach1", instance aws_iam_role_policy_attachment.avi-attach1
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach1" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach1": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach1"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach1": starting visit (*terraform.NodePlannableResourceInstance)
2021-02-13T15:00:05.027Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:05 [DEBUG] Reading AMI: {
2021-02-13T15:00:05.027Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Filters: [{
2021-02-13T15:00:05.027Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       Name: "name",
2021-02-13T15:00:05.027Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       Values: ["Avi-Controller-20.1.3*"]
2021-02-13T15:00:05.027Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021-02-13T15:00:05.027Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Owners: ["aws-marketplace"]
2021-02-13T15:00:05.027Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_iam_role_policy_attachment.avi-attach4
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_iam_role_policy_attachment.avi-attach8 as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_iam_role_policy_attachment.avi-attach8", instance aws_iam_role_policy_attachment.avi-attach8
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgAvi (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_security_group.sgAvi"
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgAvi": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach8" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_iam_role_policy_attachment.avi-attach4
2021/02/13 15:00:05 [DEBUG] refresh: aws_iam_role_policy_attachment.avi-attach4: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_iam_role_policy_attachment.avi-attach4
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_iam_role_policy_attachment.avi-attach4
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach8": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach8"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach8": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_instance_profile.Ansible-Instance-Profile, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_iam_instance_profile.Ansible-Instance-Profile
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_iam_role_policy_attachment.avi-attach4"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] vertex "aws_internet_gateway.internetGateway (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_internet_gateway.internetGateway"
2021/02/13 15:00:05 [TRACE] vertex "aws_internet_gateway.internetGateway": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetMysql (expand)": entering dynamic subgraph
2021-02-13T15:00:05.027Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:05 [DEBUG] Reading AMI: {
2021-02-13T15:00:05.027Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Filters: [{
2021-02-13T15:00:05.027Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       Name: "name",
2021-02-13T15:00:05.027Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       Values: ["ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*"]
2021-02-13T15:00:05.027Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021-02-13T15:00:05.027Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Owners: ["099720109477"]
2021-02-13T15:00:05.027Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_subnet.subnetMysql"
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetMysql": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgBackend (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_security_group.sgBackend"
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgBackend": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgJump (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_key_pair.kpBackend, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDT2A0BYBJpqAR6S6MCFQt3KizmG55ql6H69fzmCG113Q1/8j7pWOMRUZUkfbpmur+hInFlp///CWnMiCJYq6VZFwzdiHsftXX1s1P4Eugwuro+P7v+kFJePQYsXkjeOObeWMr7zSTncPrzLe6X3Hol1TpXFnBHEOGy3Ea2VPmbRrS5q834NxArPZXYDk6He5ihmthwVSDrUnUeUHoHZG9ZpPSLi5yKSrKRqDvRe5eebTc1pOueJBPNJzvmd0cQgrT0R+aTwJXjQZUeJbRTZDDpBpXu4mMuGvsmdX2EtjO7yxtTbMotg83OIS6vrPTI9bcApqlTN3NL5B3HoZA7tItT avi@ansible") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDT2A0BYBJpqAR6S6MCFQt3KizmG55ql6H69fzmCG113Q1/8j7pWOMRUZUkfbpmur+hInFlp///CWnMiCJYq6VZFwzdiHsftXX1s1P4Eugwuro+P7v+kFJePQYsXkjeOObeWMr7zSTncPrzLe6X3Hol1TpXFnBHEOGy3Ea2VPmbRrS5q834NxArPZXYDk6He5ihmthwVSDrUnUeUHoHZG9ZpPSLi5yKSrKRqDvRe5eebTc1pOueJBPNJzvmd0cQgrT0R+aTwJXjQZUeJbRTZDDpBpXu4mMuGvsmdX2EtjO7yxtTbMotg83OIS6vrPTI9bcApqlTN3NL5B3HoZA7tItT avi@ansible\n")
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_security_group.sgJump"
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgJump": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_key_pair.kpBackend
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_key_pair.kpBackend
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpBackend": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpBackend": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpBackend": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpBackend (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_key_pair.kpBackend (expand)": visit complete
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_instance_profile.Ansible-Instance-Profile
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_instance_profile.Ansible-Instance-Profile": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetMgt (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_subnet.subnetMgt"
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetMgt": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgMysql (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_security_group.sgMysql"
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgMysql": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy.vmimport (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role_policy.vmimport"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy.vmimport": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_instance_profile.Ansible-Instance-Profile": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_instance_profile.Ansible-Instance-Profile": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_instance_profile.Ansible-Instance-Profile (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_instance_profile.Ansible-Instance-Profile (expand)": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgOpencart (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_security_group.sgOpencart"
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgOpencart": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_iam_role_policy_attachment.avi-attach5
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_instance_profile.AviController-Instance-Profile, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_iam_instance_profile.AviController-Instance-Profile
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_iam_role_policy_attachment.avi-attach6
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_iam_role_policy_attachment.avi-attach6
2021/02/13 15:00:05 [DEBUG] refresh: aws_iam_role_policy_attachment.avi-attach6: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_iam_role_policy_attachment.avi-attach6
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_iam_role_policy_attachment.avi-attach6
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_iam_role_policy_attachment.avi-attach6"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_instance_profile.AviController-Instance-Profile
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_instance_profile.AviController-Instance-Profile": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_instance_profile.AviController-Instance-Profile": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_instance_profile.AviController-Instance-Profile": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_instance_profile.AviController-Instance-Profile (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_instance_profile.AviController-Instance-Profile (expand)": visit complete
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy_attachment.avi-attach2
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_role_policy_attachment.avi-attach2
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach2": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach2": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach2": visit complete
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_iam_role_policy_attachment.avi-attach7
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_iam_role_policy_attachment.avi-attach7
2021/02/13 15:00:05 [DEBUG] refresh: aws_iam_role_policy_attachment.avi-attach7: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_iam_role_policy_attachment.avi-attach7
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_iam_role_policy_attachment.avi-attach7
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_iam_role_policy_attachment.avi-attach3
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_iam_role_policy_attachment.avi-attach5
2021/02/13 15:00:05 [DEBUG] refresh: aws_iam_role_policy_attachment.avi-attach5: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_iam_role_policy_attachment.avi-attach5
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_iam_role_policy_attachment.avi-attach5
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_iam_role_policy_attachment.avi-attach3
2021/02/13 15:00:05 [DEBUG] refresh: aws_iam_role_policy_attachment.avi-attach3: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_iam_role_policy_attachment.avi-attach3
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_iam_role_policy_attachment.avi-attach3
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach2 (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach2 (expand)": visit complete
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_iam_role_policy_attachment.avi-attach3"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_iam_role_policy_attachment.avi-attach5"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_iam_role_policy_attachment.avi-attach7"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy_attachment.avi-attach4
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_role_policy_attachment.avi-attach4
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_iam_role_policy_attachment.ansible-attach1
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach4": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach4": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach4": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach4 (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach4 (expand)": visit complete
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_iam_role_policy_attachment.ansible-attach1
2021/02/13 15:00:05 [DEBUG] refresh: aws_iam_role_policy_attachment.ansible-attach1: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_iam_role_policy_attachment.ansible-attach1
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_iam_role_policy_attachment.ansible-attach1
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy_attachment.avi-attach6
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_role_policy_attachment.avi-attach6
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach6": visit complete
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_iam_role_policy_attachment.ansible-attach1"
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_iam_role_policy_attachment.avi-attach1
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach6": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_iam_role_policy_attachment.avi-attach1
2021/02/13 15:00:05 [DEBUG] refresh: aws_iam_role_policy_attachment.avi-attach1: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_iam_role_policy_attachment.avi-attach1
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_iam_role_policy_attachment.avi-attach1
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_iam_role_policy_attachment.avi-attach1"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach6": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach6 (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach6 (expand)": visit complete
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy_attachment.avi-attach5
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_role_policy_attachment.avi-attach5
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach5": visit complete
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy_attachment.avi-attach7
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_role_policy_attachment.avi-attach7
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach7": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach7": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach7": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach7 (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach7 (expand)": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgAvi": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy_attachment.avi-attach3
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_iam_role_policy_attachment.avi-attach8
2021/02/13 15:00:05 [TRACE] vertex "aws_internet_gateway.internetGateway": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_security_group.sgAvi as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_security_group.sgAvi - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_security_group.sgAvi", instance aws_security_group.sgAvi
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_iam_role_policy_attachment.avi-attach8
2021/02/13 15:00:05 [DEBUG] refresh: aws_iam_role_policy_attachment.avi-attach8: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_iam_role_policy_attachment.avi-attach8
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_iam_role_policy_attachment.avi-attach8
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach5": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach5": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach5 (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach5 (expand)": visit complete
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_security_group.sgAvi" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgAvi": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_security_group.sgAvi"
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgAvi": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_internet_gateway.internetGateway[0] as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_internet_gateway.internetGateway[0] - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_internet_gateway.internetGateway[0]", instance aws_internet_gateway.internetGateway[0]
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.aws"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "aws_vpc.vpc"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_internet_gateway.internetGateway[0]" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_internet_gateway.internetGateway": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_internet_gateway.internetGateway[0]"
2021/02/13 15:00:05 [TRACE] vertex "aws_internet_gateway.internetGateway[0]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_iam_role_policy_attachment.avi-attach8"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetMysql": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy_attachment.avi-attach1
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy_attachment.ansible-attach1
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgBackend": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_security_group.sgBackend as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_security_group.sgBackend - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_security_group.sgBackend", instance aws_security_group.sgBackend
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_security_group.sgBackend" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgBackend": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_security_group.sgBackend"
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgBackend": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_subnet.subnetMysql as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_subnet.subnetMysql - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_subnet.subnetMysql", instance aws_subnet.subnetMysql
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.aws"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_subnet.subnetMysql" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetMysql": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_subnet.subnetMysql"
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetMysql": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_role_policy_attachment.avi-attach1
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach1": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach1": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach1": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach1 (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach1 (expand)": visit complete
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_role_policy_attachment.ansible-attach1
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.ansible-attach1": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.ansible-attach1": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.ansible-attach1": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.ansible-attach1 (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.ansible-attach1 (expand)": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetMgt": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_subnet.subnetMgt as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_subnet.subnetMgt - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_subnet.subnetMgt", instance aws_subnet.subnetMgt
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.aws"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_subnet.subnetMgt" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgMysql": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy_attachment.avi-attach8
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_security_group.sgMysql as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_security_group.sgMysql - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_security_group.sgMysql", instance aws_security_group.sgMysql
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetMgt": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_subnet.subnetMgt"
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetMgt": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgJump": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_role_policy_attachment.avi-attach3
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach3": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach3": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach3": visit complete
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_security_group.sgMysql" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgMysql": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_internet_gateway.internetGateway[0]
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_security_group.sgMysql"
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgMysql": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_internet_gateway.internetGateway[0]
2021/02/13 15:00:05 [DEBUG] refresh: aws_internet_gateway.internetGateway[0]: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_internet_gateway.internetGateway[0]
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_internet_gateway.internetGateway[0]
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgOpencart": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_security_group.sgOpencart as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_security_group.sgOpencart - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_security_group.sgOpencart", instance aws_security_group.sgOpencart
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_security_group.sgAvi
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach3 (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach3 (expand)": visit complete
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_security_group.sgOpencart" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgOpencart": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_security_group.sgOpencart"
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgOpencart": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_security_group.sgAvi
2021/02/13 15:00:05 [DEBUG] refresh: aws_security_group.sgAvi: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_security_group.sgAvi
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_security_group.sgAvi
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_internet_gateway.internetGateway[0]"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_role_policy_attachment.avi-attach8
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach8": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach8": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach8": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach8 (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach8 (expand)": visit complete
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_security_group.sgJump as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_security_group.sgJump - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_security_group.sgJump", instance aws_security_group.sgJump
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_security_group.sgBackend
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_subnet.subnetMysql
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_security_group.sgAvi"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_security_group.sgJump" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_security_group.sgBackend
2021/02/13 15:00:05 [DEBUG] refresh: aws_security_group.sgBackend: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_security_group.sgBackend
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_security_group.sgBackend
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgJump": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_security_group.sgJump"
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgJump": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_security_group.sgBackend"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy.vmimport": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_subnet.subnetMgt
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_subnet.subnetMgt
2021/02/13 15:00:05 [DEBUG] refresh: aws_subnet.subnetMgt: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_subnet.subnetMgt
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_subnet.subnetMgt
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_subnet.subnetMgt"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_subnet.subnetMysql
2021/02/13 15:00:05 [DEBUG] refresh: aws_subnet.subnetMysql: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_subnet.subnetMysql
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_subnet.subnetMysql
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_iam_role_policy.vmimport as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_role_policy.vmimport - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_iam_role_policy.vmimport", instance aws_iam_role_policy.vmimport
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_iam_role_policy.vmimport" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy.vmimport": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_iam_role_policy.vmimport"
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy.vmimport": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_subnet.subnetMysql"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021-02-13T15:00:05.036Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:05 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021-02-13T15:00:05.036Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:05 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021-02-13T15:00:05.036Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:05 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021-02-13T15:00:05.036Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:05 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_internet_gateway.internetGateway[0]
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_internet_gateway.internetGateway[0]
2021/02/13 15:00:05 [TRACE] vertex "aws_internet_gateway.internetGateway[0]": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_internet_gateway.internetGateway": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_internet_gateway.internetGateway": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_internet_gateway.internetGateway (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_internet_gateway.internetGateway (expand)": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_route_table.rt (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table.rt (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table.rt (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table.rt (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_route_table.rt"
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table.rt": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_security_group.sgMysql
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_security_group.sgMysql
2021/02/13 15:00:05 [DEBUG] refresh: aws_security_group.sgMysql: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_security_group.sgMysql
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_security_group.sgMysql
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_subnet.subnetMysql, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .assign_ipv6_address_on_creation: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetMysql
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_subnet.subnetMysql
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetMysql": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetMysql": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetMysql": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetMysql (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetMysql (expand)": visit complete
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_security_group.sgOpencart
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_security_group.sgOpencart
2021/02/13 15:00:05 [DEBUG] refresh: aws_security_group.sgOpencart: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_security_group.sgOpencart
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_security_group.sgOpencart
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sgAvi, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(123), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("udp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(123)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(443), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(443)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8443), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8443)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(123), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("udp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(123)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(443), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(443)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8443), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8443)})})
      - .description: planned value cty.StringVal("Managed by Terraform") does not match config value cty.NullVal(cty.String)
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_security_group.sgAvi
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_security_group.sgMysql"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_eip.eipForNatGw (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_eip.eipForNatGw (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_eip.eipForNatGw (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_eip.eipForNatGw (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_eip.eipForNatGw"
2021/02/13 15:00:05 [TRACE] vertex "aws_eip.eipForNatGw": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_security_group.sgOpencart"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021-02-13T15:00:05.041Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:05 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021-02-13T15:00:05.041Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:05 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_security_group.sgAvi
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgAvi": visit complete
2021-02-13T15:00:05.041Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:05 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021-02-13T15:00:05.041Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:05 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgAvi": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgAvi": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgAvi (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgAvi (expand)": visit complete
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_security_group.sgJump
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_security_group.sgJump
2021/02/13 15:00:05 [DEBUG] refresh: aws_security_group.sgJump: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_security_group.sgJump
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_security_group.sgJump
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_security_group.sgJump"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021-02-13T15:00:05.043Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:05 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021-02-13T15:00:05.043Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:05 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_subnet.subnetMgt, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .assign_ipv6_address_on_creation: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetMgt
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_subnet.subnetMgt
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetMgt": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetMgt": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetMgt": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetMgt (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetMgt (expand)": visit complete
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_iam_role_policy.vmimport
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_iam_role_policy.vmimport
2021/02/13 15:00:05 [DEBUG] refresh: aws_iam_role_policy.vmimport: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_iam_role_policy.vmimport
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_iam_role_policy.vmimport
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_iam_role_policy.vmimport"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sgOpencart, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(443), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(443)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(443), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(443)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)})})
      - .description: planned value cty.StringVal("Managed by Terraform") does not match config value cty.NullVal(cty.String)
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_security_group.sgOpencart
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sgBackend, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(443), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(443)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(443), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(443)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)})})
      - .description: planned value cty.StringVal("Managed by Terraform") does not match config value cty.NullVal(cty.String)
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_security_group.sgBackend
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_security_group.sgBackend
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgBackend": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgBackend": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgBackend": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgBackend (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgBackend (expand)": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table.rt": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_eip.eipForNatGw": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_route_table.rt[0] as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy.vmimport
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_route_table.rt[0] - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_route_table.rt[0]", instance aws_route_table.rt[0]
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.aws"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "aws_vpc.vpc"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "aws_internet_gateway.internetGateway"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_route_table.rt[0]" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table.rt": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_route_table.rt[0]"
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table.rt[0]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_eip.eipForNatGw as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_eip.eipForNatGw - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_eip.eipForNatGw", instance aws_eip.eipForNatGw
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "aws_internet_gateway.internetGateway"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_eip.eipForNatGw" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_eip.eipForNatGw": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_eip.eipForNatGw"
2021/02/13 15:00:05 [TRACE] vertex "aws_eip.eipForNatGw": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_route_table.rt[0]
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_route_table.rt[0]
2021/02/13 15:00:05 [DEBUG] refresh: aws_route_table.rt[0]: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_route_table.rt[0]
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_route_table.rt[0]
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_security_group.sgOpencart
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgOpencart": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgOpencart": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgOpencart": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgOpencart (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgOpencart (expand)": visit complete
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_eip.eipForNatGw
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_eip.eipForNatGw
2021/02/13 15:00:05 [DEBUG] refresh: aws_eip.eipForNatGw: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_eip.eipForNatGw
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_eip.eipForNatGw
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_iam_role_policy.vmimport
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy.vmimport": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy.vmimport": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy.vmimport": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy.vmimport (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_iam_role_policy.vmimport (expand)": visit complete
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_eip.eipForNatGw"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sgJump, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(443), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(443)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(443), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(443)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .description: planned value cty.StringVal("Managed by Terraform") does not match config value cty.NullVal(cty.String)
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_security_group.sgJump
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_route_table.rt[0]"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_security_group.sgJump
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgJump": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgJump": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgJump": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgJump (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgJump (expand)": visit complete
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sgMysql, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .description: planned value cty.StringVal("Managed by Terraform") does not match config value cty.NullVal(cty.String)
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(3306), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(3306)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(3306), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(3306)})})
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_security_group.sgMysql
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_eip.eipForNatGw
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_eip.eipForNatGw
2021/02/13 15:00:05 [TRACE] vertex "aws_eip.eipForNatGw": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_eip.eipForNatGw": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_eip.eipForNatGw": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_eip.eipForNatGw (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_eip.eipForNatGw (expand)": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_nat_gateway.natGw (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_nat_gateway.natGw (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_nat_gateway.natGw (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_nat_gateway.natGw (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_nat_gateway.natGw"
2021/02/13 15:00:05 [TRACE] vertex "aws_nat_gateway.natGw": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_nat_gateway.natGw": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_security_group.sgMysql
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgMysql": visit complete
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_nat_gateway.natGw as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_nat_gateway.natGw - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgMysql": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgMysql": visit complete
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgMysql (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_security_group.sgMysql (expand)": visit complete
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_nat_gateway.natGw", instance aws_nat_gateway.natGw
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_route_table.rt[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .route: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_block":cty.StringVal("0.0.0.0/0"), "egress_only_gateway_id":cty.StringVal(""), "gateway_id":cty.UnknownVal(cty.String), "instance_id":cty.StringVal(""), "ipv6_cidr_block":cty.StringVal(""), "local_gateway_id":cty.StringVal(""), "nat_gateway_id":cty.StringVal(""), "network_interface_id":cty.StringVal(""), "transit_gateway_id":cty.StringVal(""), "vpc_endpoint_id":cty.StringVal(""), "vpc_peering_connection_id":cty.StringVal("")})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_block":cty.StringVal("0.0.0.0/0"), "egress_only_gateway_id":cty.NullVal(cty.String), "gateway_id":cty.UnknownVal(cty.String), "instance_id":cty.NullVal(cty.String), "ipv6_cidr_block":cty.NullVal(cty.String), "local_gateway_id":cty.NullVal(cty.String), "nat_gateway_id":cty.NullVal(cty.String), "network_interface_id":cty.NullVal(cty.String), "transit_gateway_id":cty.NullVal(cty.String), "vpc_endpoint_id":cty.NullVal(cty.String), "vpc_peering_connection_id":cty.NullVal(cty.String)})})
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_route_table.rt[0]
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_nat_gateway.natGw" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_nat_gateway.natGw": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_nat_gateway.natGw"
2021/02/13 15:00:05 [TRACE] vertex "aws_nat_gateway.natGw": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_nat_gateway.natGw
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_route_table.rt[0]
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table.rt[0]": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table.rt": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table.rt": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table.rt (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table.rt (expand)": visit complete
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_nat_gateway.natGw
2021/02/13 15:00:05 [DEBUG] refresh: aws_nat_gateway.natGw: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_nat_gateway.natGw
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_nat_gateway.natGw
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_nat_gateway.natGw"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationMgt (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationMgt (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationMgt (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationMgt (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationMgt"
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationMgt": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationMgt": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_route_table_association.subnetAssociationMgt as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_route_table_association.subnetAssociationMgt - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_route_table_association.subnetAssociationMgt", instance aws_route_table_association.subnetAssociationMgt
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationMgt" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationMgt": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationMgt"
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationMgt": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_route_table_association.subnetAssociationMgt
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_route_table_association.subnetAssociationMgt
2021/02/13 15:00:05 [DEBUG] refresh: aws_route_table_association.subnetAssociationMgt: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_route_table_association.subnetAssociationMgt
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_route_table_association.subnetAssociationMgt
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_route_table_association.subnetAssociationMgt"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_nat_gateway.natGw
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_nat_gateway.natGw
2021/02/13 15:00:05 [TRACE] vertex "aws_nat_gateway.natGw": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_nat_gateway.natGw": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_nat_gateway.natGw": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_nat_gateway.natGw (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_nat_gateway.natGw (expand)": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_route_table.rtPrivate (expand)"
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table.rtPrivate (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table.rtPrivate (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table.rtPrivate (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_route_table.rtPrivate"
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table.rtPrivate": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table.rtPrivate": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_route_table.rtPrivate[0] as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_route_table.rtPrivate[0] - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_route_table.rtPrivate[0]", instance aws_route_table.rtPrivate[0]
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.aws"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "aws_vpc.vpc"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_route_table.rtPrivate[0]" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table.rtPrivate": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_route_table.rtPrivate[0]"
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table.rtPrivate[0]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_route_table.rtPrivate[0]
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_route_table.rtPrivate[0]
2021/02/13 15:00:05 [DEBUG] refresh: aws_route_table.rtPrivate[0]: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_route_table.rtPrivate[0]
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_route_table.rtPrivate[0]
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_route_table_association.subnetAssociationMgt
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_route_table_association.subnetAssociationMgt
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationMgt": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationMgt": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationMgt": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationMgt (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationMgt (expand)": visit complete
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_route_table.rtPrivate[0]"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_route_table.rtPrivate[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .route: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_block":cty.StringVal("0.0.0.0/0"), "egress_only_gateway_id":cty.StringVal(""), "gateway_id":cty.StringVal(""), "instance_id":cty.StringVal(""), "ipv6_cidr_block":cty.StringVal(""), "local_gateway_id":cty.StringVal(""), "nat_gateway_id":cty.UnknownVal(cty.String), "network_interface_id":cty.StringVal(""), "transit_gateway_id":cty.StringVal(""), "vpc_endpoint_id":cty.StringVal(""), "vpc_peering_connection_id":cty.StringVal("")})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_block":cty.StringVal("0.0.0.0/0"), "egress_only_gateway_id":cty.NullVal(cty.String), "gateway_id":cty.NullVal(cty.String), "instance_id":cty.NullVal(cty.String), "ipv6_cidr_block":cty.NullVal(cty.String), "local_gateway_id":cty.NullVal(cty.String), "nat_gateway_id":cty.UnknownVal(cty.String), "network_interface_id":cty.NullVal(cty.String), "transit_gateway_id":cty.NullVal(cty.String), "vpc_endpoint_id":cty.NullVal(cty.String), "vpc_peering_connection_id":cty.NullVal(cty.String)})})
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_route_table.rtPrivate[0]
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_route_table.rtPrivate[0]
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table.rtPrivate[0]": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table.rtPrivate": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table.rtPrivate": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table.rtPrivate (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table.rtPrivate (expand)": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationMysql (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationMysql (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationMysql (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationMysql (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationMysql"
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationMysql": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationMysql": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_route_table_association.subnetAssociationMysql as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_route_table_association.subnetAssociationMysql - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_route_table_association.subnetAssociationMysql", instance aws_route_table_association.subnetAssociationMysql
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationMysql" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationMysql": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationMysql"
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationMysql": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_route_table_association.subnetAssociationMysql
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_route_table_association.subnetAssociationMysql
2021/02/13 15:00:05 [DEBUG] refresh: aws_route_table_association.subnetAssociationMysql: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_route_table_association.subnetAssociationMysql
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_route_table_association.subnetAssociationMysql
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_route_table_association.subnetAssociationMysql"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_route_table_association.subnetAssociationMysql
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_route_table_association.subnetAssociationMysql
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationMysql": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationMysql": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationMysql": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationMysql (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationMysql (expand)": visit complete
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for data.aws_availability_zones.available
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for data.aws_availability_zones.available
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for data.aws_availability_zones.available
2021/02/13 15:00:05 [TRACE] vertex "data.aws_availability_zones.available": visit complete
2021/02/13 15:00:05 [TRACE] vertex "data.aws_availability_zones.available": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "data.aws_availability_zones.available": visit complete
2021/02/13 15:00:05 [TRACE] vertex "data.aws_availability_zones.available (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "data.aws_availability_zones.available (expand)": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "output.az"
2021/02/13 15:00:05 [TRACE] vertex "output.az": starting visit (*terraform.NodeApplyableOutput)
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_subnet.subnetBackend (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetBackend (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetBackend (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetBackend (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_subnet.subnetBackend"
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetBackend": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] ExecuteWriteOutput: Saving Create change for output.az in changeset
2021/02/13 15:00:05 [TRACE] EvalWriteOutput: Saving value for output.az in state
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_subnet.subnetAviSeMgt (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviSeMgt (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] ExecuteWriteOutput: Saving Create change for output.az in changeset
2021/02/13 15:00:05 [TRACE] EvalWriteOutput: Saving value for output.az in state
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviSeMgt (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "output.az": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_subnet.subnetAviVs (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviVs (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviVs (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviVs (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_subnet.subnetAviVs"
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviVs": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviSeMgt (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_subnet.subnetAviSeMgt"
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviSeMgt": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviVs": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_subnet.subnetAviVs[0] as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_subnet.subnetAviVs[1] as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_subnet.subnetAviVs[2] as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_subnet.subnetAviVs[0] - *terraform.NodePlannableResourceInstance
  aws_subnet.subnetAviVs[1] - *terraform.NodePlannableResourceInstance
  aws_subnet.subnetAviVs[2] - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_subnet.subnetAviVs[0]", instance aws_subnet.subnetAviVs[0]
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_subnet.subnetAviVs[1]", instance aws_subnet.subnetAviVs[1]
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_subnet.subnetAviVs[2]", instance aws_subnet.subnetAviVs[2]
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.aws"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_subnet.subnetAviVs[0]" references: []
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.aws"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_subnet.subnetAviVs[1]" references: []
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetBackend": expanding dynamic subgraph
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.aws"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_subnet.subnetAviVs[2]" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  aws_subnet.subnetAviVs[0] - *terraform.NodePlannableResourceInstance
  aws_subnet.subnetAviVs[1] - *terraform.NodePlannableResourceInstance
  aws_subnet.subnetAviVs[2] - *terraform.NodePlannableResourceInstance
  root - terraform.graphNodeRoot
    aws_subnet.subnetAviVs[0] - *terraform.NodePlannableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodePlannableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviVs": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviSeMgt": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_subnet.subnetBackend[0] as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_subnet.subnetBackend[1] as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_subnet.subnetBackend[2] as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_subnet.subnetBackend[0] - *terraform.NodePlannableResourceInstance
  aws_subnet.subnetBackend[1] - *terraform.NodePlannableResourceInstance
  aws_subnet.subnetBackend[2] - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_subnet.subnetBackend[0]", instance aws_subnet.subnetBackend[0]
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_subnet.subnetBackend[1]", instance aws_subnet.subnetBackend[1]
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_subnet.subnetBackend[2]", instance aws_subnet.subnetBackend[2]
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.aws"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_subnet.subnetBackend[0]" references: []
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_subnet.subnetAviVs[0]"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.aws"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_subnet.subnetBackend[1]" references: []
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.aws"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_subnet.subnetBackend[2]" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  aws_subnet.subnetBackend[0] - *terraform.NodePlannableResourceInstance
  aws_subnet.subnetBackend[1] - *terraform.NodePlannableResourceInstance
  aws_subnet.subnetBackend[2] - *terraform.NodePlannableResourceInstance
  root - terraform.graphNodeRoot
    aws_subnet.subnetBackend[0] - *terraform.NodePlannableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodePlannableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetBackend": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_subnet.subnetBackend[2]"
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetBackend[2]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviVs[0]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_subnet.subnetAviSeMgt[0] as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_subnet.subnetAviSeMgt[1] as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_subnet.subnetAviSeMgt[2] as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_subnet.subnetAviSeMgt[0] - *terraform.NodePlannableResourceInstance
  aws_subnet.subnetAviSeMgt[1] - *terraform.NodePlannableResourceInstance
  aws_subnet.subnetAviSeMgt[2] - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_subnet.subnetAviSeMgt[2]", instance aws_subnet.subnetAviSeMgt[2]
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_subnet.subnetAviSeMgt[0]", instance aws_subnet.subnetAviSeMgt[0]
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_subnet.subnetAviSeMgt[1]", instance aws_subnet.subnetAviSeMgt[1]
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.aws"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_subnet.subnetAviVs[0]
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_subnet.subnetAviSeMgt[0]" references: []
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_subnet.subnetBackend[2]
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_subnet.subnetBackend[0]"
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetBackend[0]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_subnet.subnetBackend[0]
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_subnet.subnetBackend[1]"
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetBackend[1]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_subnet.subnetBackend[1]
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_subnet.subnetAviVs[2]"
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviVs[2]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_subnet.subnetAviVs[2]
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.aws"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_subnet.subnetAviSeMgt[1]" references: []
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.aws"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_subnet.subnetAviSeMgt[2]" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  aws_subnet.subnetAviSeMgt[0] - *terraform.NodePlannableResourceInstance
  aws_subnet.subnetAviSeMgt[1] - *terraform.NodePlannableResourceInstance
  aws_subnet.subnetAviSeMgt[2] - *terraform.NodePlannableResourceInstance
  root - terraform.graphNodeRoot
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodePlannableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodePlannableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviSeMgt": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_subnet.subnetAviVs[1]"
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviVs[1]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_subnet.subnetAviVs[1]
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_subnet.subnetAviVs[1]
2021/02/13 15:00:05 [DEBUG] refresh: aws_subnet.subnetAviVs[1]: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_subnet.subnetAviVs[1]
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_subnet.subnetAviVs[1]
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_subnet.subnetBackend[2]
2021/02/13 15:00:05 [DEBUG] refresh: aws_subnet.subnetBackend[2]: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_subnet.subnetBackend[2]
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_subnet.subnetBackend[2]
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_subnet.subnetAviVs[2]
2021/02/13 15:00:05 [DEBUG] refresh: aws_subnet.subnetAviVs[2]: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_subnet.subnetAviVs[2]
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_subnet.subnetAviVs[2]
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_subnet.subnetAviVs[1]"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_subnet.subnetAviVs[0]
2021/02/13 15:00:05 [DEBUG] refresh: aws_subnet.subnetAviVs[0]: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_subnet.subnetAviVs[0]
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_subnet.subnetAviVs[0]
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_subnet.subnetAviSeMgt[0]"
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviSeMgt[0]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_subnet.subnetBackend[1]
2021/02/13 15:00:05 [DEBUG] refresh: aws_subnet.subnetBackend[1]: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_subnet.subnetBackend[1]
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_subnet.subnetBackend[1]
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_subnet.subnetAviVs[0]"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_subnet.subnetBackend[0]
2021/02/13 15:00:05 [DEBUG] refresh: aws_subnet.subnetBackend[0]: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_subnet.subnetBackend[0]
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_subnet.subnetBackend[0]
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_subnet.subnetBackend[1]"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_subnet.subnetAviSeMgt[1]"
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviSeMgt[1]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_subnet.subnetBackend[0]"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_subnet.subnetAviSeMgt[2]"
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviSeMgt[2]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_subnet.subnetBackend[2]"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_subnet.subnetAviVs[2]"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_subnet.subnetAviVs[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .assign_ipv6_address_on_creation: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetAviVs[1]
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_subnet.subnetAviVs[1]
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviVs[1]": visit complete
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_subnet.subnetBackend[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .assign_ipv6_address_on_creation: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetBackend[1]
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_subnet.subnetAviSeMgt[0]
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_subnet.subnetAviSeMgt[0]
2021/02/13 15:00:05 [DEBUG] refresh: aws_subnet.subnetAviSeMgt[0]: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_subnet.subnetAviSeMgt[0]
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_subnet.subnetAviSeMgt[0]
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_subnet.subnetBackend[1]
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetBackend[1]": visit complete
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_subnet.subnetAviSeMgt[1]
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_subnet.subnetAviSeMgt[1]
2021/02/13 15:00:05 [DEBUG] refresh: aws_subnet.subnetAviSeMgt[1]: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_subnet.subnetAviSeMgt[1]
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_subnet.subnetAviSeMgt[1]
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_subnet.subnetAviSeMgt[0]"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_subnet.subnetAviSeMgt[1]"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_subnet.subnetBackend[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .assign_ipv6_address_on_creation: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetBackend[0]
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_subnet.subnetBackend[0]
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetBackend[0]": visit complete
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_subnet.subnetAviSeMgt[2]
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_subnet.subnetAviSeMgt[2]
2021/02/13 15:00:05 [DEBUG] refresh: aws_subnet.subnetAviSeMgt[2]: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_subnet.subnetAviSeMgt[2]
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_subnet.subnetAviSeMgt[2]
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_subnet.subnetAviSeMgt[2]"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_subnet.subnetAviVs[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .assign_ipv6_address_on_creation: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetAviVs[0]
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_subnet.subnetAviVs[0]
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviVs[0]": visit complete
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_subnet.subnetBackend[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .assign_ipv6_address_on_creation: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetBackend[2]
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_subnet.subnetAviVs[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .assign_ipv6_address_on_creation: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetAviVs[2]
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_subnet.subnetBackend[2]
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetBackend[2]": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "root"
2021/02/13 15:00:05 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2021/02/13 15:00:05 [TRACE] vertex "root": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetBackend": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetBackend": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetBackend (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetBackend (expand)": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationBackend (expand)"
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_subnet.subnetAviVs[2]
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationBackend (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviVs[2]": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationBackend (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationBackend (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "root"
2021/02/13 15:00:05 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2021/02/13 15:00:05 [TRACE] vertex "root": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviVs": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviVs": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviVs (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviVs (expand)": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationAviVs (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviVs (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviVs (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviVs (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationBackend"
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationBackend": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationAviVs"
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviVs": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationBackend": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_route_table_association.subnetAssociationBackend[0] as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_route_table_association.subnetAssociationBackend[1] as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_route_table_association.subnetAssociationBackend[2] as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_route_table_association.subnetAssociationBackend[0] - *terraform.NodePlannableResourceInstance
  aws_route_table_association.subnetAssociationBackend[1] - *terraform.NodePlannableResourceInstance
  aws_route_table_association.subnetAssociationBackend[2] - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_route_table_association.subnetAssociationBackend[0]", instance aws_route_table_association.subnetAssociationBackend[0]
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_route_table_association.subnetAssociationBackend[1]", instance aws_route_table_association.subnetAssociationBackend[1]
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_route_table_association.subnetAssociationBackend[2]", instance aws_route_table_association.subnetAssociationBackend[2]
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "aws_subnet.subnetBackend"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationBackend[0]" references: []
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "aws_subnet.subnetBackend"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationBackend[1]" references: []
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "aws_subnet.subnetBackend"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationBackend[2]" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  aws_route_table_association.subnetAssociationBackend[0] - *terraform.NodePlannableResourceInstance
  aws_route_table_association.subnetAssociationBackend[1] - *terraform.NodePlannableResourceInstance
  aws_route_table_association.subnetAssociationBackend[2] - *terraform.NodePlannableResourceInstance
  root - terraform.graphNodeRoot
    aws_route_table_association.subnetAssociationBackend[0] - *terraform.NodePlannableResourceInstance
    aws_route_table_association.subnetAssociationBackend[1] - *terraform.NodePlannableResourceInstance
    aws_route_table_association.subnetAssociationBackend[2] - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationBackend": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationBackend[2]"
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationBackend[2]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_route_table_association.subnetAssociationBackend[2]
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_route_table_association.subnetAssociationBackend[2]
2021/02/13 15:00:05 [DEBUG] refresh: aws_route_table_association.subnetAssociationBackend[2]: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_route_table_association.subnetAssociationBackend[2]
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_route_table_association.subnetAssociationBackend[2]
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_route_table_association.subnetAssociationBackend[2]"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviVs": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_route_table_association.subnetAssociationAviVs[0] as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_route_table_association.subnetAssociationAviVs[1] as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_route_table_association.subnetAssociationAviVs[2] as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_route_table_association.subnetAssociationAviVs[0] - *terraform.NodePlannableResourceInstance
  aws_route_table_association.subnetAssociationAviVs[1] - *terraform.NodePlannableResourceInstance
  aws_route_table_association.subnetAssociationAviVs[2] - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_route_table_association.subnetAssociationAviVs[0]", instance aws_route_table_association.subnetAssociationAviVs[0]
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_route_table_association.subnetAssociationAviVs[1]", instance aws_route_table_association.subnetAssociationAviVs[1]
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_route_table_association.subnetAssociationAviVs[2]", instance aws_route_table_association.subnetAssociationAviVs[2]
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "aws_subnet.subnetAviVs"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationAviVs[0]" references: []
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "aws_subnet.subnetAviVs"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationAviVs[1]" references: []
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "aws_subnet.subnetAviVs"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationAviVs[2]" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  aws_route_table_association.subnetAssociationAviVs[0] - *terraform.NodePlannableResourceInstance
  aws_route_table_association.subnetAssociationAviVs[1] - *terraform.NodePlannableResourceInstance
  aws_route_table_association.subnetAssociationAviVs[2] - *terraform.NodePlannableResourceInstance
  root - terraform.graphNodeRoot
    aws_route_table_association.subnetAssociationAviVs[0] - *terraform.NodePlannableResourceInstance
    aws_route_table_association.subnetAssociationAviVs[1] - *terraform.NodePlannableResourceInstance
    aws_route_table_association.subnetAssociationAviVs[2] - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationBackend[1]"
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationBackend[1]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationBackend[0]"
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationBackend[0]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_route_table_association.subnetAssociationBackend[1]
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_route_table_association.subnetAssociationBackend[0]
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_route_table_association.subnetAssociationBackend[1]
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_route_table_association.subnetAssociationBackend[0]
2021/02/13 15:00:05 [DEBUG] refresh: aws_route_table_association.subnetAssociationBackend[1]: no state, so not refreshing
2021/02/13 15:00:05 [DEBUG] refresh: aws_route_table_association.subnetAssociationBackend[0]: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_route_table_association.subnetAssociationBackend[1]
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_route_table_association.subnetAssociationBackend[0]
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_route_table_association.subnetAssociationBackend[1]
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviVs": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationAviVs[0]"
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviVs[0]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationAviVs[1]"
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviVs[1]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationAviVs[2]"
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviVs[2]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_route_table_association.subnetAssociationBackend[0]
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_route_table_association.subnetAssociationBackend[1]"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_route_table_association.subnetAssociationBackend[0]"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_subnet.subnetAviSeMgt[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .assign_ipv6_address_on_creation: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetAviSeMgt[1]
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_subnet.subnetAviSeMgt[1]
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviSeMgt[1]": visit complete
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_route_table_association.subnetAssociationAviVs[0]
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_route_table_association.subnetAssociationAviVs[0]
2021/02/13 15:00:05 [DEBUG] refresh: aws_route_table_association.subnetAssociationAviVs[0]: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_route_table_association.subnetAssociationAviVs[0]
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_route_table_association.subnetAssociationAviVs[0]
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_subnet.subnetAviSeMgt[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .assign_ipv6_address_on_creation: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetAviSeMgt[2]
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_subnet.subnetAviSeMgt[2]
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviSeMgt[2]": visit complete
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_subnet.subnetAviSeMgt[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .assign_ipv6_address_on_creation: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetAviSeMgt[0]
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_subnet.subnetAviSeMgt[0]
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviSeMgt[0]": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "root"
2021/02/13 15:00:05 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2021/02/13 15:00:05 [TRACE] vertex "root": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviSeMgt": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviSeMgt": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviSeMgt (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_subnet.subnetAviSeMgt (expand)": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationAviSeMgt (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviSeMgt (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviSeMgt (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviSeMgt (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationAviSeMgt"
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_route_table_association.subnetAssociationBackend[2]
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_route_table_association.subnetAssociationBackend[2]
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationBackend[2]": visit complete
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_route_table_association.subnetAssociationAviVs[1]
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_route_table_association.subnetAssociationAviVs[2]
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_route_table_association.subnetAssociationAviVs[1]
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_route_table_association.subnetAssociationAviVs[2]
2021/02/13 15:00:05 [DEBUG] refresh: aws_route_table_association.subnetAssociationAviVs[1]: no state, so not refreshing
2021/02/13 15:00:05 [DEBUG] refresh: aws_route_table_association.subnetAssociationAviVs[2]: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_route_table_association.subnetAssociationAviVs[1]
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_route_table_association.subnetAssociationAviVs[1]
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_route_table_association.subnetAssociationAviVs[1]"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_route_table_association.subnetAssociationAviVs[2]
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_route_table_association.subnetAssociationAviVs[2]
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_route_table_association.subnetAssociationAviVs[0]"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviSeMgt": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_route_table_association.subnetAssociationBackend[1]
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_route_table_association.subnetAssociationBackend[1]
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationBackend[1]": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviSeMgt": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_route_table_association.subnetAssociationAviSeMgt[0] as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_route_table_association.subnetAssociationAviSeMgt[1] as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_route_table_association.subnetAssociationAviSeMgt[2] as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_route_table_association.subnetAssociationAviSeMgt[0] - *terraform.NodePlannableResourceInstance
  aws_route_table_association.subnetAssociationAviSeMgt[1] - *terraform.NodePlannableResourceInstance
  aws_route_table_association.subnetAssociationAviSeMgt[2] - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_route_table_association.subnetAssociationAviSeMgt[0]", instance aws_route_table_association.subnetAssociationAviSeMgt[0]
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_route_table_association.subnetAssociationAviSeMgt[1]", instance aws_route_table_association.subnetAssociationAviSeMgt[1]
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_route_table_association.subnetAssociationAviSeMgt[2]", instance aws_route_table_association.subnetAssociationAviSeMgt[2]
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_route_table_association.subnetAssociationAviVs[2]"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "aws_subnet.subnetAviSeMgt"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationAviSeMgt[0]" references: []
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "aws_subnet.subnetAviSeMgt"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationAviSeMgt[1]" references: []
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "aws_subnet.subnetAviSeMgt"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationAviSeMgt[2]" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  aws_route_table_association.subnetAssociationAviSeMgt[0] - *terraform.NodePlannableResourceInstance
  aws_route_table_association.subnetAssociationAviSeMgt[1] - *terraform.NodePlannableResourceInstance
  aws_route_table_association.subnetAssociationAviSeMgt[2] - *terraform.NodePlannableResourceInstance
  root - terraform.graphNodeRoot
    aws_route_table_association.subnetAssociationAviSeMgt[0] - *terraform.NodePlannableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt[1] - *terraform.NodePlannableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt[2] - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviSeMgt": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationAviSeMgt[0]"
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviSeMgt[0]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_route_table_association.subnetAssociationAviSeMgt[0]
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_route_table_association.subnetAssociationAviSeMgt[0]
2021/02/13 15:00:05 [DEBUG] refresh: aws_route_table_association.subnetAssociationAviSeMgt[0]: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_route_table_association.subnetAssociationAviSeMgt[0]
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_route_table_association.subnetAssociationAviSeMgt[0]
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationAviSeMgt[1]"
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviSeMgt[1]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationAviSeMgt[2]"
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviSeMgt[2]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_route_table_association.subnetAssociationAviSeMgt[1]
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_route_table_association.subnetAssociationAviSeMgt[1]
2021/02/13 15:00:05 [DEBUG] refresh: aws_route_table_association.subnetAssociationAviSeMgt[1]: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_route_table_association.subnetAssociationAviSeMgt[1]
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_route_table_association.subnetAssociationAviSeMgt[1]
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_route_table_association.subnetAssociationAviSeMgt[1]"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_route_table_association.subnetAssociationAviVs[1]
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_route_table_association.subnetAssociationAviVs[1]
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviVs[1]": visit complete
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_route_table_association.subnetAssociationAviSeMgt[0]"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_route_table_association.subnetAssociationAviSeMgt[2]
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_route_table_association.subnetAssociationAviSeMgt[2]
2021/02/13 15:00:05 [DEBUG] refresh: aws_route_table_association.subnetAssociationAviSeMgt[2]: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_route_table_association.subnetAssociationAviSeMgt[2]
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_route_table_association.subnetAssociationAviSeMgt[2]
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_route_table_association.subnetAssociationBackend[0]
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_route_table_association.subnetAssociationBackend[0]
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationBackend[0]": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "root"
2021/02/13 15:00:05 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2021/02/13 15:00:05 [TRACE] vertex "root": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationBackend": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationBackend": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationBackend (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationBackend (expand)": visit complete
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_route_table_association.subnetAssociationAviSeMgt[2]"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_route_table_association.subnetAssociationAviSeMgt[1]
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_route_table_association.subnetAssociationAviSeMgt[1]
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviSeMgt[1]": visit complete
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_route_table_association.subnetAssociationAviVs[0]
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_route_table_association.subnetAssociationAviVs[0]
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviVs[0]": visit complete
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_route_table_association.subnetAssociationAviVs[2]
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_route_table_association.subnetAssociationAviVs[2]
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviVs[2]": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "root"
2021/02/13 15:00:05 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2021/02/13 15:00:05 [TRACE] vertex "root": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviVs": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviVs": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviVs (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviVs (expand)": visit complete
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_route_table_association.subnetAssociationAviSeMgt[0]
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_route_table_association.subnetAssociationAviSeMgt[0]
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviSeMgt[0]": visit complete
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_route_table_association.subnetAssociationAviSeMgt[2]
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_route_table_association.subnetAssociationAviSeMgt[2]
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviSeMgt[2]": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "root"
2021/02/13 15:00:05 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2021/02/13 15:00:05 [TRACE] vertex "root": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviSeMgt": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviSeMgt": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviSeMgt (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_route_table_association.subnetAssociationAviSeMgt (expand)": visit complete
2021-02-13T15:00:05.640Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:05 [DEBUG] aws_ami - adding block device mapping: map[device_name:/dev/sda1 ebs:map[delete_on_termination:true encrypted:false iops:0 snapshot_id:snap-0553c8eaf383aaaf0 volume_size:8 volume_type:gp2] virtual_name:]
2021-02-13T15:00:05.640Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:05 [DEBUG] aws_ami - adding block device mapping: map[device_name:/dev/sdb virtual_name:ephemeral0]
2021-02-13T15:00:05.640Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:05 [DEBUG] aws_ami - adding block device mapping: map[device_name:/dev/sdc virtual_name:ephemeral1]
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for data.aws_ami.ubuntuFocal
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for data.aws_ami.ubuntuFocal
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for data.aws_ami.ubuntuFocal
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.ubuntuFocal": visit complete
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.ubuntuFocal": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.ubuntuFocal": visit complete
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.ubuntuFocal (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.ubuntuFocal (expand)": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "output.ubuntuFocal"
2021/02/13 15:00:05 [TRACE] vertex "output.ubuntuFocal": starting visit (*terraform.NodeApplyableOutput)
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_instance.jump (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.jump (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.jump (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.jump (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_instance.jump"
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.jump": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.jump": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_instance.jump as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_instance.jump - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_instance.jump", instance aws_instance.jump
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.jump"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "self"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.privateKey"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.jump"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "self"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.privateKey"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.jump"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_instance.jump" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.jump": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_instance.jump"
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.jump": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_instance.jump
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_instance.jump
2021/02/13 15:00:05 [DEBUG] refresh: aws_instance.jump: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_instance.jump
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_instance.jump
2021/02/13 15:00:05 [TRACE] ExecuteWriteOutput: Saving Create change for output.ubuntuFocal in changeset
2021/02/13 15:00:05 [TRACE] EvalWriteOutput: Saving value for output.ubuntuFocal in state
2021/02/13 15:00:05 [TRACE] ExecuteWriteOutput: Saving Create change for output.ubuntuFocal in changeset
2021/02/13 15:00:05 [TRACE] EvalWriteOutput: Saving value for output.ubuntuFocal in state
2021/02/13 15:00:05 [TRACE] vertex "output.ubuntuFocal": visit complete
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_instance.jump"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.jump, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .vpc_security_group_ids: planned value cty.UnknownVal(cty.Set(cty.String)) does not match config value cty.SetVal([]cty.Value{cty.UnknownVal(cty.String)})
      - .user_data: planned value cty.StringVal("b7c1b84cf87baa8a7d9edf24cbf157a6835a31ad") does not match config value cty.StringVal("#!/bin/bash\n#\n# Tested for ubbuntu 20.04\n#\nsudo apt-get update\nsudo apt-get -y install python\nsudo apt install -y python3-pip\nsudo apt install -y jq\npip3 install ansible==2.9.12\npip3 install avisdk==18.2.9\npip3 install dnspython\npip3 install boto3\npip3 install botocore\nsudo -u ubuntu ansible-galaxy install -f avinetworks.avisdk\nsudo mkdir -p /opt/ansible/inventory\nsudo tee /opt/ansible/inventory/aws_ec2.yaml > /dev/null <<EOT\n---\nplugin: aws_ec2\nkeyed_groups:\n  - key: tags\n    prefix: aws\nEOT\nsudo mkdir -p /etc/ansible\nsudo tee /etc/ansible/ansible.cfg > /dev/null <<EOT\n[defaults]\ninventory      = /opt/ansible/inventory/aws_ec2.yaml\nprivate_key_file = /home/ubuntu/.ssh/cloudKey\nhost_key_checking = False\nhost_key_auto_add = True\nEOT\necho \"cloud init done\" | tee /tmp/cloudInitDone.log\n")
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_instance.jump
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_instance.jump
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.jump": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.jump": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.jump": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.jump (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.jump (expand)": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "output.destroy"
2021/02/13 15:00:05 [TRACE] vertex "output.destroy": starting visit (*terraform.NodeApplyableOutput)
2021/02/13 15:00:05 [TRACE] ExecuteWriteOutput: Saving Create change for output.destroy in changeset
2021/02/13 15:00:05 [TRACE] EvalWriteOutput: Removing output.destroy from state (it is now null)
2021/02/13 15:00:05 [TRACE] vertex "output.destroy": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "output.jumpPublicIp"
2021/02/13 15:00:05 [TRACE] vertex "output.jumpPublicIp": starting visit (*terraform.NodeApplyableOutput)
2021/02/13 15:00:05 [TRACE] ExecuteWriteOutput: Saving Create change for output.jumpPublicIp in changeset
2021/02/13 15:00:05 [TRACE] EvalWriteOutput: Removing output.jumpPublicIp from state (it is now null)
2021/02/13 15:00:05 [TRACE] vertex "output.jumpPublicIp": visit complete
2021-02-13T15:00:05.725Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:05 [DEBUG] aws_ami - adding block device mapping: map[device_name:/dev/sda1 ebs:map[delete_on_termination:true encrypted:false iops:0 snapshot_id:snap-08cad31ba3e410b33 volume_size:8 volume_type:gp2] virtual_name:]
2021-02-13T15:00:05.725Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:05 [DEBUG] aws_ami - adding block device mapping: map[device_name:/dev/sdb virtual_name:ephemeral0]
2021-02-13T15:00:05.725Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:05 [DEBUG] aws_ami - adding block device mapping: map[device_name:/dev/sdc virtual_name:ephemeral1]
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for data.aws_ami.ubuntuBionic
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for data.aws_ami.ubuntuBionic
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for data.aws_ami.ubuntuBionic
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.ubuntuBionic": visit complete
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.ubuntuBionic": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.ubuntuBionic": visit complete
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.ubuntuBionic (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.ubuntuBionic (expand)": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_instance.backend (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.backend (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.backend (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.backend (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "output.ubuntuBionic"
2021/02/13 15:00:05 [TRACE] vertex "output.ubuntuBionic": starting visit (*terraform.NodeApplyableOutput)
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_instance.backend"
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.backend": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_launch_template.templateAsg (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_launch_template.templateAsg (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_launch_template.templateAsg (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_launch_template.templateAsg (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_launch_template.templateAsg"
2021/02/13 15:00:05 [TRACE] vertex "aws_launch_template.templateAsg": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_launch_template.templateAsg": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_launch_template.templateAsg as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_launch_template.templateAsg - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_launch_template.templateAsg", instance aws_launch_template.templateAsg
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.backend"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.autoScalingGroupUserdata"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_launch_template.templateAsg" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_launch_template.templateAsg": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.backend": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_launch_template.templateAsg"
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_instance.backend[0] as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_instance.backend[1] as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_instance.backend[2] as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_instance.backend[0] - *terraform.NodePlannableResourceInstance
  aws_instance.backend[1] - *terraform.NodePlannableResourceInstance
  aws_instance.backend[2] - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_instance.backend[0]", instance aws_instance.backend[0]
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_instance.backend[1]", instance aws_instance.backend[1]
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_instance.backend[2]", instance aws_instance.backend[2]
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.backend"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "aws_subnet.subnetBackend"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_instance.backend[0]" references: []
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "aws_subnet.subnetBackend"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.backend"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_instance.backend[1]" references: []
2021/02/13 15:00:05 [TRACE] vertex "aws_launch_template.templateAsg": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.backend"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "aws_subnet.subnetBackend"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_instance.backend[2]" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  aws_instance.backend[0] - *terraform.NodePlannableResourceInstance
  aws_instance.backend[1] - *terraform.NodePlannableResourceInstance
  aws_instance.backend[2] - *terraform.NodePlannableResourceInstance
  root - terraform.graphNodeRoot
    aws_instance.backend[0] - *terraform.NodePlannableResourceInstance
    aws_instance.backend[1] - *terraform.NodePlannableResourceInstance
    aws_instance.backend[2] - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.backend": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_instance.backend[1]"
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.backend[1]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_instance.backend[1]
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_instance.backend[1]
2021/02/13 15:00:05 [DEBUG] refresh: aws_instance.backend[1]: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_instance.backend[1]
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_instance.backend[1]
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_launch_template.templateAsg
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_launch_template.templateAsg
2021/02/13 15:00:05 [DEBUG] refresh: aws_launch_template.templateAsg: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_launch_template.templateAsg
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_launch_template.templateAsg
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_instance.backend[2]"
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.backend[2]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_instance.backend[2]
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_instance.backend[2]
2021/02/13 15:00:05 [DEBUG] refresh: aws_instance.backend[2]: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_instance.backend[2]
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_instance.backend[2]
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_instance.backend[0]"
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.backend[0]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] ExecuteWriteOutput: Saving Create change for output.ubuntuBionic in changeset
2021/02/13 15:00:05 [TRACE] EvalWriteOutput: Saving value for output.ubuntuBionic in state
2021/02/13 15:00:05 [TRACE] ExecuteWriteOutput: Saving Create change for output.ubuntuBionic in changeset
2021/02/13 15:00:05 [TRACE] EvalWriteOutput: Saving value for output.ubuntuBionic in state
2021/02/13 15:00:05 [TRACE] vertex "output.ubuntuBionic": visit complete
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_instance.backend[0]
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_instance.backend[0]
2021/02/13 15:00:05 [DEBUG] refresh: aws_instance.backend[0]: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_instance.backend[0]
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_instance.backend[0]
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_instance.backend[1]"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_instance.backend[2]"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_launch_template.templateAsg"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_instance.backend[0]"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.backend[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .user_data: planned value cty.StringVal("09485d0ada6347ce23424f55668afe41289c05f8") does not match config value cty.StringVal("#!/bin/bash\nsudo apt update\nsudo apt install -y apache2\nsudo apt install -y docker.io\nsudo usermod -a -G docker ubuntu\nsudo mv /var/www/html/index.html /var/www/html/index.html.old\necho -e \"Hello World - cloud is Aws - Node is $(hostname)\" | sudo tee /var/www/html/index.html\ngit clone https://github.com/tacobayle/demovip_server\ncd $(basename https://github.com/tacobayle/demovip_server)\nsudo docker build . --tag demovip_server:latest\nifPrimary=`ip route | grep default | sed -e \"s/^.*dev.//\" -e \"s/.proto.*//\"`\nip=$(ip -f inet addr show $ifPrimary | awk '/inet / {print $2}' | awk -F/ '{print $1}')\nsudo docker run -d -p $ip:8080:80 demovip_server:latest\necho \"cloud init done\" | tee /tmp/cloudInitDone.log\n# while true\n# do\n# echo -e \"HTTP/1.1 200 OK\\n\\nHello World - cloud is AWS - Node is $(hostname)\" | nc -N -l -p 80\n# done\n")
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .vpc_security_group_ids: planned value cty.UnknownVal(cty.Set(cty.String)) does not match config value cty.SetVal([]cty.Value{cty.UnknownVal(cty.String)})
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_instance.backend[1]
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_instance.backend[1]
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.backend[1]": visit complete
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.backend[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .user_data: planned value cty.StringVal("09485d0ada6347ce23424f55668afe41289c05f8") does not match config value cty.StringVal("#!/bin/bash\nsudo apt update\nsudo apt install -y apache2\nsudo apt install -y docker.io\nsudo usermod -a -G docker ubuntu\nsudo mv /var/www/html/index.html /var/www/html/index.html.old\necho -e \"Hello World - cloud is Aws - Node is $(hostname)\" | sudo tee /var/www/html/index.html\ngit clone https://github.com/tacobayle/demovip_server\ncd $(basename https://github.com/tacobayle/demovip_server)\nsudo docker build . --tag demovip_server:latest\nifPrimary=`ip route | grep default | sed -e \"s/^.*dev.//\" -e \"s/.proto.*//\"`\nip=$(ip -f inet addr show $ifPrimary | awk '/inet / {print $2}' | awk -F/ '{print $1}')\nsudo docker run -d -p $ip:8080:80 demovip_server:latest\necho \"cloud init done\" | tee /tmp/cloudInitDone.log\n# while true\n# do\n# echo -e \"HTTP/1.1 200 OK\\n\\nHello World - cloud is AWS - Node is $(hostname)\" | nc -N -l -p 80\n# done\n")
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .vpc_security_group_ids: planned value cty.UnknownVal(cty.Set(cty.String)) does not match config value cty.SetVal([]cty.Value{cty.UnknownVal(cty.String)})
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_instance.backend[2]
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_instance.backend[2]
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.backend[2]": visit complete
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.backend[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .vpc_security_group_ids: planned value cty.UnknownVal(cty.Set(cty.String)) does not match config value cty.SetVal([]cty.Value{cty.UnknownVal(cty.String)})
      - .user_data: planned value cty.StringVal("09485d0ada6347ce23424f55668afe41289c05f8") does not match config value cty.StringVal("#!/bin/bash\nsudo apt update\nsudo apt install -y apache2\nsudo apt install -y docker.io\nsudo usermod -a -G docker ubuntu\nsudo mv /var/www/html/index.html /var/www/html/index.html.old\necho -e \"Hello World - cloud is Aws - Node is $(hostname)\" | sudo tee /var/www/html/index.html\ngit clone https://github.com/tacobayle/demovip_server\ncd $(basename https://github.com/tacobayle/demovip_server)\nsudo docker build . --tag demovip_server:latest\nifPrimary=`ip route | grep default | sed -e \"s/^.*dev.//\" -e \"s/.proto.*//\"`\nip=$(ip -f inet addr show $ifPrimary | awk '/inet / {print $2}' | awk -F/ '{print $1}')\nsudo docker run -d -p $ip:8080:80 demovip_server:latest\necho \"cloud init done\" | tee /tmp/cloudInitDone.log\n# while true\n# do\n# echo -e \"HTTP/1.1 200 OK\\n\\nHello World - cloud is AWS - Node is $(hostname)\" | nc -N -l -p 80\n# done\n")
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_instance.backend[0]
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_instance.backend[0]
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.backend[0]": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "root"
2021/02/13 15:00:05 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2021/02/13 15:00:05 [TRACE] vertex "root": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.backend": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.backend": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.backend (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.backend (expand)": visit complete
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_launch_template.templateAsg, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .vpc_security_group_ids: planned value cty.UnknownVal(cty.Set(cty.String)) does not match config value cty.SetVal([]cty.Value{cty.UnknownVal(cty.String)})
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_launch_template.templateAsg
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_launch_template.templateAsg
2021/02/13 15:00:05 [TRACE] vertex "aws_launch_template.templateAsg": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_launch_template.templateAsg": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_launch_template.templateAsg": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_launch_template.templateAsg (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_launch_template.templateAsg (expand)": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_autoscaling_group.autoScalingGroup (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_autoscaling_group.autoScalingGroup (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_autoscaling_group.autoScalingGroup (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_autoscaling_group.autoScalingGroup (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_autoscaling_group.autoScalingGroup"
2021/02/13 15:00:05 [TRACE] vertex "aws_autoscaling_group.autoScalingGroup": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_autoscaling_group.autoScalingGroup": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_autoscaling_group.autoScalingGroup as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_autoscaling_group.autoScalingGroup", instance aws_autoscaling_group.autoScalingGroup
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_autoscaling_group.autoScalingGroup" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_autoscaling_group.autoScalingGroup": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_autoscaling_group.autoScalingGroup"
2021/02/13 15:00:05 [TRACE] vertex "aws_autoscaling_group.autoScalingGroup": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_autoscaling_group.autoScalingGroup
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_autoscaling_group.autoScalingGroup
2021/02/13 15:00:05 [DEBUG] refresh: aws_autoscaling_group.autoScalingGroup: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_autoscaling_group.autoScalingGroup
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_autoscaling_group.autoScalingGroup
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_autoscaling_group.autoScalingGroup"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_autoscaling_group.autoScalingGroup, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_capacity_timeout: planned value cty.StringVal("10m") does not match config value cty.NullVal(cty.String)
      - .health_check_grace_period: planned value cty.NumberIntVal(300) does not match config value cty.NullVal(cty.Number)
      - .vpc_zone_identifier: planned value cty.UnknownVal(cty.Set(cty.String)) does not match config value cty.SetVal([]cty.Value{cty.UnknownVal(cty.String), cty.UnknownVal(cty.String), cty.UnknownVal(cty.String)})
      - .force_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .protect_from_scale_in: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .metrics_granularity: planned value cty.StringVal("1Minute") does not match config value cty.NullVal(cty.String)
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_autoscaling_group.autoScalingGroup
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_autoscaling_group.autoScalingGroup
2021/02/13 15:00:05 [TRACE] vertex "aws_autoscaling_group.autoScalingGroup": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_autoscaling_group.autoScalingGroup": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_autoscaling_group.autoScalingGroup": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_autoscaling_group.autoScalingGroup (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_autoscaling_group.autoScalingGroup (expand)": visit complete
2021-02-13T15:00:05.809Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:05 [DEBUG] aws_ami - adding block device mapping: map[device_name:/dev/sda1 ebs:map[delete_on_termination:true encrypted:false iops:0 snapshot_id:snap-0918610b26d9b9d88 volume_size:128 volume_type:gp2] virtual_name:]
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for data.aws_ami.aviAmi
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for data.aws_ami.aviAmi
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for data.aws_ami.aviAmi
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.aviAmi": visit complete
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.aviAmi": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.aviAmi": visit complete
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.aviAmi (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "data.aws_ami.aviAmi (expand)": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "output.aviAmi"
2021/02/13 15:00:05 [TRACE] vertex "output.aviAmi": starting visit (*terraform.NodeApplyableOutput)
2021/02/13 15:00:05 [TRACE] ExecuteWriteOutput: Saving Create change for output.aviAmi in changeset
2021/02/13 15:00:05 [TRACE] EvalWriteOutput: Saving value for output.aviAmi in state
2021/02/13 15:00:05 [TRACE] ExecuteWriteOutput: Saving Create change for output.aviAmi in changeset
2021/02/13 15:00:05 [TRACE] EvalWriteOutput: Saving value for output.aviAmi in state
2021/02/13 15:00:05 [TRACE] vertex "output.aviAmi": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_instance.aviCtrl (expand)"
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.aviCtrl (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.aviCtrl (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.aviCtrl (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_instance.aviCtrl"
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.aviCtrl": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.aviCtrl": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding aws_instance.aviCtrl[0] as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_instance.aviCtrl[0] - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "aws_instance.aviCtrl[0]", instance aws_instance.aviCtrl[0]
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.controller"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.controller"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "aws_instance.aviCtrl[0]" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.aviCtrl": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "aws_instance.aviCtrl[0]"
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.aviCtrl[0]": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for aws_instance.aviCtrl[0]
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for aws_instance.aviCtrl[0]
2021/02/13 15:00:05 [DEBUG] refresh: aws_instance.aviCtrl[0]: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for aws_instance.aviCtrl[0]
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for aws_instance.aviCtrl[0]
2021/02/13 15:00:05 [TRACE] Re-validating config for "aws_instance.aviCtrl[0]"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.aviCtrl[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .vpc_security_group_ids: planned value cty.UnknownVal(cty.Set(cty.String)) does not match config value cty.SetVal([]cty.Value{cty.UnknownVal(cty.String)})
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for aws_instance.aviCtrl[0]
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for aws_instance.aviCtrl[0]
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.aviCtrl[0]": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.aviCtrl": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.aviCtrl": visit complete
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.aviCtrl (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "aws_instance.aviCtrl (expand)": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "output.aviCtrlPublicIp"
2021/02/13 15:00:05 [TRACE] vertex "output.aviCtrlPublicIp": starting visit (*terraform.NodeApplyableOutput)
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "null_resource.foo7 (expand)"
2021/02/13 15:00:05 [TRACE] vertex "null_resource.foo7 (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "null_resource.foo7 (expand)": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] vertex "null_resource.foo7 (expand)": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "null_resource.foo7"
2021/02/13 15:00:05 [TRACE] vertex "null_resource.foo7": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:05 [TRACE] vertex "null_resource.foo7": expanding dynamic subgraph
2021/02/13 15:00:05 [TRACE] ExecuteWriteOutput: Saving Create change for output.aviCtrlPublicIp in changeset
2021/02/13 15:00:05 [TRACE] EvalWriteOutput: Saving value for output.aviCtrlPublicIp in state
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:05 [TRACE] ResourceCountTransformer: adding null_resource.foo7 as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  null_resource.foo7 - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:05 [DEBUG] Resource instance state not found for node "null_resource.foo7", instance null_resource.foo7
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "aws_instance.jump"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.privateKey"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.jump"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.privateKey"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.jump"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.privateKey"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.privateKey"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.jump"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.privateKey"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.ansible"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.jump"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.privateKey"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.privateKey"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.ansible"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.ansible"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.ansible"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.avi_username"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.avi_password"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.controller"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.controller"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "aws_instance.aviCtrl"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "aws_instance.aviCtrl"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "var.aws"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "aws_subnet.subnetAviVs"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "aws_subnet.subnetAviSeMgt"
2021/02/13 15:00:05 [INFO] ReferenceTransformer: reference not found: "aws_instance.backend"
2021/02/13 15:00:05 [DEBUG] ReferenceTransformer: "null_resource.foo7" references: []
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:05 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:05 [TRACE] vertex "null_resource.foo7": entering dynamic subgraph
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "null_resource.foo7"
2021/02/13 15:00:05 [TRACE] vertex "null_resource.foo7": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: reading state for null_resource.foo7
2021/02/13 15:00:05 [TRACE] ReadResourceInstanceState: no state present for null_resource.foo7
2021/02/13 15:00:05 [DEBUG] refresh: null_resource.foo7: no state, so not refreshing
2021/02/13 15:00:05 [TRACE] EvalWriteState: using RefreshState for null_resource.foo7
2021/02/13 15:00:05 [TRACE] EvalWriteState: removing state object for null_resource.foo7
2021/02/13 15:00:05 [TRACE] Re-validating config for "null_resource.foo7"
2021/02/13 15:00:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:05 [TRACE] vertex "output.aviCtrlPublicIp": visit complete
2021/02/13 15:00:05 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:05 [TRACE] EvalWriteState: writing current state object for null_resource.foo7
2021/02/13 15:00:05 [TRACE] EvalWriteDiff: recorded Create change for null_resource.foo7
2021/02/13 15:00:05 [TRACE] vertex "null_resource.foo7": visit complete
2021/02/13 15:00:05 [TRACE] vertex "null_resource.foo7": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "null_resource.foo7": visit complete
2021/02/13 15:00:05 [TRACE] vertex "null_resource.foo7 (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:05 [TRACE] vertex "null_resource.foo7 (expand)": visit complete
2021/02/13 15:00:05 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/null\"] (close)"
2021/02/13 15:00:05 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/null\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/13 15:00:05 [TRACE] GRPCProvider: Close
2021-02-13T15:00:05.819Z [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-13T15:00:05.819Z [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/null/3.0.0/linux_amd64/terraform-provider-null_v3.0.0_x5 pid=9230
2021-02-13T15:00:05.819Z [DEBUG] plugin: plugin exited
2021/02/13 15:00:05 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/null\"] (close)": visit complete
2021/02/13 15:00:07 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/13 15:00:07 [TRACE] EvalWriteState: using RefreshState for data.aws_route53_zone.awsAviDemo
2021/02/13 15:00:07 [TRACE] EvalWriteState: writing current state object for data.aws_route53_zone.awsAviDemo
2021/02/13 15:00:07 [TRACE] EvalWriteState: writing current state object for data.aws_route53_zone.awsAviDemo
2021/02/13 15:00:07 [TRACE] vertex "data.aws_route53_zone.awsAviDemo": visit complete
2021/02/13 15:00:07 [TRACE] vertex "data.aws_route53_zone.awsAviDemo": dynamic subgraph completed successfully
2021/02/13 15:00:07 [TRACE] vertex "data.aws_route53_zone.awsAviDemo": visit complete
2021/02/13 15:00:07 [TRACE] vertex "data.aws_route53_zone.awsAviDemo (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:07 [TRACE] vertex "data.aws_route53_zone.awsAviDemo (expand)": visit complete
2021/02/13 15:00:07 [TRACE] dag/walk: visiting "aws_route53_record.jump (expand)"
2021/02/13 15:00:07 [TRACE] vertex "aws_route53_record.jump (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:07 [TRACE] vertex "aws_route53_record.jump (expand)": expanding dynamic subgraph
2021/02/13 15:00:07 [TRACE] vertex "aws_route53_record.jump (expand)": entering dynamic subgraph
2021/02/13 15:00:07 [TRACE] dag/walk: visiting "aws_route53_record.jump"
2021/02/13 15:00:07 [TRACE] vertex "aws_route53_record.jump": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:07 [TRACE] vertex "aws_route53_record.jump": expanding dynamic subgraph
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:07 [TRACE] ResourceCountTransformer: adding aws_route53_record.jump as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_route53_record.jump - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:07 [DEBUG] Resource instance state not found for node "aws_route53_record.jump", instance aws_route53_record.jump
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:07 [TRACE] dag/walk: visiting "aws_route53_record.aviCtrl (expand)"
2021/02/13 15:00:07 [TRACE] vertex "aws_route53_record.aviCtrl (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/13 15:00:07 [TRACE] vertex "aws_route53_record.aviCtrl (expand)": expanding dynamic subgraph
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "var.jump"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "var.aws"
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_route53_record.jump" references: []
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:07 [TRACE] vertex "aws_route53_record.jump": entering dynamic subgraph
2021/02/13 15:00:07 [TRACE] dag/walk: visiting "aws_route53_record.jump"
2021/02/13 15:00:07 [TRACE] vertex "aws_route53_record.jump": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:07 [TRACE] ReadResourceInstanceState: reading state for aws_route53_record.jump
2021/02/13 15:00:07 [TRACE] ReadResourceInstanceState: no state present for aws_route53_record.jump
2021/02/13 15:00:07 [DEBUG] refresh: aws_route53_record.jump: no state, so not refreshing
2021/02/13 15:00:07 [TRACE] EvalWriteState: using RefreshState for aws_route53_record.jump
2021/02/13 15:00:07 [TRACE] EvalWriteState: removing state object for aws_route53_record.jump
2021/02/13 15:00:07 [TRACE] vertex "aws_route53_record.aviCtrl (expand)": entering dynamic subgraph
2021/02/13 15:00:07 [TRACE] dag/walk: visiting "aws_route53_record.aviCtrl"
2021/02/13 15:00:07 [TRACE] vertex "aws_route53_record.aviCtrl": starting visit (*terraform.NodePlannableResource)
2021/02/13 15:00:07 [TRACE] vertex "aws_route53_record.aviCtrl": expanding dynamic subgraph
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/13 15:00:07 [TRACE] ResourceCountTransformer: adding aws_route53_record.aviCtrl as *terraform.NodePlannableResourceInstance
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_route53_record.aviCtrl - *terraform.NodePlannableResourceInstance
  ------
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:07 [DEBUG] Resource instance state not found for node "aws_route53_record.aviCtrl", instance aws_route53_record.aviCtrl
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "var.controller"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "var.aws"
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_route53_record.aviCtrl" references: []
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/13 15:00:07 [TRACE] vertex "aws_route53_record.aviCtrl": entering dynamic subgraph
2021/02/13 15:00:07 [TRACE] dag/walk: visiting "aws_route53_record.aviCtrl"
2021/02/13 15:00:07 [TRACE] vertex "aws_route53_record.aviCtrl": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/13 15:00:07 [TRACE] ReadResourceInstanceState: reading state for aws_route53_record.aviCtrl
2021/02/13 15:00:07 [TRACE] ReadResourceInstanceState: no state present for aws_route53_record.aviCtrl
2021/02/13 15:00:07 [DEBUG] refresh: aws_route53_record.aviCtrl: no state, so not refreshing
2021/02/13 15:00:07 [TRACE] EvalWriteState: using RefreshState for aws_route53_record.aviCtrl
2021/02/13 15:00:07 [TRACE] EvalWriteState: removing state object for aws_route53_record.aviCtrl
2021/02/13 15:00:07 [TRACE] Re-validating config for "aws_route53_record.jump"
2021/02/13 15:00:07 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:07 [TRACE] Re-validating config for "aws_route53_record.aviCtrl"
2021/02/13 15:00:07 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:07 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:07 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:07 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_route53_record.jump, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .records: planned value cty.UnknownVal(cty.Set(cty.String)) does not match config value cty.SetVal([]cty.Value{cty.UnknownVal(cty.String)})
2021/02/13 15:00:07 [TRACE] EvalWriteState: writing current state object for aws_route53_record.jump
2021/02/13 15:00:07 [TRACE] EvalWriteDiff: recorded Create change for aws_route53_record.jump
2021/02/13 15:00:07 [TRACE] vertex "aws_route53_record.jump": visit complete
2021/02/13 15:00:07 [TRACE] vertex "aws_route53_record.jump": dynamic subgraph completed successfully
2021/02/13 15:00:07 [TRACE] vertex "aws_route53_record.jump": visit complete
2021/02/13 15:00:07 [TRACE] vertex "aws_route53_record.jump (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:07 [TRACE] vertex "aws_route53_record.jump (expand)": visit complete
2021/02/13 15:00:07 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_route53_record.aviCtrl, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .records: planned value cty.UnknownVal(cty.Set(cty.String)) does not match config value cty.SetVal([]cty.Value{cty.UnknownVal(cty.String)})
2021/02/13 15:00:07 [TRACE] EvalWriteState: writing current state object for aws_route53_record.aviCtrl
2021/02/13 15:00:07 [TRACE] EvalWriteDiff: recorded Create change for aws_route53_record.aviCtrl
2021/02/13 15:00:07 [TRACE] vertex "aws_route53_record.aviCtrl": visit complete
2021/02/13 15:00:07 [TRACE] vertex "aws_route53_record.aviCtrl": dynamic subgraph completed successfully
2021/02/13 15:00:07 [TRACE] vertex "aws_route53_record.aviCtrl": visit complete
2021/02/13 15:00:07 [TRACE] vertex "aws_route53_record.aviCtrl (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:07 [TRACE] vertex "aws_route53_record.aviCtrl (expand)": visit complete
2021/02/13 15:00:07 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/aws\"] (close)"
2021/02/13 15:00:07 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/13 15:00:07 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/13 15:00:07 [TRACE] GRPCProvider: Close
2021/02/13 15:00:07 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/13 15:00:07 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-13T15:00:07.601Z [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-13T15:00:07.601Z [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.22.0/linux_amd64/terraform-provider-aws_v3.22.0_x5 pid=9277
2021-02-13T15:00:07.601Z [DEBUG] plugin: plugin exited
2021/02/13 15:00:07 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)": visit complete
2021/02/13 15:00:07 [TRACE] dag/walk: visiting "root"
2021/02/13 15:00:07 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/13 15:00:07 [TRACE] vertex "root": visit complete
2021/02/13 15:00:07 [INFO] backend/local: apply calling Apply
2021/02/13 15:00:07 [INFO] terraform: building graph: GraphTypeApply
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/13 15:00:07 [TRACE] ConfigTransformer: Starting for path: 
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
  aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
  aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
  aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
  aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
  aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
  aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
  data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
  data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
  data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
  data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
  data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
  data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
  data.template_file.jump (expand) - *terraform.nodeExpandApplyableResource
  null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
  aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
  aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
  aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
  aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
  aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
  aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
  data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
  data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
  data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
  data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
  data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
  data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
  data.template_file.jump (expand) - *terraform.nodeExpandApplyableResource
  null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/13 15:00:07 [TRACE] OutputTransformer: adding jumpPublicIp as *terraform.NodeApplyableOutput
2021/02/13 15:00:07 [TRACE] OutputTransformer: adding aviCtrlPublicIp as *terraform.NodeApplyableOutput
2021/02/13 15:00:07 [TRACE] OutputTransformer: adding destroy as *terraform.NodeApplyableOutput
2021/02/13 15:00:07 [TRACE] OutputTransformer: adding az as *terraform.NodeApplyableOutput
2021/02/13 15:00:07 [TRACE] OutputTransformer: adding aviAmi as *terraform.NodeApplyableOutput
2021/02/13 15:00:07 [TRACE] OutputTransformer: adding ubuntuBionic as *terraform.NodeApplyableOutput
2021/02/13 15:00:07 [TRACE] OutputTransformer: adding ubuntuFocal as *terraform.NodeApplyableOutput
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
  aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
  aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
  aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
  aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
  aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
  aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
  data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
  data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
  data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
  data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
  data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
  data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
  data.template_file.jump (expand) - *terraform.nodeExpandApplyableResource
  null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
  output.aviAmi - *terraform.NodeApplyableOutput
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
  output.az - *terraform.NodeApplyableOutput
  output.destroy - *terraform.NodeApplyableOutput
  output.jumpPublicIp - *terraform.NodeApplyableOutput
  output.ubuntuBionic - *terraform.NodeApplyableOutput
  output.ubuntuFocal - *terraform.NodeApplyableOutput
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/02/13 15:00:07 [TRACE] DiffTransformer starting
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_key_pair.kpOpencart 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_key_pair.kpOpencart will be represented by aws_key_pair.kpOpencart
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_iam_role.Ansible-Refined-Role 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_iam_role.Ansible-Refined-Role will be represented by aws_iam_role.Ansible-Refined-Role
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_iam_policy.AviController-SQS-Policy 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_iam_policy.AviController-SQS-Policy will be represented by aws_iam_policy.AviController-SQS-Policy
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_iam_policy.AviController-R53-Policy 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_iam_policy.AviController-R53-Policy will be represented by aws_iam_policy.AviController-R53-Policy
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_iam_policy.AviController-ASG-Notification 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_iam_policy.AviController-ASG-Notification will be represented by aws_iam_policy.AviController-ASG-Notification
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_iam_policy.AviController-SNS-Policy 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_iam_policy.AviController-SNS-Policy will be represented by aws_iam_policy.AviController-SNS-Policy
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_iam_policy.AviController-AutoScalingGroup-Policy 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_iam_policy.AviController-AutoScalingGroup-Policy will be represented by aws_iam_policy.AviController-AutoScalingGroup-Policy
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_iam_role.AviController-Refined-Role 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_iam_role.AviController-Refined-Role will be represented by aws_iam_role.AviController-Refined-Role
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_key_pair.kpMysql 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_key_pair.kpMysql will be represented by aws_key_pair.kpMysql
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_iam_policy.ansible-EC2-Policy 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_iam_policy.ansible-EC2-Policy will be represented by aws_iam_policy.ansible-EC2-Policy
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_key_pair.kpJump 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_key_pair.kpJump will be represented by aws_key_pair.kpJump
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_iam_policy.AviController-KMS-Policy 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_iam_policy.AviController-KMS-Policy will be represented by aws_iam_policy.AviController-KMS-Policy
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_iam_policy.AviController-IAM-Policy 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_iam_policy.AviController-IAM-Policy will be represented by aws_iam_policy.AviController-IAM-Policy
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_key_pair.kpAvi 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_key_pair.kpAvi will be represented by aws_key_pair.kpAvi
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_iam_policy.AviController-EC2-Policy 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_iam_policy.AviController-EC2-Policy will be represented by aws_iam_policy.AviController-EC2-Policy
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_vpc.vpc[0] 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_vpc.vpc[0] will be represented by aws_vpc.vpc[0]
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_iam_role.vmimport 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_iam_role.vmimport will be represented by aws_iam_role.vmimport
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_key_pair.kpBackend 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_key_pair.kpBackend will be represented by aws_key_pair.kpBackend
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_iam_instance_profile.Ansible-Instance-Profile 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_iam_instance_profile.Ansible-Instance-Profile will be represented by aws_iam_instance_profile.Ansible-Instance-Profile
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_iam_instance_profile.AviController-Instance-Profile 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_iam_instance_profile.AviController-Instance-Profile will be represented by aws_iam_instance_profile.AviController-Instance-Profile
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_iam_role_policy_attachment.avi-attach2 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_iam_role_policy_attachment.avi-attach2 will be represented by aws_iam_role_policy_attachment.avi-attach2
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_iam_role_policy_attachment.avi-attach4 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_iam_role_policy_attachment.avi-attach4 will be represented by aws_iam_role_policy_attachment.avi-attach4
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_iam_role_policy_attachment.avi-attach6 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_iam_role_policy_attachment.avi-attach6 will be represented by aws_iam_role_policy_attachment.avi-attach6
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_iam_role_policy_attachment.avi-attach5 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_iam_role_policy_attachment.avi-attach5 will be represented by aws_iam_role_policy_attachment.avi-attach5
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_iam_role_policy_attachment.avi-attach7 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_iam_role_policy_attachment.avi-attach7 will be represented by aws_iam_role_policy_attachment.avi-attach7
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_iam_role_policy_attachment.avi-attach1 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_iam_role_policy_attachment.avi-attach1 will be represented by aws_iam_role_policy_attachment.avi-attach1
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_iam_role_policy_attachment.ansible-attach1 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_iam_role_policy_attachment.ansible-attach1 will be represented by aws_iam_role_policy_attachment.ansible-attach1
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_iam_role_policy_attachment.avi-attach3 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_iam_role_policy_attachment.avi-attach3 will be represented by aws_iam_role_policy_attachment.avi-attach3
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_iam_role_policy_attachment.avi-attach8 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_iam_role_policy_attachment.avi-attach8 will be represented by aws_iam_role_policy_attachment.avi-attach8
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_internet_gateway.internetGateway[0] 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_internet_gateway.internetGateway[0] will be represented by aws_internet_gateway.internetGateway[0]
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_subnet.subnetMysql 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_subnet.subnetMysql will be represented by aws_subnet.subnetMysql
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_security_group.sgAvi 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_security_group.sgAvi will be represented by aws_security_group.sgAvi
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_subnet.subnetMgt 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_subnet.subnetMgt will be represented by aws_subnet.subnetMgt
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_security_group.sgBackend 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_security_group.sgBackend will be represented by aws_security_group.sgBackend
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_iam_role_policy.vmimport 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_iam_role_policy.vmimport will be represented by aws_iam_role_policy.vmimport
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_security_group.sgOpencart 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_security_group.sgOpencart will be represented by aws_security_group.sgOpencart
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_security_group.sgJump 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_security_group.sgJump will be represented by aws_security_group.sgJump
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_eip.eipForNatGw 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_eip.eipForNatGw will be represented by aws_eip.eipForNatGw
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_security_group.sgMysql 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_security_group.sgMysql will be represented by aws_security_group.sgMysql
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_route_table.rt[0] 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_route_table.rt[0] will be represented by aws_route_table.rt[0]
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_nat_gateway.natGw 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_nat_gateway.natGw will be represented by aws_nat_gateway.natGw
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_route_table_association.subnetAssociationMgt 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_route_table_association.subnetAssociationMgt will be represented by aws_route_table_association.subnetAssociationMgt
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_route_table.rtPrivate[0] 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_route_table.rtPrivate[0] will be represented by aws_route_table.rtPrivate[0]
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_route_table_association.subnetAssociationMysql 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_route_table_association.subnetAssociationMysql will be represented by aws_route_table_association.subnetAssociationMysql
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_subnet.subnetAviVs[1] 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_subnet.subnetAviVs[1] will be represented by aws_subnet.subnetAviVs[1]
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_subnet.subnetBackend[1] 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_subnet.subnetBackend[1] will be represented by aws_subnet.subnetBackend[1]
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_subnet.subnetBackend[0] 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_subnet.subnetBackend[0] will be represented by aws_subnet.subnetBackend[0]
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_subnet.subnetAviVs[0] 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_subnet.subnetAviVs[0] will be represented by aws_subnet.subnetAviVs[0]
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_subnet.subnetBackend[2] 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_subnet.subnetBackend[2] will be represented by aws_subnet.subnetBackend[2]
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_subnet.subnetAviVs[2] 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_subnet.subnetAviVs[2] will be represented by aws_subnet.subnetAviVs[2]
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_subnet.subnetAviSeMgt[1] 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_subnet.subnetAviSeMgt[1] will be represented by aws_subnet.subnetAviSeMgt[1]
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_subnet.subnetAviSeMgt[2] 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_subnet.subnetAviSeMgt[2] will be represented by aws_subnet.subnetAviSeMgt[2]
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_subnet.subnetAviSeMgt[0] 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_subnet.subnetAviSeMgt[0] will be represented by aws_subnet.subnetAviSeMgt[0]
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_route_table_association.subnetAssociationBackend[2] 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_route_table_association.subnetAssociationBackend[2] will be represented by aws_route_table_association.subnetAssociationBackend[2]
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_route_table_association.subnetAssociationBackend[1] 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_route_table_association.subnetAssociationBackend[1] will be represented by aws_route_table_association.subnetAssociationBackend[1]
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_route_table_association.subnetAssociationAviVs[1] 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_route_table_association.subnetAssociationAviVs[1] will be represented by aws_route_table_association.subnetAssociationAviVs[1]
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_route_table_association.subnetAssociationBackend[0] 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_route_table_association.subnetAssociationBackend[0] will be represented by aws_route_table_association.subnetAssociationBackend[0]
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_route_table_association.subnetAssociationAviSeMgt[1] 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_route_table_association.subnetAssociationAviSeMgt[1] will be represented by aws_route_table_association.subnetAssociationAviSeMgt[1]
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_route_table_association.subnetAssociationAviVs[0] 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_route_table_association.subnetAssociationAviVs[0] will be represented by aws_route_table_association.subnetAssociationAviVs[0]
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_route_table_association.subnetAssociationAviVs[2] 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_route_table_association.subnetAssociationAviVs[2] will be represented by aws_route_table_association.subnetAssociationAviVs[2]
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_route_table_association.subnetAssociationAviSeMgt[0] 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_route_table_association.subnetAssociationAviSeMgt[0] will be represented by aws_route_table_association.subnetAssociationAviSeMgt[0]
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_route_table_association.subnetAssociationAviSeMgt[2] 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_route_table_association.subnetAssociationAviSeMgt[2] will be represented by aws_route_table_association.subnetAssociationAviSeMgt[2]
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_instance.jump 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_instance.jump will be represented by aws_instance.jump
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_instance.backend[1] 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_instance.backend[1] will be represented by aws_instance.backend[1]
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_instance.backend[2] 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_instance.backend[2] will be represented by aws_instance.backend[2]
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_instance.backend[0] 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_instance.backend[0] will be represented by aws_instance.backend[0]
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_launch_template.templateAsg 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_launch_template.templateAsg will be represented by aws_launch_template.templateAsg
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_autoscaling_group.autoScalingGroup 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_autoscaling_group.autoScalingGroup will be represented by aws_autoscaling_group.autoScalingGroup
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_instance.aviCtrl[0] 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_instance.aviCtrl[0] will be represented by aws_instance.aviCtrl[0]
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for null_resource.foo7 
2021/02/13 15:00:07 [TRACE] DiffTransformer: null_resource.foo7 will be represented by null_resource.foo7
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_route53_record.jump 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_route53_record.jump will be represented by aws_route53_record.jump
2021/02/13 15:00:07 [TRACE] DiffTransformer: found Create change for aws_route53_record.aviCtrl 
2021/02/13 15:00:07 [TRACE] DiffTransformer: aws_route53_record.aviCtrl will be represented by aws_route53_record.aviCtrl
2021/02/13 15:00:07 [TRACE] DiffTransformer complete
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup - *terraform.NodeApplyableResourceInstance
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
  aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
  aws_eip.eipForNatGw - *terraform.NodeApplyableResourceInstance
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
  aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-ASG-Notification - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-IAM-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-KMS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-R53-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-SNS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-SQS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.ansible-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.backend[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.backend[1] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.backend[2] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
  aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
  aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpAvi - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpJump - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpMysql - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpOpencart - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
  aws_launch_template.templateAsg - *terraform.NodeApplyableResourceInstance
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
  aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
  aws_nat_gateway.natGw - *terraform.NodeApplyableResourceInstance
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
  aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
  aws_route53_record.aviCtrl - *terraform.NodeApplyableResourceInstance
    aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
  aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
  aws_route53_record.jump - *terraform.NodeApplyableResourceInstance
    aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
  aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationMgt - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationMysql - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgAvi - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgJump - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgMysql - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgOpencart - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetMysql - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
  aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
  data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
  data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
  data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
  data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
  data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
  data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
  data.template_file.jump (expand) - *terraform.nodeExpandApplyableResource
  null_resource.foo7 - *terraform.NodeApplyableResourceInstance
    null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
  null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
  output.aviAmi - *terraform.NodeApplyableOutput
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
  output.az - *terraform.NodeApplyableOutput
  output.destroy - *terraform.NodeApplyableOutput
  output.jumpPublicIp - *terraform.NodeApplyableOutput
  output.ubuntuBionic - *terraform.NodeApplyableOutput
  output.ubuntuFocal - *terraform.NodeApplyableOutput
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_iam_role_policy_attachment.avi-attach8", instance aws_iam_role_policy_attachment.avi-attach8
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_subnet.subnetMysql", instance aws_subnet.subnetMysql
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_subnet.subnetAviSeMgt[1]", instance aws_subnet.subnetAviSeMgt[1]
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_key_pair.kpMysql", instance aws_key_pair.kpMysql
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_iam_policy.AviController-IAM-Policy", instance aws_iam_policy.AviController-IAM-Policy
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_route_table_association.subnetAssociationBackend[0]", instance aws_route_table_association.subnetAssociationBackend[0]
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_subnet.subnetAviSeMgt[0]", instance aws_subnet.subnetAviSeMgt[0]
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_iam_role.Ansible-Refined-Role", instance aws_iam_role.Ansible-Refined-Role
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_key_pair.kpAvi", instance aws_key_pair.kpAvi
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_iam_role_policy_attachment.ansible-attach1", instance aws_iam_role_policy_attachment.ansible-attach1
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_security_group.sgBackend", instance aws_security_group.sgBackend
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_subnet.subnetAviVs[1]", instance aws_subnet.subnetAviVs[1]
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_instance.backend[0]", instance aws_instance.backend[0]
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_iam_policy.AviController-SQS-Policy", instance aws_iam_policy.AviController-SQS-Policy
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_iam_role.vmimport", instance aws_iam_role.vmimport
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_nat_gateway.natGw", instance aws_nat_gateway.natGw
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_iam_role_policy_attachment.avi-attach7", instance aws_iam_role_policy_attachment.avi-attach7
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_route_table.rt[0]", instance aws_route_table.rt[0]
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_route_table_association.subnetAssociationMgt", instance aws_route_table_association.subnetAssociationMgt
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_subnet.subnetBackend[1]", instance aws_subnet.subnetBackend[1]
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_route_table_association.subnetAssociationAviVs[1]", instance aws_route_table_association.subnetAssociationAviVs[1]
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_instance.jump", instance aws_instance.jump
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_launch_template.templateAsg", instance aws_launch_template.templateAsg
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_iam_policy.AviController-AutoScalingGroup-Policy", instance aws_iam_policy.AviController-AutoScalingGroup-Policy
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_iam_policy.AviController-EC2-Policy", instance aws_iam_policy.AviController-EC2-Policy
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_instance.backend[1]", instance aws_instance.backend[1]
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_subnet.subnetBackend[0]", instance aws_subnet.subnetBackend[0]
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_route_table_association.subnetAssociationAviSeMgt[2]", instance aws_route_table_association.subnetAssociationAviSeMgt[2]
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_instance.backend[2]", instance aws_instance.backend[2]
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_route53_record.aviCtrl", instance aws_route53_record.aviCtrl
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_iam_role_policy_attachment.avi-attach5", instance aws_iam_role_policy_attachment.avi-attach5
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_autoscaling_group.autoScalingGroup", instance aws_autoscaling_group.autoScalingGroup
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_iam_policy.AviController-KMS-Policy", instance aws_iam_policy.AviController-KMS-Policy
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_route_table.rtPrivate[0]", instance aws_route_table.rtPrivate[0]
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_subnet.subnetAviVs[2]", instance aws_subnet.subnetAviVs[2]
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_route_table_association.subnetAssociationBackend[2]", instance aws_route_table_association.subnetAssociationBackend[2]
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_iam_policy.AviController-R53-Policy", instance aws_iam_policy.AviController-R53-Policy
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_iam_policy.ansible-EC2-Policy", instance aws_iam_policy.ansible-EC2-Policy
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_iam_role_policy_attachment.avi-attach1", instance aws_iam_role_policy_attachment.avi-attach1
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "null_resource.foo7", instance null_resource.foo7
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_route53_record.jump", instance aws_route53_record.jump
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_security_group.sgAvi", instance aws_security_group.sgAvi
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_security_group.sgJump", instance aws_security_group.sgJump
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_security_group.sgMysql", instance aws_security_group.sgMysql
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_iam_role.AviController-Refined-Role", instance aws_iam_role.AviController-Refined-Role
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_key_pair.kpBackend", instance aws_key_pair.kpBackend
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_iam_role_policy_attachment.avi-attach3", instance aws_iam_role_policy_attachment.avi-attach3
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_subnet.subnetBackend[2]", instance aws_subnet.subnetBackend[2]
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_vpc.vpc[0]", instance aws_vpc.vpc[0]
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_iam_role_policy.vmimport", instance aws_iam_role_policy.vmimport
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_iam_instance_profile.Ansible-Instance-Profile", instance aws_iam_instance_profile.Ansible-Instance-Profile
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_internet_gateway.internetGateway[0]", instance aws_internet_gateway.internetGateway[0]
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_iam_role_policy_attachment.avi-attach2", instance aws_iam_role_policy_attachment.avi-attach2
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_security_group.sgOpencart", instance aws_security_group.sgOpencart
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_instance.aviCtrl[0]", instance aws_instance.aviCtrl[0]
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_subnet.subnetAviVs[0]", instance aws_subnet.subnetAviVs[0]
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_route_table_association.subnetAssociationAviVs[2]", instance aws_route_table_association.subnetAssociationAviVs[2]
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_iam_role_policy_attachment.avi-attach6", instance aws_iam_role_policy_attachment.avi-attach6
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_subnet.subnetMgt", instance aws_subnet.subnetMgt
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_eip.eipForNatGw", instance aws_eip.eipForNatGw
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_route_table_association.subnetAssociationMysql", instance aws_route_table_association.subnetAssociationMysql
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_subnet.subnetAviSeMgt[2]", instance aws_subnet.subnetAviSeMgt[2]
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_route_table_association.subnetAssociationAviSeMgt[0]", instance aws_route_table_association.subnetAssociationAviSeMgt[0]
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_iam_policy.AviController-ASG-Notification", instance aws_iam_policy.AviController-ASG-Notification
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_key_pair.kpOpencart", instance aws_key_pair.kpOpencart
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_iam_instance_profile.AviController-Instance-Profile", instance aws_iam_instance_profile.AviController-Instance-Profile
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_iam_policy.AviController-SNS-Policy", instance aws_iam_policy.AviController-SNS-Policy
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_key_pair.kpJump", instance aws_key_pair.kpJump
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_iam_role_policy_attachment.avi-attach4", instance aws_iam_role_policy_attachment.avi-attach4
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_route_table_association.subnetAssociationBackend[1]", instance aws_route_table_association.subnetAssociationBackend[1]
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_route_table_association.subnetAssociationAviSeMgt[1]", instance aws_route_table_association.subnetAssociationAviSeMgt[1]
2021/02/13 15:00:07 [DEBUG] Resource state not found for node "aws_route_table_association.subnetAssociationAviVs[0]", instance aws_route_table_association.subnetAssociationAviVs[0]
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-KMS-Policy" (*terraform.NodeApplyableResourceInstance) config from aws_iam.tf:45,1-53
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-KMS-Policy
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table.rtPrivate[0]" (*terraform.NodeApplyableResourceInstance) config from aws_vpc.tf:95,1-39
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table.rtPrivate[0]
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnetAviVs[2]" (*terraform.NodeApplyableResourceInstance) config from aws_vpc.tf:48,1-36
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_subnet.subnetAviVs[2]
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-KMS-Policy (expand)" (*terraform.nodeExpandApplyableResource) config from aws_iam.tf:45,1-53
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-KMS-Policy (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table_association.subnetAssociationBackend[2]" (*terraform.NodeApplyableResourceInstance) config from aws_vpc.tf:116,1-66
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table_association.subnetAssociationBackend[2]
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.backend (expand)" (*terraform.nodeExpandApplyableResource) config from backend.tf:10,1-34
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_instance.backend (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.ansible-EC2-Policy" (*terraform.NodeApplyableResourceInstance) config from aws_iam.tf:3,1-47
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.ansible-EC2-Policy
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach1" (*terraform.NodeApplyableResourceInstance) config from aws_iam.tf:105,1-56
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach1
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "null_resource.foo7" (*terraform.NodeApplyableResourceInstance) config from ansible.tf:1,1-32
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to null_resource.foo7
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route53_record.jump" (*terraform.NodeApplyableResourceInstance) config from aws_route53.tf:5,1-37
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route53_record.jump
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach4 (expand)" (*terraform.nodeExpandApplyableResource) config from aws_iam.tf:120,1-56
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach4 (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-R53-Policy" (*terraform.NodeApplyableResourceInstance) config from aws_iam.tf:15,1-53
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-R53-Policy
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.sgJump" (*terraform.NodeApplyableResourceInstance) config from aws_sg.tf:50,1-39
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group.sgJump
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.sgMysql" (*terraform.NodeApplyableResourceInstance) config from aws_sg.tf:142,1-40
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group.sgMysql
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role.vmimport (expand)" (*terraform.nodeExpandApplyableResource) config from aws_iam.tf:155,1-35
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role.vmimport (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.sgAvi" (*terraform.NodeApplyableResourceInstance) config from aws_sg.tf:3,1-38
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group.sgAvi
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-IAM-Policy (expand)" (*terraform.nodeExpandApplyableResource) config from aws_iam.tf:51,1-53
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-IAM-Policy (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach5 (expand)" (*terraform.nodeExpandApplyableResource) config from aws_iam.tf:125,1-56
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach5 (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.sgJump (expand)" (*terraform.nodeExpandApplyableResource) config from aws_sg.tf:50,1-39
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group.sgJump (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role.AviController-Refined-Role" (*terraform.NodeApplyableResourceInstance) config from aws_iam.tf:79,1-53
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role.AviController-Refined-Role
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_key_pair.kpBackend" (*terraform.NodeApplyableResourceInstance) config from aws_kp.tf:13,1-36
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_key_pair.kpBackend
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach3" (*terraform.NodeApplyableResourceInstance) config from aws_iam.tf:115,1-56
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach3
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_vpc.vpc (expand)" (*terraform.nodeExpandApplyableResource) config from aws_vpc.tf:5,1-25
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_vpc.vpc (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy.vmimport (expand)" (*terraform.nodeExpandApplyableResource) config from aws_iam.tf:183,1-42
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy.vmimport (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnetBackend[2]" (*terraform.NodeApplyableResourceInstance) config from aws_vpc.tf:59,1-38
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_subnet.subnetBackend[2]
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_vpc.vpc[0]" (*terraform.NodeApplyableResourceInstance) config from aws_vpc.tf:5,1-25
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_vpc.vpc[0]
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-ASG-Notification (expand)" (*terraform.nodeExpandApplyableResource) config from aws_iam.tf:39,1-59
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-ASG-Notification (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy.vmimport" (*terraform.NodeApplyableResourceInstance) config from aws_iam.tf:183,1-42
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy.vmimport
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_internet_gateway.internetGateway[0]" (*terraform.NodeApplyableResourceInstance) config from aws_vpc.tf:14,1-50
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_internet_gateway.internetGateway[0]
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table.rtPrivate (expand)" (*terraform.nodeExpandApplyableResource) config from aws_vpc.tf:95,1-39
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table.rtPrivate (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_instance_profile.Ansible-Instance-Profile" (*terraform.NodeApplyableResourceInstance) config from aws_iam.tf:145,1-63
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_instance_profile.Ansible-Instance-Profile
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table_association.subnetAssociationMysql (expand)" (*terraform.nodeExpandApplyableResource) config from aws_vpc.tf:111,1-64
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table_association.subnetAssociationMysql (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.sgBackend (expand)" (*terraform.nodeExpandApplyableResource) config from aws_sg.tf:76,1-42
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group.sgBackend (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach2" (*terraform.NodeApplyableResourceInstance) config from aws_iam.tf:110,1-56
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach2
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.sgOpencart" (*terraform.NodeApplyableResourceInstance) config from aws_sg.tf:109,1-43
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group.sgOpencart
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.aviCtrl[0]" (*terraform.NodeApplyableResourceInstance) config from aws_instance.tf:38,1-34
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_instance.aviCtrl[0]
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnetAviVs (expand)" (*terraform.nodeExpandApplyableResource) config from aws_vpc.tf:48,1-36
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_subnet.subnetAviVs (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_launch_template.templateAsg (expand)" (*terraform.nodeExpandApplyableResource) config from aws_instance.tf:57,1-45
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_launch_template.templateAsg (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_availability_zones.available (expand)" (*terraform.nodeExpandApplyableResource) config from hcl.Range{Filename:"aws_vpc.tf", Start:hcl.Pos{Line:32, Column:1, Byte:637}, End:hcl.Pos{Line:32, Column:42, Byte:678}}
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to data.aws_availability_zones.available (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-SNS-Policy (expand)" (*terraform.nodeExpandApplyableResource) config from aws_iam.tf:27,1-53
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-SNS-Policy (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table_association.subnetAssociationBackend (expand)" (*terraform.nodeExpandApplyableResource) config from aws_vpc.tf:116,1-66
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table_association.subnetAssociationBackend (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnetAviVs[0]" (*terraform.NodeApplyableResourceInstance) config from aws_vpc.tf:48,1-36
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_subnet.subnetAviVs[0]
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table_association.subnetAssociationAviVs[2]" (*terraform.NodeApplyableResourceInstance) config from aws_vpc.tf:128,1-64
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table_association.subnetAssociationAviVs[2]
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.jump (expand)" (*terraform.nodeExpandApplyableResource) config from aws_instance.tf:134,1-31
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_instance.jump (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_ami.aviAmi (expand)" (*terraform.nodeExpandApplyableResource) config from hcl.Range{Filename:"aws_instance.tf", Start:hcl.Pos{Line:3, Column:1, Byte:24}, End:hcl.Pos{Line:3, Column:24, Byte:47}}
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to data.aws_ami.aviAmi (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnetMgt" (*terraform.NodeApplyableResourceInstance) config from aws_vpc.tf:36,1-34
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_subnet.subnetMgt
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_eip.eipForNatGw" (*terraform.NodeApplyableResourceInstance) config from aws_vpc.tf:83,1-33
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_eip.eipForNatGw
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table_association.subnetAssociationMysql" (*terraform.NodeApplyableResourceInstance) config from aws_vpc.tf:111,1-64
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table_association.subnetAssociationMysql
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route53_record.jump (expand)" (*terraform.nodeExpandApplyableResource) config from aws_route53.tf:5,1-37
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route53_record.jump (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach6" (*terraform.NodeApplyableResourceInstance) config from aws_iam.tf:130,1-56
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach6
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role.AviController-Refined-Role (expand)" (*terraform.nodeExpandApplyableResource) config from aws_iam.tf:79,1-53
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role.AviController-Refined-Role (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnetAviSeMgt[2]" (*terraform.NodeApplyableResourceInstance) config from aws_vpc.tf:70,1-39
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_subnet.subnetAviSeMgt[2]
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table_association.subnetAssociationAviSeMgt[0]" (*terraform.NodeApplyableResourceInstance) config from aws_vpc.tf:122,1-67
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table_association.subnetAssociationAviSeMgt[0]
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-EC2-Policy (expand)" (*terraform.nodeExpandApplyableResource) config from aws_iam.tf:9,1-53
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-EC2-Policy (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnetBackend (expand)" (*terraform.nodeExpandApplyableResource) config from aws_vpc.tf:59,1-38
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_subnet.subnetBackend (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.ansible-attach1 (expand)" (*terraform.nodeExpandApplyableResource) config from aws_iam.tf:100,1-60
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.ansible-attach1 (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_key_pair.kpAvi (expand)" (*terraform.nodeExpandApplyableResource) config from aws_kp.tf:3,1-32
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_key_pair.kpAvi (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach2 (expand)" (*terraform.nodeExpandApplyableResource) config from aws_iam.tf:110,1-56
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach2 (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-ASG-Notification" (*terraform.NodeApplyableResourceInstance) config from aws_iam.tf:39,1-59
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-ASG-Notification
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_instance_profile.Ansible-Instance-Profile (expand)" (*terraform.nodeExpandApplyableResource) config from aws_iam.tf:145,1-63
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_instance_profile.Ansible-Instance-Profile (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach7 (expand)" (*terraform.nodeExpandApplyableResource) config from aws_iam.tf:135,1-56
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach7 (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_key_pair.kpOpencart" (*terraform.NodeApplyableResourceInstance) config from aws_kp.tf:23,1-37
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_key_pair.kpOpencart
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_instance_profile.AviController-Instance-Profile" (*terraform.NodeApplyableResourceInstance) config from aws_iam.tf:150,1-69
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_instance_profile.AviController-Instance-Profile
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "null_resource.foo7 (expand)" (*terraform.nodeExpandApplyableResource) config from ansible.tf:1,1-32
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to null_resource.foo7 (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.sgAvi (expand)" (*terraform.nodeExpandApplyableResource) config from aws_sg.tf:3,1-38
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group.sgAvi (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-SNS-Policy" (*terraform.NodeApplyableResourceInstance) config from aws_iam.tf:27,1-53
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-SNS-Policy
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_key_pair.kpJump" (*terraform.NodeApplyableResourceInstance) config from aws_kp.tf:8,1-33
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_key_pair.kpJump
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach4" (*terraform.NodeApplyableResourceInstance) config from aws_iam.tf:120,1-56
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach4
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table_association.subnetAssociationBackend[1]" (*terraform.NodeApplyableResourceInstance) config from aws_vpc.tf:116,1-66
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table_association.subnetAssociationBackend[1]
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table_association.subnetAssociationAviSeMgt[1]" (*terraform.NodeApplyableResourceInstance) config from aws_vpc.tf:122,1-67
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table_association.subnetAssociationAviSeMgt[1]
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table_association.subnetAssociationAviVs[0]" (*terraform.NodeApplyableResourceInstance) config from aws_vpc.tf:128,1-64
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table_association.subnetAssociationAviVs[0]
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_key_pair.kpJump (expand)" (*terraform.nodeExpandApplyableResource) config from aws_kp.tf:8,1-33
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_key_pair.kpJump (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "data.template_file.jump (expand)" (*terraform.nodeExpandApplyableResource) config from hcl.Range{Filename:"aws_instance.tf", Start:hcl.Pos{Line:121, Column:1, Byte:2995}, End:hcl.Pos{Line:121, Column:28, Byte:3022}}
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to data.template_file.jump (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnetMysql" (*terraform.NodeApplyableResourceInstance) config from aws_vpc.tf:42,1-36
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_subnet.subnetMysql
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnetAviSeMgt (expand)" (*terraform.nodeExpandApplyableResource) config from aws_vpc.tf:70,1-39
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_subnet.subnetAviSeMgt (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach8" (*terraform.NodeApplyableResourceInstance) config from aws_iam.tf:140,1-56
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach8
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_route53_zone.awsAviDemo (expand)" (*terraform.nodeExpandApplyableResource) config from hcl.Range{Filename:"aws_route53.tf", Start:hcl.Pos{Line:1, Column:1, Byte:0}, End:hcl.Pos{Line:1, Column:37, Byte:36}}
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to data.aws_route53_zone.awsAviDemo (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnetAviSeMgt[1]" (*terraform.NodeApplyableResourceInstance) config from aws_vpc.tf:70,1-39
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_subnet.subnetAviSeMgt[1]
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach1 (expand)" (*terraform.nodeExpandApplyableResource) config from aws_iam.tf:105,1-56
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach1 (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.sgMysql (expand)" (*terraform.nodeExpandApplyableResource) config from aws_sg.tf:142,1-40
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group.sgMysql (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-IAM-Policy" (*terraform.NodeApplyableResourceInstance) config from aws_iam.tf:51,1-53
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-IAM-Policy
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table_association.subnetAssociationBackend[0]" (*terraform.NodeApplyableResourceInstance) config from aws_vpc.tf:116,1-66
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table_association.subnetAssociationBackend[0]
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_key_pair.kpOpencart (expand)" (*terraform.nodeExpandApplyableResource) config from aws_kp.tf:23,1-37
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_key_pair.kpOpencart (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_key_pair.kpMysql" (*terraform.NodeApplyableResourceInstance) config from aws_kp.tf:18,1-34
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_key_pair.kpMysql
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnetAviSeMgt[0]" (*terraform.NodeApplyableResourceInstance) config from aws_vpc.tf:70,1-39
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_subnet.subnetAviSeMgt[0]
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route53_record.aviCtrl (expand)" (*terraform.nodeExpandApplyableResource) config from aws_route53.tf:13,3-42
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route53_record.aviCtrl (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table_association.subnetAssociationAviSeMgt (expand)" (*terraform.nodeExpandApplyableResource) config from aws_vpc.tf:122,1-67
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table_association.subnetAssociationAviSeMgt (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.ansible-EC2-Policy (expand)" (*terraform.nodeExpandApplyableResource) config from aws_iam.tf:3,1-47
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.ansible-EC2-Policy (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_ami.ubuntuBionic (expand)" (*terraform.nodeExpandApplyableResource) config from hcl.Range{Filename:"aws_instance.tf", Start:hcl.Pos{Line:14, Column:1, Byte:219}, End:hcl.Pos{Line:14, Column:30, Byte:248}}
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to data.aws_ami.ubuntuBionic (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role.Ansible-Refined-Role" (*terraform.NodeApplyableResourceInstance) config from aws_iam.tf:57,1-47
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role.Ansible-Refined-Role
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_key_pair.kpAvi" (*terraform.NodeApplyableResourceInstance) config from aws_kp.tf:3,1-32
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_key_pair.kpAvi
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.ansible-attach1" (*terraform.NodeApplyableResourceInstance) config from aws_iam.tf:100,1-60
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.ansible-attach1
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.sgBackend" (*terraform.NodeApplyableResourceInstance) config from aws_sg.tf:76,1-42
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group.sgBackend
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach3 (expand)" (*terraform.nodeExpandApplyableResource) config from aws_iam.tf:115,1-56
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach3 (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_autoscaling_group.autoScalingGroup (expand)" (*terraform.nodeExpandApplyableResource) config from aws_instance.tf:65,1-52
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_autoscaling_group.autoScalingGroup (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnetAviVs[1]" (*terraform.NodeApplyableResourceInstance) config from aws_vpc.tf:48,1-36
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_subnet.subnetAviVs[1]
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.backend[0]" (*terraform.NodeApplyableResourceInstance) config from backend.tf:10,1-34
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_instance.backend[0]
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_ami.ubuntuFocal (expand)" (*terraform.nodeExpandApplyableResource) config from hcl.Range{Filename:"aws_instance.tf", Start:hcl.Pos{Line:25, Column:1, Byte:429}, End:hcl.Pos{Line:25, Column:29, Byte:457}}
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to data.aws_ami.ubuntuFocal (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-SQS-Policy" (*terraform.NodeApplyableResourceInstance) config from aws_iam.tf:33,1-53
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-SQS-Policy
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role.vmimport" (*terraform.NodeApplyableResourceInstance) config from aws_iam.tf:155,1-35
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role.vmimport
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_nat_gateway.natGw" (*terraform.NodeApplyableResourceInstance) config from aws_vpc.tf:90,1-35
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_nat_gateway.natGw
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_key_pair.kpBackend (expand)" (*terraform.nodeExpandApplyableResource) config from aws_kp.tf:13,1-36
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_key_pair.kpBackend (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_instance_profile.AviController-Instance-Profile (expand)" (*terraform.nodeExpandApplyableResource) config from aws_iam.tf:150,1-69
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_instance_profile.AviController-Instance-Profile (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach7" (*terraform.NodeApplyableResourceInstance) config from aws_iam.tf:135,1-56
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach7
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table.rt[0]" (*terraform.NodeApplyableResourceInstance) config from aws_vpc.tf:21,1-32
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table.rt[0]
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table.rt (expand)" (*terraform.nodeExpandApplyableResource) config from aws_vpc.tf:21,1-32
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table.rt (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_eip.eipForNatGw (expand)" (*terraform.nodeExpandApplyableResource) config from aws_vpc.tf:83,1-33
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_eip.eipForNatGw (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table_association.subnetAssociationMgt" (*terraform.NodeApplyableResourceInstance) config from aws_vpc.tf:106,1-62
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table_association.subnetAssociationMgt
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnetBackend[1]" (*terraform.NodeApplyableResourceInstance) config from aws_vpc.tf:59,1-38
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_subnet.subnetBackend[1]
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_key_pair.kpMysql (expand)" (*terraform.nodeExpandApplyableResource) config from aws_kp.tf:18,1-34
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_key_pair.kpMysql (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_nat_gateway.natGw (expand)" (*terraform.nodeExpandApplyableResource) config from aws_vpc.tf:90,1-35
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_nat_gateway.natGw (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.sgOpencart (expand)" (*terraform.nodeExpandApplyableResource) config from aws_sg.tf:109,1-43
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_security_group.sgOpencart (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-R53-Policy (expand)" (*terraform.nodeExpandApplyableResource) config from aws_iam.tf:15,1-53
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-R53-Policy (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table_association.subnetAssociationAviVs[1]" (*terraform.NodeApplyableResourceInstance) config from aws_vpc.tf:128,1-64
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table_association.subnetAssociationAviVs[1]
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.jump" (*terraform.NodeApplyableResourceInstance) config from aws_instance.tf:134,1-31
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_instance.jump
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role.Ansible-Refined-Role (expand)" (*terraform.nodeExpandApplyableResource) config from aws_iam.tf:57,1-47
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role.Ansible-Refined-Role (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnetMysql (expand)" (*terraform.nodeExpandApplyableResource) config from aws_vpc.tf:42,1-36
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_subnet.subnetMysql (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_launch_template.templateAsg" (*terraform.NodeApplyableResourceInstance) config from aws_instance.tf:57,1-45
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_launch_template.templateAsg
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table_association.subnetAssociationAviVs (expand)" (*terraform.nodeExpandApplyableResource) config from aws_vpc.tf:128,1-64
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table_association.subnetAssociationAviVs (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-AutoScalingGroup-Policy" (*terraform.NodeApplyableResourceInstance) config from aws_iam.tf:21,1-66
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-AutoScalingGroup-Policy
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-EC2-Policy" (*terraform.NodeApplyableResourceInstance) config from aws_iam.tf:9,1-53
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-EC2-Policy
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.backend[1]" (*terraform.NodeApplyableResourceInstance) config from backend.tf:10,1-34
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_instance.backend[1]
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach8 (expand)" (*terraform.nodeExpandApplyableResource) config from aws_iam.tf:140,1-56
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach8 (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnetMgt (expand)" (*terraform.nodeExpandApplyableResource) config from aws_vpc.tf:36,1-34
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_subnet.subnetMgt (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.subnetBackend[0]" (*terraform.NodeApplyableResourceInstance) config from aws_vpc.tf:59,1-38
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_subnet.subnetBackend[0]
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table_association.subnetAssociationAviSeMgt[2]" (*terraform.NodeApplyableResourceInstance) config from aws_vpc.tf:122,1-67
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table_association.subnetAssociationAviSeMgt[2]
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-SQS-Policy (expand)" (*terraform.nodeExpandApplyableResource) config from aws_iam.tf:33,1-53
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-SQS-Policy (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.aviCtrl (expand)" (*terraform.nodeExpandApplyableResource) config from aws_instance.tf:38,1-34
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_instance.aviCtrl (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_instance.backend[2]" (*terraform.NodeApplyableResourceInstance) config from backend.tf:10,1-34
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_instance.backend[2]
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route53_record.aviCtrl" (*terraform.NodeApplyableResourceInstance) config from aws_route53.tf:13,3-42
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route53_record.aviCtrl
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_internet_gateway.internetGateway (expand)" (*terraform.nodeExpandApplyableResource) config from aws_vpc.tf:14,1-50
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_internet_gateway.internetGateway (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table_association.subnetAssociationMgt (expand)" (*terraform.nodeExpandApplyableResource) config from aws_vpc.tf:106,1-62
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_route_table_association.subnetAssociationMgt (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "data.template_file.backend (expand)" (*terraform.nodeExpandApplyableResource) config from hcl.Range{Filename:"backend.tf", Start:hcl.Pos{Line:2, Column:1, Byte:2}, End:hcl.Pos{Line:2, Column:31, Byte:32}}
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to data.template_file.backend (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach5" (*terraform.NodeApplyableResourceInstance) config from aws_iam.tf:125,1-56
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach5
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_autoscaling_group.autoScalingGroup" (*terraform.NodeApplyableResourceInstance) config from aws_instance.tf:65,1-52
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_autoscaling_group.autoScalingGroup
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.avi-attach6 (expand)" (*terraform.nodeExpandApplyableResource) config from aws_iam.tf:130,1-56
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_role_policy_attachment.avi-attach6 (expand)
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.AviController-AutoScalingGroup-Policy (expand)" (*terraform.nodeExpandApplyableResource) config from aws_iam.tf:21,1-66
2021/02/13 15:00:07 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to aws_iam_policy.AviController-AutoScalingGroup-Policy (expand)
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/13 15:00:07 [TRACE] MissingProviderTransformer: added implicit provisioner file, first implied by null_resource.foo7
2021/02/13 15:00:07 [TRACE] MissingProviderTransformer: added implicit provisioner remote-exec, first implied by null_resource.foo7
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup - *terraform.NodeApplyableResourceInstance
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
  aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
  aws_eip.eipForNatGw - *terraform.NodeApplyableResourceInstance
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
  aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-ASG-Notification - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-IAM-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-KMS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-R53-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-SNS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-SQS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.ansible-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.backend[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.backend[1] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.backend[2] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
  aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
  aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpAvi - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpJump - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpMysql - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpOpencart - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
  aws_launch_template.templateAsg - *terraform.NodeApplyableResourceInstance
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
  aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
  aws_nat_gateway.natGw - *terraform.NodeApplyableResourceInstance
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
  aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
  aws_route53_record.aviCtrl - *terraform.NodeApplyableResourceInstance
    aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
  aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
  aws_route53_record.jump - *terraform.NodeApplyableResourceInstance
    aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
  aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationMgt - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationMysql - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgAvi - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgJump - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgMysql - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgOpencart - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetMysql - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
  aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
  data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
  data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
  data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
  data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
  data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
  data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
  data.template_file.jump (expand) - *terraform.nodeExpandApplyableResource
  null_resource.foo7 - *terraform.NodeApplyableResourceInstance
    null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
  null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
  output.aviAmi - *terraform.NodeApplyableOutput
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
  output.az - *terraform.NodeApplyableOutput
  output.destroy - *terraform.NodeApplyableOutput
  output.jumpPublicIp - *terraform.NodeApplyableOutput
  output.ubuntuBionic - *terraform.NodeApplyableOutput
  output.ubuntuFocal - *terraform.NodeApplyableOutput
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/13 15:00:07 [TRACE] ProvisionerTransformer: aws_instance.jump is provisioned by remote-exec ("provisioner.remote-exec")
2021/02/13 15:00:07 [TRACE] ProvisionerTransformer: null_resource.foo7 is provisioned by file ("provisioner.file")
2021/02/13 15:00:07 [TRACE] ProvisionerTransformer: null_resource.foo7 is provisioned by file ("provisioner.file")
2021/02/13 15:00:07 [TRACE] ProvisionerTransformer: null_resource.foo7 is provisioned by remote-exec ("provisioner.remote-exec")
2021/02/13 15:00:07 [TRACE] ProvisionerTransformer: aws_instance.jump (expand) is provisioned by remote-exec ("provisioner.remote-exec")
2021/02/13 15:00:07 [TRACE] ProvisionerTransformer: null_resource.foo7 (expand) is provisioned by file ("provisioner.file")
2021/02/13 15:00:07 [TRACE] ProvisionerTransformer: null_resource.foo7 (expand) is provisioned by file ("provisioner.file")
2021/02/13 15:00:07 [TRACE] ProvisionerTransformer: null_resource.foo7 (expand) is provisioned by remote-exec ("provisioner.remote-exec")
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.ProvisionerTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup - *terraform.NodeApplyableResourceInstance
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
  aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
  aws_eip.eipForNatGw - *terraform.NodeApplyableResourceInstance
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
  aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-ASG-Notification - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-IAM-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-KMS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-R53-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-SNS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-SQS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.ansible-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.backend[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.backend[1] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.backend[2] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
  aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpAvi - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpJump - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpMysql - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpOpencart - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
  aws_launch_template.templateAsg - *terraform.NodeApplyableResourceInstance
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
  aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
  aws_nat_gateway.natGw - *terraform.NodeApplyableResourceInstance
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
  aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
  aws_route53_record.aviCtrl - *terraform.NodeApplyableResourceInstance
    aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
  aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
  aws_route53_record.jump - *terraform.NodeApplyableResourceInstance
    aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
  aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationMgt - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationMysql - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgAvi - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgJump - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgMysql - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgOpencart - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetMysql - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
  aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
  data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
  data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
  data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
  data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
  data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
  data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
  data.template_file.jump (expand) - *terraform.nodeExpandApplyableResource
  null_resource.foo7 - *terraform.NodeApplyableResourceInstance
    null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  output.aviAmi - *terraform.NodeApplyableOutput
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
  output.az - *terraform.NodeApplyableOutput
  output.destroy - *terraform.NodeApplyableOutput
  output.jumpPublicIp - *terraform.NodeApplyableOutput
  output.ubuntuBionic - *terraform.NodeApplyableOutput
  output.ubuntuFocal - *terraform.NodeApplyableOutput
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/13 15:00:07 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/13 15:00:07 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/aws\"]" provider configuration from provider.tf:1,1-15
2021/02/13 15:00:07 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup - *terraform.NodeApplyableResourceInstance
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
  aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
  aws_eip.eipForNatGw - *terraform.NodeApplyableResourceInstance
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
  aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-ASG-Notification - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-IAM-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-KMS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-R53-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-SNS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-SQS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.ansible-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.backend[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.backend[1] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.backend[2] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
  aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpAvi - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpJump - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpMysql - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpOpencart - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
  aws_launch_template.templateAsg - *terraform.NodeApplyableResourceInstance
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
  aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
  aws_nat_gateway.natGw - *terraform.NodeApplyableResourceInstance
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
  aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
  aws_route53_record.aviCtrl - *terraform.NodeApplyableResourceInstance
    aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
  aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
  aws_route53_record.jump - *terraform.NodeApplyableResourceInstance
    aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
  aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationMgt - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationMysql - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgAvi - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgJump - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgMysql - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgOpencart - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetMysql - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
  aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
  data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
  data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
  data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
  data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
  data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
  data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
  data.template_file.jump (expand) - *terraform.nodeExpandApplyableResource
  null_resource.foo7 - *terraform.NodeApplyableResourceInstance
    null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  output.aviAmi - *terraform.NodeApplyableOutput
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
  output.az - *terraform.NodeApplyableOutput
  output.destroy - *terraform.NodeApplyableOutput
  output.jumpPublicIp - *terraform.NodeApplyableOutput
  output.ubuntuBionic - *terraform.NodeApplyableOutput
  output.ubuntuFocal - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:07 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/13 15:00:07 [DEBUG] adding implicit provider configuration provider["registry.terraform.io/hashicorp/null"], implied first by null_resource.foo7
2021/02/13 15:00:07 [DEBUG] adding implicit provider configuration provider["registry.terraform.io/hashicorp/template"], implied first by data.template_file.jump (expand)
2021/02/13 15:00:07 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup - *terraform.NodeApplyableResourceInstance
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
  aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
  aws_eip.eipForNatGw - *terraform.NodeApplyableResourceInstance
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
  aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-ASG-Notification - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-IAM-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-KMS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-R53-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-SNS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-SQS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.ansible-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.backend[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.backend[1] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.backend[2] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
  aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpAvi - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpJump - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpMysql - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpOpencart - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
  aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
  aws_launch_template.templateAsg - *terraform.NodeApplyableResourceInstance
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
  aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
  aws_nat_gateway.natGw - *terraform.NodeApplyableResourceInstance
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
  aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
  aws_route53_record.aviCtrl - *terraform.NodeApplyableResourceInstance
    aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
  aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
  aws_route53_record.jump - *terraform.NodeApplyableResourceInstance
    aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
  aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationMgt - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationMysql - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgAvi - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgJump - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgMysql - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgOpencart - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
  aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetMysql - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
  aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
  aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
  data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
  data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
  data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
  data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
  data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
  data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
  data.template_file.jump (expand) - *terraform.nodeExpandApplyableResource
  null_resource.foo7 - *terraform.NodeApplyableResourceInstance
    null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  output.aviAmi - *terraform.NodeApplyableOutput
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
  output.az - *terraform.NodeApplyableOutput
  output.destroy - *terraform.NodeApplyableOutput
  output.jumpPublicIp - *terraform.NodeApplyableOutput
  output.ubuntuBionic - *terraform.NodeApplyableOutput
  output.ubuntuFocal - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:07 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table_association.subnetAssociationAviVs (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_route_table_association.subnetAssociationAviVs (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_vpc.vpc (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_vpc.vpc (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-SNS-Policy
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-SNS-Policy" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group.sgBackend
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_security_group.sgBackend" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role.AviController-Refined-Role (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_role.AviController-Refined-Role (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route53_record.aviCtrl (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_route53_record.aviCtrl (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-AutoScalingGroup-Policy
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-AutoScalingGroup-Policy" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach8 (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach8 (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_instance.aviCtrl (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_instance.aviCtrl (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_internet_gateway.internetGateway (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_internet_gateway.internetGateway (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_instance_profile.Ansible-Instance-Profile
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_instance_profile.Ansible-Instance-Profile" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_subnet.subnetAviVs[0]
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_subnet.subnetAviVs[0]" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table_association.subnetAssociationBackend[2]
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_route_table_association.subnetAssociationBackend[2]" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role.vmimport (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_role.vmimport (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach2
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach2" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_instance.backend[1]
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_instance.backend[1]" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach3
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach3" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_subnet.subnetBackend[1]
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_subnet.subnetBackend[1]" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group.sgMysql
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_security_group.sgMysql" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy.vmimport
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_role_policy.vmimport" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving data.aws_ami.ubuntuFocal (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "data.aws_ami.ubuntuFocal (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach7
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach7" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group.sgJump
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_security_group.sgJump" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_subnet.subnetBackend[2]
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_subnet.subnetBackend[2]" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_subnet.subnetMysql (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_subnet.subnetMysql (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_subnet.subnetAviVs[2]
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_subnet.subnetAviVs[2]" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach2 (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach2 (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table_association.subnetAssociationBackend[1]
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_route_table_association.subnetAssociationBackend[1]" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_key_pair.kpAvi
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_key_pair.kpAvi" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group.sgAvi
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_security_group.sgAvi" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table.rtPrivate (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_route_table.rtPrivate (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-EC2-Policy (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-EC2-Policy (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group.sgOpencart (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_security_group.sgOpencart (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-AutoScalingGroup-Policy (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-AutoScalingGroup-Policy (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_key_pair.kpJump
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_key_pair.kpJump" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_subnet.subnetAviSeMgt[1]
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_subnet.subnetAviSeMgt[1]" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_key_pair.kpBackend (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_key_pair.kpBackend (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving data.aws_availability_zones.available (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "data.aws_availability_zones.available (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-ASG-Notification
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-ASG-Notification" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_instance.backend[0]
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_instance.backend[0]" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_launch_template.templateAsg (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_launch_template.templateAsg (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table_association.subnetAssociationBackend[0]
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_route_table_association.subnetAssociationBackend[0]" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route53_record.aviCtrl
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_route53_record.aviCtrl" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-IAM-Policy (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-IAM-Policy (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group.sgBackend (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_security_group.sgBackend (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_instance_profile.Ansible-Instance-Profile (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_instance_profile.Ansible-Instance-Profile (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table_association.subnetAssociationAviVs[0]
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_route_table_association.subnetAssociationAviVs[0]" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-IAM-Policy
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-IAM-Policy" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table_association.subnetAssociationAviSeMgt (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_route_table_association.subnetAssociationAviSeMgt (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/template"] serving data.template_file.backend (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "data.template_file.backend (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/template"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_instance.backend (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_instance.backend (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group.sgOpencart
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_security_group.sgOpencart" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_subnet.subnetAviSeMgt[2]
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_subnet.subnetAviSeMgt[2]" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-KMS-Policy
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-KMS-Policy" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach1
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach1" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_eip.eipForNatGw
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_eip.eipForNatGw" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_instance.backend[2]
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_instance.backend[2]" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role.vmimport
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_role.vmimport" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-EC2-Policy
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-EC2-Policy" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_key_pair.kpOpencart
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_key_pair.kpOpencart" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach1 (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach1 (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_key_pair.kpMysql (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_key_pair.kpMysql (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role.Ansible-Refined-Role (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_role.Ansible-Refined-Role (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.ansible-EC2-Policy
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_policy.ansible-EC2-Policy" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.ansible-attach1 (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.ansible-attach1 (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach7 (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach7 (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table_association.subnetAssociationMgt (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_route_table_association.subnetAssociationMgt (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table_association.subnetAssociationAviVs[2]
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_route_table_association.subnetAssociationAviVs[2]" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_subnet.subnetMgt (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_subnet.subnetMgt (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role.AviController-Refined-Role
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_role.AviController-Refined-Role" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_internet_gateway.internetGateway[0]
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_internet_gateway.internetGateway[0]" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_instance.aviCtrl[0]
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_instance.aviCtrl[0]" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-SQS-Policy
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-SQS-Policy" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_subnet.subnetBackend[0]
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_subnet.subnetBackend[0]" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach6 (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach6 (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table_association.subnetAssociationMysql (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_route_table_association.subnetAssociationMysql (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table_association.subnetAssociationBackend (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_route_table_association.subnetAssociationBackend (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table.rtPrivate[0]
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_route_table.rtPrivate[0]" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach5 (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach5 (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.ansible-EC2-Policy (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_policy.ansible-EC2-Policy (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach3 (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach3 (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_subnet.subnetAviVs (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_subnet.subnetAviVs (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/template"] serving data.template_file.jump (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "data.template_file.jump (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/template"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group.sgJump (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_security_group.sgJump (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table_association.subnetAssociationMysql
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_route_table_association.subnetAssociationMysql" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_subnet.subnetBackend (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_subnet.subnetBackend (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group.sgAvi (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_security_group.sgAvi (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach8
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach8" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_key_pair.kpOpencart (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_key_pair.kpOpencart (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_subnet.subnetAviVs[1]
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_subnet.subnetAviVs[1]" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_nat_gateway.natGw
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_nat_gateway.natGw" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route53_record.jump
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_route53_record.jump" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_instance.jump (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_instance.jump (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table_association.subnetAssociationAviSeMgt[0]
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_route_table_association.subnetAssociationAviSeMgt[0]" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-R53-Policy
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-R53-Policy" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_instance_profile.AviController-Instance-Profile (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_instance_profile.AviController-Instance-Profile (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_launch_template.templateAsg
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_launch_template.templateAsg" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_autoscaling_group.autoScalingGroup
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_autoscaling_group.autoScalingGroup" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving data.aws_ami.aviAmi (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "data.aws_ami.aviAmi (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving data.aws_route53_zone.awsAviDemo (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "data.aws_route53_zone.awsAviDemo (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table.rt (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_route_table.rt (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy.vmimport (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_role_policy.vmimport (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route53_record.jump (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_route53_record.jump (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach4
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach4" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_key_pair.kpMysql
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_key_pair.kpMysql" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.ansible-attach1
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.ansible-attach1" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_instance.jump
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_instance.jump" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-ASG-Notification (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-ASG-Notification (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-SNS-Policy (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-SNS-Policy (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table_association.subnetAssociationAviSeMgt[1]
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_route_table_association.subnetAssociationAviSeMgt[1]" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table_association.subnetAssociationAviSeMgt[2]
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_route_table_association.subnetAssociationAviSeMgt[2]" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach6
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach6" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/null"] serving null_resource.foo7 (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "null_resource.foo7 (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/null"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_security_group.sgMysql (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_security_group.sgMysql (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_eip.eipForNatGw (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_eip.eipForNatGw (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table_association.subnetAssociationAviVs[1]
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_route_table_association.subnetAssociationAviVs[1]" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-KMS-Policy (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-KMS-Policy (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_key_pair.kpAvi (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_key_pair.kpAvi (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_subnet.subnetMysql
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_subnet.subnetMysql" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role.Ansible-Refined-Role
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_role.Ansible-Refined-Role" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach4 (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach4 (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_subnet.subnetAviSeMgt[0]
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_subnet.subnetAviSeMgt[0]" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving data.aws_ami.ubuntuBionic (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "data.aws_ami.ubuntuBionic (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table.rt[0]
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_route_table.rt[0]" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_route_table_association.subnetAssociationMgt
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_route_table_association.subnetAssociationMgt" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-R53-Policy (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-R53-Policy (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_vpc.vpc[0]
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_vpc.vpc[0]" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_key_pair.kpJump (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_key_pair.kpJump (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_subnet.subnetAviSeMgt (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_subnet.subnetAviSeMgt (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_policy.AviController-SQS-Policy (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_policy.AviController-SQS-Policy (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_role_policy_attachment.avi-attach5
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.avi-attach5" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_subnet.subnetMgt
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_subnet.subnetMgt" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_nat_gateway.natGw (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_nat_gateway.natGw (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/null"] serving null_resource.foo7
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "null_resource.foo7" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/null"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_key_pair.kpBackend
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_key_pair.kpBackend" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_iam_instance_profile.AviController-Instance-Profile
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_iam_instance_profile.AviController-Instance-Profile" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/aws"] serving aws_autoscaling_group.autoScalingGroup (expand)
2021/02/13 15:00:07 [DEBUG] ProviderTransformer: "aws_autoscaling_group.autoScalingGroup (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup - *terraform.NodeApplyableResourceInstance
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_eip.eipForNatGw - *terraform.NodeApplyableResourceInstance
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-ASG-Notification - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-IAM-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-KMS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-R53-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SNS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SQS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.ansible-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.backend[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.backend[1] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.backend[2] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpAvi - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpJump - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpMysql - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpOpencart - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_launch_template.templateAsg - *terraform.NodeApplyableResourceInstance
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_nat_gateway.natGw - *terraform.NodeApplyableResourceInstance
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.aviCtrl - *terraform.NodeApplyableResourceInstance
    aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.jump - *terraform.NodeApplyableResourceInstance
    aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMgt - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMysql - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgAvi - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgJump - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgMysql - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgOpencart - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetMysql - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  data.template_file.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  null_resource.foo7 - *terraform.NodeApplyableResourceInstance
    null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  output.aviAmi - *terraform.NodeApplyableOutput
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
  output.az - *terraform.NodeApplyableOutput
  output.destroy - *terraform.NodeApplyableOutput
  output.jumpPublicIp - *terraform.NodeApplyableOutput
  output.ubuntuBionic - *terraform.NodeApplyableOutput
  output.ubuntuFocal - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:07 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/13 15:00:07 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/13 15:00:07 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/13 15:00:07 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  aws_autoscaling_group.autoScalingGroup - *terraform.NodeApplyableResourceInstance
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_eip.eipForNatGw - *terraform.NodeApplyableResourceInstance
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-ASG-Notification - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-IAM-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-KMS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-R53-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SNS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SQS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.ansible-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.backend[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.backend[1] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.backend[2] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpAvi - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpJump - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpMysql - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpOpencart - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_launch_template.templateAsg - *terraform.NodeApplyableResourceInstance
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_nat_gateway.natGw - *terraform.NodeApplyableResourceInstance
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.aviCtrl - *terraform.NodeApplyableResourceInstance
    aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.jump - *terraform.NodeApplyableResourceInstance
    aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMgt - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMysql - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgAvi - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgJump - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgMysql - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgOpencart - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetMysql - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  data.template_file.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  null_resource.foo7 - *terraform.NodeApplyableResourceInstance
    null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  output.aviAmi - *terraform.NodeApplyableOutput
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
  output.az - *terraform.NodeApplyableOutput
  output.destroy - *terraform.NodeApplyableOutput
  output.jumpPublicIp - *terraform.NodeApplyableOutput
  output.ubuntuBionic - *terraform.NodeApplyableOutput
  output.ubuntuFocal - *terraform.NodeApplyableOutput
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_instance_profile.Ansible-Instance-Profile (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach7 (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.ansible-attach1 (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_key_pair.kpAvi (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach2 (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-ASG-Notification
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to null_resource.foo7 (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching provisioner "file" config schema to null_resource.foo7 (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching provisioner "file" config schema to null_resource.foo7 (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching provisioner "remote-exec" config schema to null_resource.foo7 (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.sgAvi (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_key_pair.kpOpencart
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_instance_profile.AviController-Instance-Profile
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table_association.subnetAssociationAviSeMgt[1]
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table_association.subnetAssociationAviVs[0]
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_key_pair.kpJump (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to data.template_file.jump (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-SNS-Policy
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_key_pair.kpJump
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach4
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table_association.subnetAssociationBackend[1]
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnetAviSeMgt (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach8
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnetMysql
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach1 (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.sgMysql (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_route53_zone.awsAviDemo (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnetAviSeMgt[1]
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_key_pair.kpOpencart (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_key_pair.kpMysql
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-IAM-Policy
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table_association.subnetAssociationBackend[0]
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route53_record.aviCtrl (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table_association.subnetAssociationAviSeMgt (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnetAviSeMgt[0]
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.ansible-attach1
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.sgBackend
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach3 (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_autoscaling_group.autoScalingGroup (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.ansible-EC2-Policy (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_ami.ubuntuBionic (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role.Ansible-Refined-Role
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_key_pair.kpAvi
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnetAviVs[1]
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.backend[0]
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_nat_gateway.natGw
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_key_pair.kpBackend (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_instance_profile.AviController-Instance-Profile (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_ami.ubuntuFocal (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-SQS-Policy
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role.vmimport
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table.rt (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach7
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table.rt[0]
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_eip.eipForNatGw (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnetBackend[1]
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_key_pair.kpMysql (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_nat_gateway.natGw (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table_association.subnetAssociationMgt
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.jump
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching provisioner "remote-exec" config schema to aws_instance.jump
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role.Ansible-Refined-Role (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnetMysql (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.sgOpencart (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-R53-Policy (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table_association.subnetAssociationAviVs[1]
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_launch_template.templateAsg
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach8 (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnetMgt (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table_association.subnetAssociationAviVs (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-AutoScalingGroup-Policy
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-EC2-Policy
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.backend[1]
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-SQS-Policy (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.aviCtrl (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnetBackend[0]
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table_association.subnetAssociationAviSeMgt[2]
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_internet_gateway.internetGateway (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.backend[2]
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route53_record.aviCtrl
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_autoscaling_group.autoScalingGroup
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach6 (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-AutoScalingGroup-Policy (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table_association.subnetAssociationMgt (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to data.template_file.backend (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach5
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-KMS-Policy (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-KMS-Policy
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table.rtPrivate[0]
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnetAviVs[2]
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.backend (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table_association.subnetAssociationBackend[2]
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach4 (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-R53-Policy
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.ansible-EC2-Policy
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach1
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to null_resource.foo7
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching provisioner "file" config schema to null_resource.foo7
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching provisioner "file" config schema to null_resource.foo7
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching provisioner "remote-exec" config schema to null_resource.foo7
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route53_record.jump
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role.vmimport (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.sgAvi
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.sgJump
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.sgMysql
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_key_pair.kpBackend
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach3
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_vpc.vpc (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy.vmimport (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-IAM-Policy (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach5 (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.sgJump (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role.AviController-Refined-Role
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnetBackend[2]
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/template"]
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_vpc.vpc[0]
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-ASG-Notification (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy.vmimport
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table.rtPrivate (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_instance_profile.Ansible-Instance-Profile
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_internet_gateway.internetGateway[0]
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/null"]
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.sgOpencart
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.aviCtrl[0]
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnetAviVs (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_launch_template.templateAsg (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table_association.subnetAssociationMysql (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.sgBackend (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach2
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-SNS-Policy (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table_association.subnetAssociationBackend (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_availability_zones.available (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_instance.jump (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching provisioner "remote-exec" config schema to aws_instance.jump (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_ami.aviAmi (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnetAviVs[0]
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table_association.subnetAssociationAviVs[2]
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route53_record.jump (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.avi-attach6
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnetMgt
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_eip.eipForNatGw
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table_association.subnetAssociationMysql
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.AviController-EC2-Policy (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnetBackend (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role.AviController-Refined-Role (expand)
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.subnetAviSeMgt[2]
2021/02/13 15:00:07 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table_association.subnetAssociationAviSeMgt[0]
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_launch_template.templateAsg" references: [var.backend data.aws_ami.ubuntuBionic (expand) var.autoScalingGroupUserdata aws_security_group.sgBackend (expand) aws_security_group.sgBackend aws_security_group.sgBackend]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-AutoScalingGroup-Policy" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-EC2-Policy" references: []
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "aws_subnet.subnetBackend#destroy"
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_instance.backend[1]" references: [data.aws_availability_zones.available (expand) aws_security_group.sgBackend (expand) aws_security_group.sgBackend aws_security_group.sgBackend data.template_file.backend (expand) var.backend aws_subnet.subnetBackend[0] aws_subnet.subnetBackend[2] aws_subnet.subnetBackend (expand) aws_subnet.subnetBackend[1] data.aws_ami.ubuntuBionic (expand) aws_key_pair.kpBackend aws_key_pair.kpBackend aws_key_pair.kpBackend (expand)]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach8 (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_subnet.subnetMgt (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationAviVs (expand)" references: [data.aws_availability_zones.available (expand)]
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_subnet.subnetBackend[0]" references: [data.aws_availability_zones.available (expand) aws_vpc.vpc[0] data.aws_availability_zones.available (expand) var.aws]
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "aws_subnet.subnetAviSeMgt#destroy"
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationAviSeMgt[2]" references: [data.aws_availability_zones.available (expand) aws_route_table.rt[0] aws_subnet.subnetAviSeMgt[2] aws_subnet.subnetAviSeMgt (expand) aws_subnet.subnetAviSeMgt[1] aws_subnet.subnetAviSeMgt[0]]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-SQS-Policy (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_instance.aviCtrl (expand)" references: [var.controller]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "output.ubuntuFocal" references: [data.aws_ami.ubuntuFocal (expand)]
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "aws_subnet.subnetBackend#destroy"
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_instance.backend[2]" references: [data.aws_availability_zones.available (expand) data.aws_ami.ubuntuBionic (expand) aws_key_pair.kpBackend aws_key_pair.kpBackend aws_key_pair.kpBackend (expand) aws_security_group.sgBackend (expand) aws_security_group.sgBackend aws_security_group.sgBackend data.template_file.backend (expand) var.backend aws_subnet.subnetBackend[0] aws_subnet.subnetBackend[2] aws_subnet.subnetBackend (expand) aws_subnet.subnetBackend[1]]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_route53_record.aviCtrl" references: [data.aws_route53_zone.awsAviDemo (expand) aws_instance.aviCtrl[0] var.controller var.aws]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_internet_gateway.internetGateway (expand)" references: [var.aws]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "var.public_key_path" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "var.jump" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "data.template_file.backend (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "var.backend" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach5" references: [aws_iam_role.AviController-Refined-Role aws_iam_role.AviController-Refined-Role aws_iam_role.AviController-Refined-Role (expand) aws_iam_policy.AviController-SQS-Policy (expand) aws_iam_policy.AviController-SQS-Policy aws_iam_policy.AviController-SQS-Policy]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_autoscaling_group.autoScalingGroup" references: [aws_subnet.subnetBackend[0] aws_subnet.subnetBackend[1] aws_subnet.subnetBackend[2] aws_launch_template.templateAsg aws_launch_template.templateAsg aws_launch_template.templateAsg (expand)]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach6 (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-AutoScalingGroup-Policy (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationMgt (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-KMS-Policy" references: []
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "aws_vpc.vpc#destroy"
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_route_table.rtPrivate[0]" references: [var.aws aws_vpc.vpc (expand) aws_vpc.vpc[0] aws_nat_gateway.natGw aws_nat_gateway.natGw aws_nat_gateway.natGw (expand)]
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_subnet.subnetAviVs[2]" references: [data.aws_availability_zones.available (expand) aws_vpc.vpc[0] data.aws_availability_zones.available (expand) var.aws]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "provisioner.file" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-KMS-Policy (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "var.autoScalingGroupUserdata" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "output.az" references: [data.aws_availability_zones.available (expand)]
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "aws_subnet.subnetBackend#destroy"
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationBackend[2]" references: [data.aws_availability_zones.available (expand) aws_subnet.subnetBackend[0] aws_subnet.subnetBackend[2] aws_subnet.subnetBackend (expand) aws_subnet.subnetBackend[1] aws_route_table.rtPrivate[0]]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_instance.backend (expand)" references: [data.aws_availability_zones.available (expand)]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "var.ansible" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "var.controller" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach1" references: [aws_iam_policy.AviController-EC2-Policy aws_iam_policy.AviController-EC2-Policy aws_iam_policy.AviController-EC2-Policy (expand) aws_iam_role.AviController-Refined-Role aws_iam_role.AviController-Refined-Role aws_iam_role.AviController-Refined-Role (expand)]
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "aws_instance.jump#destroy"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "aws_instance.aviCtrl#destroy"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "aws_instance.aviCtrl#destroy"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "aws_subnet.subnetAviVs#destroy"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "aws_subnet.subnetAviSeMgt#destroy"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "aws_instance.backend#destroy"
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "null_resource.foo7" references: [aws_instance.jump (expand) aws_instance.jump aws_instance.jump aws_instance.jump (expand) aws_instance.jump aws_instance.jump var.privateKey var.jump var.privateKey var.jump aws_instance.jump (expand) aws_instance.jump aws_instance.jump var.privateKey var.privateKey var.jump aws_instance.jump (expand) aws_instance.jump aws_instance.jump var.privateKey var.ansible var.privateKey var.jump aws_instance.jump (expand) aws_instance.jump aws_instance.jump var.privateKey var.ansible var.ansible var.ansible var.avi_username var.avi_password var.controller var.controller aws_instance.aviCtrl (expand) aws_instance.aviCtrl[0] aws_instance.aviCtrl (expand) aws_instance.aviCtrl[0] var.aws data.aws_availability_zones.available (expand) aws_subnet.subnetAviVs[2] aws_subnet.subnetAviVs (expand) aws_subnet.subnetAviVs[0] aws_subnet.subnetAviVs[1] aws_subnet.subnetAviSeMgt[2] aws_subnet.subnetAviSeMgt (expand) aws_subnet.subnetAviSeMgt[1] aws_subnet.subnetAviSeMgt[0] aws_vpc.vpc[0] aws_instance.backend[1] aws_instance.backend[2] aws_instance.backend (expand) aws_instance.backend[0] aws_autoscaling_group.autoScalingGroup aws_autoscaling_group.autoScalingGroup aws_autoscaling_group.autoScalingGroup (expand)]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_route53_record.jump" references: [data.aws_route53_zone.awsAviDemo (expand) aws_instance.jump (expand) aws_instance.jump aws_instance.jump var.jump var.aws]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/aws\"]" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach4 (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-R53-Policy" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_policy.ansible-EC2-Policy" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_security_group.sgMysql" references: [aws_vpc.vpc[0]]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_role.vmimport (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_security_group.sgAvi" references: [aws_vpc.vpc[0]]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_security_group.sgJump" references: [aws_vpc.vpc[0]]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach5 (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_security_group.sgJump (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_role.AviController-Refined-Role" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_key_pair.kpBackend" references: [var.public_key_path]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach3" references: [aws_iam_role.AviController-Refined-Role aws_iam_role.AviController-Refined-Role aws_iam_role.AviController-Refined-Role (expand) aws_iam_policy.AviController-AutoScalingGroup-Policy aws_iam_policy.AviController-AutoScalingGroup-Policy aws_iam_policy.AviController-AutoScalingGroup-Policy (expand)]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_vpc.vpc (expand)" references: [var.aws]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_role_policy.vmimport (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-IAM-Policy (expand)" references: []
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_subnet.subnetBackend[2]" references: [data.aws_availability_zones.available (expand) var.aws aws_vpc.vpc[0] data.aws_availability_zones.available (expand)]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/template\"]" references: []
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_vpc.vpc[0]" references: [var.aws var.aws]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "provisioner.remote-exec" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-ASG-Notification (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_role_policy.vmimport" references: [aws_iam_role.vmimport (expand) aws_iam_role.vmimport aws_iam_role.vmimport]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/null\"]" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_route_table.rtPrivate (expand)" references: [var.aws]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_instance_profile.Ansible-Instance-Profile" references: [aws_iam_role.Ansible-Refined-Role aws_iam_role.Ansible-Refined-Role aws_iam_role.Ansible-Refined-Role (expand)]
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "aws_vpc.vpc#destroy"
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_internet_gateway.internetGateway[0]" references: [var.aws aws_vpc.vpc (expand) aws_vpc.vpc[0]]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_security_group.sgBackend (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "output.aviCtrlPublicIp" references: [aws_instance.aviCtrl (expand) aws_instance.aviCtrl[0]]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach2" references: [aws_iam_policy.AviController-R53-Policy aws_iam_policy.AviController-R53-Policy aws_iam_policy.AviController-R53-Policy (expand) aws_iam_role.AviController-Refined-Role aws_iam_role.AviController-Refined-Role aws_iam_role.AviController-Refined-Role (expand)]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_security_group.sgOpencart" references: [aws_vpc.vpc[0]]
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_instance.aviCtrl[0]" references: [var.controller var.controller aws_subnet.subnetMgt (expand) aws_subnet.subnetMgt aws_subnet.subnetMgt data.aws_ami.aviAmi (expand) aws_key_pair.kpAvi (expand) aws_key_pair.kpAvi aws_key_pair.kpAvi aws_security_group.sgAvi aws_security_group.sgAvi aws_security_group.sgAvi (expand) aws_iam_instance_profile.AviController-Instance-Profile aws_iam_instance_profile.AviController-Instance-Profile aws_iam_instance_profile.AviController-Instance-Profile (expand)]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_subnet.subnetAviVs (expand)" references: [data.aws_availability_zones.available (expand)]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_launch_template.templateAsg (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationMysql (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "var.avi_password" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-SNS-Policy (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationBackend (expand)" references: [data.aws_availability_zones.available (expand)]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "data.aws_availability_zones.available (expand)" references: []
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_subnet.subnetAviVs[0]" references: [data.aws_availability_zones.available (expand) var.aws data.aws_availability_zones.available (expand) aws_vpc.vpc[0]]
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "aws_subnet.subnetAviVs#destroy"
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationAviVs[2]" references: [data.aws_availability_zones.available (expand) aws_subnet.subnetAviVs[2] aws_subnet.subnetAviVs (expand) aws_subnet.subnetAviVs[0] aws_subnet.subnetAviVs[1] aws_route_table.rt[0]]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_instance.jump (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "data.aws_ami.aviAmi (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "output.destroy" references: [var.privateKey aws_instance.jump (expand) aws_instance.jump aws_instance.jump var.ansible var.ansible var.controller]
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "aws_internet_gateway.internetGateway#destroy"
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_eip.eipForNatGw" references: [aws_internet_gateway.internetGateway (expand) aws_internet_gateway.internetGateway[0]]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationMysql" references: [aws_subnet.subnetMysql aws_subnet.subnetMysql aws_subnet.subnetMysql (expand) aws_route_table.rtPrivate[0]]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_route53_record.jump (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach6" references: [aws_iam_policy.AviController-KMS-Policy aws_iam_policy.AviController-KMS-Policy aws_iam_policy.AviController-KMS-Policy (expand) aws_iam_role.AviController-Refined-Role aws_iam_role.AviController-Refined-Role aws_iam_role.AviController-Refined-Role (expand)]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_subnet.subnetMgt" references: [var.aws aws_vpc.vpc[0]]
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_subnet.subnetAviSeMgt[2]" references: [data.aws_availability_zones.available (expand) aws_vpc.vpc[0] data.aws_availability_zones.available (expand) var.aws]
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "aws_subnet.subnetAviSeMgt#destroy"
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationAviSeMgt[0]" references: [data.aws_availability_zones.available (expand) aws_route_table.rt[0] aws_subnet.subnetAviSeMgt[2] aws_subnet.subnetAviSeMgt (expand) aws_subnet.subnetAviSeMgt[1] aws_subnet.subnetAviSeMgt[0]]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-EC2-Policy (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_subnet.subnetBackend (expand)" references: [data.aws_availability_zones.available (expand)]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_role.AviController-Refined-Role (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_key_pair.kpAvi (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach2 (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-ASG-Notification" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_instance_profile.Ansible-Instance-Profile (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach7 (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.ansible-attach1 (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_instance_profile.AviController-Instance-Profile" references: [aws_iam_role.AviController-Refined-Role aws_iam_role.AviController-Refined-Role aws_iam_role.AviController-Refined-Role (expand)]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "null_resource.foo7 (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_security_group.sgAvi (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_key_pair.kpOpencart" references: [var.public_key_path]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_key_pair.kpJump" references: [var.public_key_path]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach4" references: [aws_iam_role.AviController-Refined-Role aws_iam_role.AviController-Refined-Role aws_iam_role.AviController-Refined-Role (expand) aws_iam_policy.AviController-SNS-Policy (expand) aws_iam_policy.AviController-SNS-Policy aws_iam_policy.AviController-SNS-Policy]
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "aws_subnet.subnetBackend#destroy"
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationBackend[1]" references: [data.aws_availability_zones.available (expand) aws_route_table.rtPrivate[0] aws_subnet.subnetBackend[0] aws_subnet.subnetBackend[2] aws_subnet.subnetBackend (expand) aws_subnet.subnetBackend[1]]
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "aws_subnet.subnetAviSeMgt#destroy"
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationAviSeMgt[1]" references: [data.aws_availability_zones.available (expand) aws_route_table.rt[0] aws_subnet.subnetAviSeMgt[2] aws_subnet.subnetAviSeMgt (expand) aws_subnet.subnetAviSeMgt[1] aws_subnet.subnetAviSeMgt[0]]
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "aws_subnet.subnetAviVs#destroy"
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationAviVs[0]" references: [data.aws_availability_zones.available (expand) aws_subnet.subnetAviVs[2] aws_subnet.subnetAviVs (expand) aws_subnet.subnetAviVs[0] aws_subnet.subnetAviVs[1] aws_route_table.rt[0]]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_key_pair.kpJump (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "data.template_file.jump (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-SNS-Policy" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_subnet.subnetAviSeMgt (expand)" references: [data.aws_availability_zones.available (expand)]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach8" references: [aws_iam_policy.AviController-IAM-Policy (expand) aws_iam_policy.AviController-IAM-Policy aws_iam_policy.AviController-IAM-Policy aws_iam_role.AviController-Refined-Role aws_iam_role.AviController-Refined-Role aws_iam_role.AviController-Refined-Role (expand)]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_subnet.subnetMysql" references: [var.aws aws_vpc.vpc[0]]
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_subnet.subnetAviSeMgt[1]" references: [data.aws_availability_zones.available (expand) data.aws_availability_zones.available (expand) var.aws aws_vpc.vpc[0]]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach1 (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_security_group.sgMysql (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "data.aws_route53_zone.awsAviDemo (expand)" references: []
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "aws_subnet.subnetBackend#destroy"
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationBackend[0]" references: [data.aws_availability_zones.available (expand) aws_route_table.rtPrivate[0] aws_subnet.subnetBackend[0] aws_subnet.subnetBackend[2] aws_subnet.subnetBackend (expand) aws_subnet.subnetBackend[1]]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_key_pair.kpOpencart (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_key_pair.kpMysql" references: [var.public_key_path]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-IAM-Policy" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_route53_record.aviCtrl (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationAviSeMgt (expand)" references: [data.aws_availability_zones.available (expand)]
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_subnet.subnetAviSeMgt[0]" references: [data.aws_availability_zones.available (expand) data.aws_availability_zones.available (expand) var.aws aws_vpc.vpc[0]]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "data.aws_ami.ubuntuBionic (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_role.Ansible-Refined-Role" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_key_pair.kpAvi" references: [var.public_key_path]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.ansible-attach1" references: [aws_iam_role.Ansible-Refined-Role aws_iam_role.Ansible-Refined-Role aws_iam_role.Ansible-Refined-Role (expand) aws_iam_policy.ansible-EC2-Policy aws_iam_policy.ansible-EC2-Policy aws_iam_policy.ansible-EC2-Policy (expand)]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_security_group.sgBackend" references: [aws_vpc.vpc[0]]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach3 (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_autoscaling_group.autoScalingGroup (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_policy.ansible-EC2-Policy (expand)" references: []
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_subnet.subnetAviVs[1]" references: [data.aws_availability_zones.available (expand) aws_vpc.vpc[0] data.aws_availability_zones.available (expand) var.aws]
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "aws_subnet.subnetBackend#destroy"
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_instance.backend[0]" references: [data.aws_availability_zones.available (expand) data.aws_ami.ubuntuBionic (expand) aws_key_pair.kpBackend aws_key_pair.kpBackend aws_key_pair.kpBackend (expand) aws_security_group.sgBackend (expand) aws_security_group.sgBackend aws_security_group.sgBackend var.backend data.template_file.backend (expand) aws_subnet.subnetBackend[0] aws_subnet.subnetBackend[2] aws_subnet.subnetBackend (expand) aws_subnet.subnetBackend[1]]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "output.ubuntuBionic" references: [data.aws_ami.ubuntuBionic (expand)]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-SQS-Policy" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_role.vmimport" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_nat_gateway.natGw" references: [aws_eip.eipForNatGw aws_eip.eipForNatGw aws_eip.eipForNatGw (expand) aws_subnet.subnetMgt (expand) aws_subnet.subnetMgt aws_subnet.subnetMgt]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_key_pair.kpBackend (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_instance_profile.AviController-Instance-Profile (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "data.aws_ami.ubuntuFocal (expand)" references: []
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "aws_vpc.vpc#destroy"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "aws_internet_gateway.internetGateway#destroy"
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_route_table.rt[0]" references: [var.aws aws_vpc.vpc (expand) aws_vpc.vpc[0] aws_internet_gateway.internetGateway (expand) aws_internet_gateway.internetGateway[0]]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_route_table.rt (expand)" references: [var.aws]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "output.jumpPublicIp" references: [aws_instance.jump (expand) aws_instance.jump aws_instance.jump]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.avi-attach7" references: [aws_iam_policy.AviController-ASG-Notification (expand) aws_iam_policy.AviController-ASG-Notification aws_iam_policy.AviController-ASG-Notification aws_iam_role.AviController-Refined-Role aws_iam_role.AviController-Refined-Role aws_iam_role.AviController-Refined-Role (expand)]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_eip.eipForNatGw (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "var.aws" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "output.aviAmi" references: [data.aws_ami.aviAmi (expand)]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationMgt" references: [aws_subnet.subnetMgt (expand) aws_subnet.subnetMgt aws_subnet.subnetMgt aws_route_table.rt[0]]
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_subnet.subnetBackend[1]" references: [data.aws_availability_zones.available (expand) data.aws_availability_zones.available (expand) var.aws aws_vpc.vpc[0]]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_key_pair.kpMysql (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_nat_gateway.natGw (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "var.avi_username" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_policy.AviController-R53-Policy (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "var.privateKey" references: []
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "count.index"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "aws_subnet.subnetAviVs#destroy"
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_route_table_association.subnetAssociationAviVs[1]" references: [data.aws_availability_zones.available (expand) aws_subnet.subnetAviVs[2] aws_subnet.subnetAviVs (expand) aws_subnet.subnetAviVs[0] aws_subnet.subnetAviVs[1] aws_route_table.rt[0]]
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "self"
2021/02/13 15:00:07 [INFO] ReferenceTransformer: reference not found: "self"
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_instance.jump" references: [var.jump aws_subnet.subnetMgt (expand) aws_subnet.subnetMgt aws_subnet.subnetMgt data.aws_ami.ubuntuFocal (expand) aws_key_pair.kpJump aws_key_pair.kpJump aws_key_pair.kpJump (expand) aws_security_group.sgJump aws_security_group.sgJump aws_security_group.sgJump (expand) aws_iam_instance_profile.Ansible-Instance-Profile aws_iam_instance_profile.Ansible-Instance-Profile aws_iam_instance_profile.Ansible-Instance-Profile (expand) data.template_file.jump (expand) var.privateKey var.jump var.privateKey var.jump]
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_iam_role.Ansible-Refined-Role (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_subnet.subnetMysql (expand)" references: []
2021/02/13 15:00:07 [DEBUG] ReferenceTransformer: "aws_security_group.sgOpencart (expand)" references: []
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup - *terraform.NodeApplyableResourceInstance
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
    aws_launch_template.templateAsg - *terraform.NodeApplyableResourceInstance
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_eip.eipForNatGw - *terraform.NodeApplyableResourceInstance
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-ASG-Notification - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-IAM-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-KMS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-R53-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SNS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SQS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.ansible-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.ansible-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-R53-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SNS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SQS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-KMS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-ASG-Notification - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-IAM-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.controller - *terraform.NodeRootVariable
  aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpAvi - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgAvi - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.controller - *terraform.NodeRootVariable
  aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.backend[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  aws_instance.backend[1] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  aws_instance.backend[2] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpJump - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgJump - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_key_pair.kpAvi - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpJump - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpMysql - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpOpencart - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_launch_template.templateAsg - *terraform.NodeApplyableResourceInstance
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.autoScalingGroupUserdata - *terraform.NodeRootVariable
    var.backend - *terraform.NodeRootVariable
  aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_nat_gateway.natGw - *terraform.NodeApplyableResourceInstance
    aws_eip.eipForNatGw - *terraform.NodeApplyableResourceInstance
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.aviCtrl - *terraform.NodeApplyableResourceInstance
    aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
  aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
  aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_nat_gateway.natGw - *terraform.NodeApplyableResourceInstance
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMgt - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMysql - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMysql - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgAvi - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgJump - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgMysql - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgOpencart - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetMysql - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  data.template_file.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  null_resource.foo7 - *terraform.NodeApplyableResourceInstance
    aws_autoscaling_group.autoScalingGroup - *terraform.NodeApplyableResourceInstance
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.backend[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend[1] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend[2] - *terraform.NodeApplyableResourceInstance
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ansible - *terraform.NodeRootVariable
    var.avi_password - *terraform.NodeRootVariable
    var.avi_username - *terraform.NodeRootVariable
    var.aws - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  output.aviAmi - *terraform.NodeApplyableOutput
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
  output.az - *terraform.NodeApplyableOutput
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
  output.destroy - *terraform.NodeApplyableOutput
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    var.ansible - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  output.jumpPublicIp - *terraform.NodeApplyableOutput
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
  output.ubuntuBionic - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
  output.ubuntuFocal - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_iam_role_policy_attachment.avi-attach5 depends on [aws_iam_policy.AviController-SQS-Policy aws_iam_role.AviController-Refined-Role]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_autoscaling_group.autoScalingGroup depends on [aws_launch_template.templateAsg aws_security_group.sgBackend aws_subnet.subnetBackend aws_vpc.vpc data.aws_ami.ubuntuBionic data.aws_availability_zones.available]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_iam_policy.AviController-KMS-Policy depends on []
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_route_table.rtPrivate depends on [aws_eip.eipForNatGw aws_internet_gateway.internetGateway aws_nat_gateway.natGw aws_subnet.subnetMgt aws_vpc.vpc]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_subnet.subnetAviVs depends on [aws_vpc.vpc data.aws_availability_zones.available]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_route_table_association.subnetAssociationBackend depends on [aws_eip.eipForNatGw aws_internet_gateway.internetGateway aws_nat_gateway.natGw aws_route_table.rtPrivate aws_subnet.subnetBackend aws_subnet.subnetMgt aws_vpc.vpc data.aws_availability_zones.available]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_iam_role_policy_attachment.avi-attach1 depends on [aws_iam_policy.AviController-EC2-Policy aws_iam_role.AviController-Refined-Role]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: null_resource.foo7 depends on [aws_autoscaling_group.autoScalingGroup aws_iam_instance_profile.Ansible-Instance-Profile aws_iam_instance_profile.AviController-Instance-Profile aws_iam_role.Ansible-Refined-Role aws_iam_role.AviController-Refined-Role aws_instance.aviCtrl aws_instance.backend aws_instance.jump aws_key_pair.kpAvi aws_key_pair.kpBackend aws_key_pair.kpJump aws_launch_template.templateAsg aws_security_group.sgAvi aws_security_group.sgBackend aws_security_group.sgJump aws_subnet.subnetAviSeMgt aws_subnet.subnetAviVs aws_subnet.subnetBackend aws_subnet.subnetMgt aws_vpc.vpc data.aws_ami.aviAmi data.aws_ami.ubuntuBionic data.aws_ami.ubuntuFocal data.aws_availability_zones.available data.template_file.backend data.template_file.jump]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_route53_record.jump depends on [aws_iam_instance_profile.Ansible-Instance-Profile aws_iam_role.Ansible-Refined-Role aws_instance.jump aws_key_pair.kpJump aws_security_group.sgJump aws_subnet.subnetMgt aws_vpc.vpc data.aws_ami.ubuntuFocal data.aws_route53_zone.awsAviDemo data.template_file.jump]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_iam_policy.AviController-R53-Policy depends on []
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_iam_policy.ansible-EC2-Policy depends on []
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_security_group.sgMysql depends on [aws_vpc.vpc]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_security_group.sgAvi depends on [aws_vpc.vpc]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_security_group.sgJump depends on [aws_vpc.vpc]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_iam_role.AviController-Refined-Role depends on []
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_key_pair.kpBackend depends on []
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_iam_role_policy_attachment.avi-attach3 depends on [aws_iam_policy.AviController-AutoScalingGroup-Policy aws_iam_role.AviController-Refined-Role]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_subnet.subnetBackend depends on [aws_vpc.vpc data.aws_availability_zones.available]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_vpc.vpc depends on []
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_iam_role_policy.vmimport depends on [aws_iam_role.vmimport]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_iam_instance_profile.Ansible-Instance-Profile depends on [aws_iam_role.Ansible-Refined-Role]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_internet_gateway.internetGateway depends on [aws_vpc.vpc]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_iam_role_policy_attachment.avi-attach2 depends on [aws_iam_policy.AviController-R53-Policy aws_iam_role.AviController-Refined-Role]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_security_group.sgOpencart depends on [aws_vpc.vpc]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_instance.aviCtrl depends on [aws_iam_instance_profile.AviController-Instance-Profile aws_iam_role.AviController-Refined-Role aws_key_pair.kpAvi aws_security_group.sgAvi aws_subnet.subnetMgt aws_vpc.vpc data.aws_ami.aviAmi]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_subnet.subnetAviVs depends on [aws_vpc.vpc data.aws_availability_zones.available]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_route_table_association.subnetAssociationAviVs depends on [aws_internet_gateway.internetGateway aws_route_table.rt aws_subnet.subnetAviVs aws_vpc.vpc data.aws_availability_zones.available]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_eip.eipForNatGw depends on [aws_internet_gateway.internetGateway aws_vpc.vpc]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_route_table_association.subnetAssociationMysql depends on [aws_eip.eipForNatGw aws_internet_gateway.internetGateway aws_nat_gateway.natGw aws_route_table.rtPrivate aws_subnet.subnetMgt aws_subnet.subnetMysql aws_vpc.vpc]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_iam_role_policy_attachment.avi-attach6 depends on [aws_iam_policy.AviController-KMS-Policy aws_iam_role.AviController-Refined-Role]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_subnet.subnetMgt depends on [aws_vpc.vpc]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_subnet.subnetAviSeMgt depends on [aws_vpc.vpc data.aws_availability_zones.available]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_route_table_association.subnetAssociationAviSeMgt depends on [aws_internet_gateway.internetGateway aws_route_table.rt aws_subnet.subnetAviSeMgt aws_vpc.vpc data.aws_availability_zones.available]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_iam_policy.AviController-ASG-Notification depends on []
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_iam_instance_profile.AviController-Instance-Profile depends on [aws_iam_role.AviController-Refined-Role]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_key_pair.kpOpencart depends on []
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_key_pair.kpJump depends on []
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_iam_role_policy_attachment.avi-attach4 depends on [aws_iam_policy.AviController-SNS-Policy aws_iam_role.AviController-Refined-Role]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_route_table_association.subnetAssociationBackend depends on [aws_eip.eipForNatGw aws_internet_gateway.internetGateway aws_nat_gateway.natGw aws_route_table.rtPrivate aws_subnet.subnetBackend aws_subnet.subnetMgt aws_vpc.vpc data.aws_availability_zones.available]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_route_table_association.subnetAssociationAviSeMgt depends on [aws_internet_gateway.internetGateway aws_route_table.rt aws_subnet.subnetAviSeMgt aws_vpc.vpc data.aws_availability_zones.available]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_route_table_association.subnetAssociationAviVs depends on [aws_internet_gateway.internetGateway aws_route_table.rt aws_subnet.subnetAviVs aws_vpc.vpc data.aws_availability_zones.available]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_iam_policy.AviController-SNS-Policy depends on []
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_iam_role_policy_attachment.avi-attach8 depends on [aws_iam_policy.AviController-IAM-Policy aws_iam_role.AviController-Refined-Role]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_subnet.subnetMysql depends on [aws_vpc.vpc]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_subnet.subnetAviSeMgt depends on [aws_vpc.vpc data.aws_availability_zones.available]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_route_table_association.subnetAssociationBackend depends on [aws_eip.eipForNatGw aws_internet_gateway.internetGateway aws_nat_gateway.natGw aws_route_table.rtPrivate aws_subnet.subnetBackend aws_subnet.subnetMgt aws_vpc.vpc data.aws_availability_zones.available]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_key_pair.kpMysql depends on []
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_iam_policy.AviController-IAM-Policy depends on []
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_subnet.subnetAviSeMgt depends on [aws_vpc.vpc data.aws_availability_zones.available]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_iam_role.Ansible-Refined-Role depends on []
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_key_pair.kpAvi depends on []
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_iam_role_policy_attachment.ansible-attach1 depends on [aws_iam_policy.ansible-EC2-Policy aws_iam_role.Ansible-Refined-Role]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_security_group.sgBackend depends on [aws_vpc.vpc]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_subnet.subnetAviVs depends on [aws_vpc.vpc data.aws_availability_zones.available]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_instance.backend depends on [aws_key_pair.kpBackend aws_security_group.sgBackend aws_subnet.subnetBackend aws_vpc.vpc data.aws_ami.ubuntuBionic data.aws_availability_zones.available data.template_file.backend]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_iam_policy.AviController-SQS-Policy depends on []
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_iam_role.vmimport depends on []
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_nat_gateway.natGw depends on [aws_eip.eipForNatGw aws_internet_gateway.internetGateway aws_subnet.subnetMgt aws_vpc.vpc]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_route_table.rt depends on [aws_internet_gateway.internetGateway aws_vpc.vpc]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_iam_role_policy_attachment.avi-attach7 depends on [aws_iam_policy.AviController-ASG-Notification aws_iam_role.AviController-Refined-Role]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_route_table_association.subnetAssociationMgt depends on [aws_internet_gateway.internetGateway aws_route_table.rt aws_subnet.subnetMgt aws_vpc.vpc]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_subnet.subnetBackend depends on [aws_vpc.vpc data.aws_availability_zones.available]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_route_table_association.subnetAssociationAviVs depends on [aws_internet_gateway.internetGateway aws_route_table.rt aws_subnet.subnetAviVs aws_vpc.vpc data.aws_availability_zones.available]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_instance.jump depends on [aws_iam_instance_profile.Ansible-Instance-Profile aws_iam_role.Ansible-Refined-Role aws_key_pair.kpJump aws_security_group.sgJump aws_subnet.subnetMgt aws_vpc.vpc data.aws_ami.ubuntuFocal data.template_file.jump]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_launch_template.templateAsg depends on [aws_security_group.sgBackend aws_vpc.vpc data.aws_ami.ubuntuBionic]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_iam_policy.AviController-AutoScalingGroup-Policy depends on []
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_iam_policy.AviController-EC2-Policy depends on []
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_instance.backend depends on [aws_key_pair.kpBackend aws_security_group.sgBackend aws_subnet.subnetBackend aws_vpc.vpc data.aws_ami.ubuntuBionic data.aws_availability_zones.available data.template_file.backend]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_subnet.subnetBackend depends on [aws_vpc.vpc data.aws_availability_zones.available]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_route_table_association.subnetAssociationAviSeMgt depends on [aws_internet_gateway.internetGateway aws_route_table.rt aws_subnet.subnetAviSeMgt aws_vpc.vpc data.aws_availability_zones.available]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_instance.backend depends on [aws_key_pair.kpBackend aws_security_group.sgBackend aws_subnet.subnetBackend aws_vpc.vpc data.aws_ami.ubuntuBionic data.aws_availability_zones.available data.template_file.backend]
2021/02/13 15:00:07 [TRACE] AttachDependenciesTransformer: aws_route53_record.aviCtrl depends on [aws_iam_instance_profile.AviController-Instance-Profile aws_iam_role.AviController-Refined-Role aws_instance.aviCtrl aws_key_pair.kpAvi aws_security_group.sgAvi aws_subnet.subnetMgt aws_vpc.vpc data.aws_ami.aviAmi data.aws_route53_zone.awsAviDemo]
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_iam_role_policy_attachment.avi-attach6" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_subnet.subnetMgt" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_eip.eipForNatGw" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_route_table_association.subnetAssociationMysql" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_subnet.subnetAviSeMgt[2]" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_route_table_association.subnetAssociationAviSeMgt[0]" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_iam_policy.AviController-ASG-Notification" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_key_pair.kpOpencart" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_iam_instance_profile.AviController-Instance-Profile" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_route_table_association.subnetAssociationAviVs[0]" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_iam_policy.AviController-SNS-Policy" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_key_pair.kpJump" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_iam_role_policy_attachment.avi-attach4" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_route_table_association.subnetAssociationBackend[1]" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_route_table_association.subnetAssociationAviSeMgt[1]" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_iam_role_policy_attachment.avi-attach8" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_subnet.subnetMysql" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_subnet.subnetAviSeMgt[1]" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_key_pair.kpMysql" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_iam_policy.AviController-IAM-Policy" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_route_table_association.subnetAssociationBackend[0]" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_subnet.subnetAviSeMgt[0]" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_security_group.sgBackend" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_iam_role.Ansible-Refined-Role" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_key_pair.kpAvi" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_iam_role_policy_attachment.ansible-attach1" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_subnet.subnetAviVs[1]" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_instance.backend[0]" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_iam_policy.AviController-SQS-Policy" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_iam_role.vmimport" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_nat_gateway.natGw" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_iam_role_policy_attachment.avi-attach7" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_route_table.rt[0]" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_route_table_association.subnetAssociationMgt" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_subnet.subnetBackend[1]" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_route_table_association.subnetAssociationAviVs[1]" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_instance.jump" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_launch_template.templateAsg" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_iam_policy.AviController-AutoScalingGroup-Policy" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_iam_policy.AviController-EC2-Policy" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_instance.backend[1]" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_subnet.subnetBackend[0]" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_route_table_association.subnetAssociationAviSeMgt[2]" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_instance.backend[2]" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_route53_record.aviCtrl" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_iam_role_policy_attachment.avi-attach5" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_autoscaling_group.autoScalingGroup" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_iam_policy.AviController-KMS-Policy" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_route_table.rtPrivate[0]" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_subnet.subnetAviVs[2]" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_route_table_association.subnetAssociationBackend[2]" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_iam_policy.AviController-R53-Policy" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_iam_policy.ansible-EC2-Policy" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_iam_role_policy_attachment.avi-attach1" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "null_resource.foo7" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_route53_record.jump" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_security_group.sgAvi" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_security_group.sgJump" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_security_group.sgMysql" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_iam_role_policy_attachment.avi-attach3" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_iam_role.AviController-Refined-Role" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_key_pair.kpBackend" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_subnet.subnetBackend[2]" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_vpc.vpc[0]" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_iam_role_policy.vmimport" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_iam_instance_profile.Ansible-Instance-Profile" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_internet_gateway.internetGateway[0]" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_instance.aviCtrl[0]" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_iam_role_policy_attachment.avi-attach2" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_security_group.sgOpencart" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_subnet.subnetAviVs[0]" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] ForcedCBDTransformer: "aws_route_table_association.subnetAssociationAviVs[2]" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer (no changes)
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup - *terraform.NodeApplyableResourceInstance
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
    aws_launch_template.templateAsg - *terraform.NodeApplyableResourceInstance
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_eip.eipForNatGw - *terraform.NodeApplyableResourceInstance
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-ASG-Notification - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-IAM-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-KMS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-R53-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SNS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SQS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.ansible-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.ansible-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-R53-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SNS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SQS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-KMS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-ASG-Notification - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-IAM-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.controller - *terraform.NodeRootVariable
  aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpAvi - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgAvi - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.controller - *terraform.NodeRootVariable
  aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.backend[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  aws_instance.backend[1] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  aws_instance.backend[2] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpJump - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgJump - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_key_pair.kpAvi - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpJump - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpMysql - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpOpencart - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_launch_template.templateAsg - *terraform.NodeApplyableResourceInstance
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.autoScalingGroupUserdata - *terraform.NodeRootVariable
    var.backend - *terraform.NodeRootVariable
  aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_nat_gateway.natGw - *terraform.NodeApplyableResourceInstance
    aws_eip.eipForNatGw - *terraform.NodeApplyableResourceInstance
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.aviCtrl - *terraform.NodeApplyableResourceInstance
    aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
  aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
  aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_nat_gateway.natGw - *terraform.NodeApplyableResourceInstance
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMgt - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMysql - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMysql - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgAvi - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgJump - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgMysql - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgOpencart - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetMysql - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  data.template_file.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_autoscaling_group.autoScalingGroup - *terraform.NodeApplyableResourceInstance
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
    aws_eip.eipForNatGw - *terraform.NodeApplyableResourceInstance
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-ASG-Notification - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-IAM-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-KMS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-R53-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-SNS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-SQS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.ansible-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.backend[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend[1] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend[2] - *terraform.NodeApplyableResourceInstance
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpJump - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpMysql - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpOpencart - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
    aws_launch_template.templateAsg - *terraform.NodeApplyableResourceInstance
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
    aws_nat_gateway.natGw - *terraform.NodeApplyableResourceInstance
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
    aws_route53_record.aviCtrl - *terraform.NodeApplyableResourceInstance
    aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    aws_route53_record.jump - *terraform.NodeApplyableResourceInstance
    aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table_association.subnetAssociationAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table_association.subnetAssociationAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table_association.subnetAssociationBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMgt - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table_association.subnetAssociationMysql - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgAvi - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgJump - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgMysql - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgOpencart - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMysql - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.jump (expand) - *terraform.nodeExpandApplyableResource
    null_resource.foo7 - *terraform.NodeApplyableResourceInstance
    null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
    output.aviAmi - *terraform.NodeApplyableOutput
    output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
    output.az - *terraform.NodeApplyableOutput
    output.destroy - *terraform.NodeApplyableOutput
    output.jumpPublicIp - *terraform.NodeApplyableOutput
    output.ubuntuBionic - *terraform.NodeApplyableOutput
    output.ubuntuFocal - *terraform.NodeApplyableOutput
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ansible - *terraform.NodeRootVariable
    var.autoScalingGroupUserdata - *terraform.NodeRootVariable
    var.avi_password - *terraform.NodeRootVariable
    var.avi_username - *terraform.NodeRootVariable
    var.aws - *terraform.NodeRootVariable
    var.backend - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
    var.public_key_path - *terraform.NodeRootVariable
  null_resource.foo7 - *terraform.NodeApplyableResourceInstance
    aws_autoscaling_group.autoScalingGroup - *terraform.NodeApplyableResourceInstance
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.backend[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend[1] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend[2] - *terraform.NodeApplyableResourceInstance
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ansible - *terraform.NodeRootVariable
    var.avi_password - *terraform.NodeRootVariable
    var.avi_username - *terraform.NodeRootVariable
    var.aws - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  output.aviAmi - *terraform.NodeApplyableOutput
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
  output.az - *terraform.NodeApplyableOutput
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
  output.destroy - *terraform.NodeApplyableOutput
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    var.ansible - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  output.jumpPublicIp - *terraform.NodeApplyableOutput
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
  output.ubuntuBionic - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
  output.ubuntuFocal - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup - *terraform.NodeApplyableResourceInstance
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
    aws_launch_template.templateAsg - *terraform.NodeApplyableResourceInstance
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_eip.eipForNatGw - *terraform.NodeApplyableResourceInstance
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-ASG-Notification - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-IAM-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-KMS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-R53-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SNS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SQS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.ansible-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.ansible-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-R53-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SNS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SQS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-KMS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-ASG-Notification - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-IAM-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.controller - *terraform.NodeRootVariable
  aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpAvi - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgAvi - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.controller - *terraform.NodeRootVariable
  aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.backend[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  aws_instance.backend[1] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  aws_instance.backend[2] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpJump - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgJump - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_key_pair.kpAvi - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpJump - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpMysql - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpOpencart - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_launch_template.templateAsg - *terraform.NodeApplyableResourceInstance
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.autoScalingGroupUserdata - *terraform.NodeRootVariable
    var.backend - *terraform.NodeRootVariable
  aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_nat_gateway.natGw - *terraform.NodeApplyableResourceInstance
    aws_eip.eipForNatGw - *terraform.NodeApplyableResourceInstance
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.aviCtrl - *terraform.NodeApplyableResourceInstance
    aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
  aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
  aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_nat_gateway.natGw - *terraform.NodeApplyableResourceInstance
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMgt - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMysql - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMysql - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgAvi - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgJump - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgMysql - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgOpencart - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetMysql - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  data.template_file.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_autoscaling_group.autoScalingGroup - *terraform.NodeApplyableResourceInstance
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
    aws_eip.eipForNatGw - *terraform.NodeApplyableResourceInstance
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-ASG-Notification - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-IAM-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-KMS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-R53-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-SNS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-SQS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.ansible-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.backend[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend[1] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend[2] - *terraform.NodeApplyableResourceInstance
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpJump - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpMysql - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpOpencart - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
    aws_launch_template.templateAsg - *terraform.NodeApplyableResourceInstance
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
    aws_nat_gateway.natGw - *terraform.NodeApplyableResourceInstance
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
    aws_route53_record.aviCtrl - *terraform.NodeApplyableResourceInstance
    aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    aws_route53_record.jump - *terraform.NodeApplyableResourceInstance
    aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table_association.subnetAssociationAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table_association.subnetAssociationAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table_association.subnetAssociationBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMgt - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table_association.subnetAssociationMysql - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgAvi - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgJump - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgMysql - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgOpencart - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMysql - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.jump (expand) - *terraform.nodeExpandApplyableResource
    null_resource.foo7 - *terraform.NodeApplyableResourceInstance
    null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
    output.aviAmi - *terraform.NodeApplyableOutput
    output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
    output.az - *terraform.NodeApplyableOutput
    output.destroy - *terraform.NodeApplyableOutput
    output.jumpPublicIp - *terraform.NodeApplyableOutput
    output.ubuntuBionic - *terraform.NodeApplyableOutput
    output.ubuntuFocal - *terraform.NodeApplyableOutput
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ansible - *terraform.NodeRootVariable
    var.autoScalingGroupUserdata - *terraform.NodeRootVariable
    var.avi_password - *terraform.NodeRootVariable
    var.avi_username - *terraform.NodeRootVariable
    var.aws - *terraform.NodeRootVariable
    var.backend - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
    var.public_key_path - *terraform.NodeRootVariable
  null_resource.foo7 - *terraform.NodeApplyableResourceInstance
    aws_autoscaling_group.autoScalingGroup - *terraform.NodeApplyableResourceInstance
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.backend[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend[1] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend[2] - *terraform.NodeApplyableResourceInstance
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ansible - *terraform.NodeRootVariable
    var.avi_password - *terraform.NodeRootVariable
    var.avi_username - *terraform.NodeRootVariable
    var.aws - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  output.aviAmi - *terraform.NodeApplyableOutput
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
  output.az - *terraform.NodeApplyableOutput
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
  output.destroy - *terraform.NodeApplyableOutput
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    var.ansible - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  output.jumpPublicIp - *terraform.NodeApplyableOutput
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
  output.ubuntuBionic - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
  output.ubuntuFocal - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    aws_autoscaling_group.autoScalingGroup - *terraform.NodeApplyableResourceInstance
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
    aws_eip.eipForNatGw - *terraform.NodeApplyableResourceInstance
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-ASG-Notification - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-IAM-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-KMS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-R53-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-SNS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-SQS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.ansible-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.backend[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend[1] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend[2] - *terraform.NodeApplyableResourceInstance
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpJump - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpMysql - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpOpencart - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
    aws_launch_template.templateAsg - *terraform.NodeApplyableResourceInstance
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
    aws_nat_gateway.natGw - *terraform.NodeApplyableResourceInstance
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
    aws_route53_record.aviCtrl - *terraform.NodeApplyableResourceInstance
    aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    aws_route53_record.jump - *terraform.NodeApplyableResourceInstance
    aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table_association.subnetAssociationAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table_association.subnetAssociationAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table_association.subnetAssociationBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMgt - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table_association.subnetAssociationMysql - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgAvi - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgJump - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgMysql - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgOpencart - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMysql - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] (close) - *terraform.graphNodeCloseProvider
    null_resource.foo7 - *terraform.NodeApplyableResourceInstance
    null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] (close) - *terraform.graphNodeCloseProvider
    data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.remote-exec - *terraform.NodeProvisioner
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup - *terraform.NodeApplyableResourceInstance
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
    aws_launch_template.templateAsg - *terraform.NodeApplyableResourceInstance
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_eip.eipForNatGw - *terraform.NodeApplyableResourceInstance
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-ASG-Notification - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-IAM-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-KMS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-R53-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SNS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SQS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.ansible-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.ansible-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-R53-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SNS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SQS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-KMS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-ASG-Notification - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-IAM-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.controller - *terraform.NodeRootVariable
  aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpAvi - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgAvi - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.controller - *terraform.NodeRootVariable
  aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.backend[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  aws_instance.backend[1] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  aws_instance.backend[2] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpJump - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgJump - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_key_pair.kpAvi - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpJump - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpMysql - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpOpencart - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_launch_template.templateAsg - *terraform.NodeApplyableResourceInstance
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.autoScalingGroupUserdata - *terraform.NodeRootVariable
    var.backend - *terraform.NodeRootVariable
  aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_nat_gateway.natGw - *terraform.NodeApplyableResourceInstance
    aws_eip.eipForNatGw - *terraform.NodeApplyableResourceInstance
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.aviCtrl - *terraform.NodeApplyableResourceInstance
    aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
  aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
  aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_nat_gateway.natGw - *terraform.NodeApplyableResourceInstance
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMgt - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMysql - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMysql - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgAvi - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgJump - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgMysql - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgOpencart - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetMysql - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  data.template_file.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_autoscaling_group.autoScalingGroup - *terraform.NodeApplyableResourceInstance
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
    aws_eip.eipForNatGw - *terraform.NodeApplyableResourceInstance
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-ASG-Notification - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-IAM-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-KMS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-R53-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-SNS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-SQS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.ansible-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.backend[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend[1] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend[2] - *terraform.NodeApplyableResourceInstance
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpJump - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpMysql - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpOpencart - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
    aws_launch_template.templateAsg - *terraform.NodeApplyableResourceInstance
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
    aws_nat_gateway.natGw - *terraform.NodeApplyableResourceInstance
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
    aws_route53_record.aviCtrl - *terraform.NodeApplyableResourceInstance
    aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    aws_route53_record.jump - *terraform.NodeApplyableResourceInstance
    aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table_association.subnetAssociationAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table_association.subnetAssociationAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table_association.subnetAssociationBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMgt - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table_association.subnetAssociationMysql - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgAvi - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgJump - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgMysql - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgOpencart - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMysql - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.jump (expand) - *terraform.nodeExpandApplyableResource
    null_resource.foo7 - *terraform.NodeApplyableResourceInstance
    null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
    output.aviAmi - *terraform.NodeApplyableOutput
    output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
    output.az - *terraform.NodeApplyableOutput
    output.destroy - *terraform.NodeApplyableOutput
    output.jumpPublicIp - *terraform.NodeApplyableOutput
    output.ubuntuBionic - *terraform.NodeApplyableOutput
    output.ubuntuFocal - *terraform.NodeApplyableOutput
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ansible - *terraform.NodeRootVariable
    var.autoScalingGroupUserdata - *terraform.NodeRootVariable
    var.avi_password - *terraform.NodeRootVariable
    var.avi_username - *terraform.NodeRootVariable
    var.aws - *terraform.NodeRootVariable
    var.backend - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
    var.public_key_path - *terraform.NodeRootVariable
  null_resource.foo7 - *terraform.NodeApplyableResourceInstance
    aws_autoscaling_group.autoScalingGroup - *terraform.NodeApplyableResourceInstance
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.backend[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend[1] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend[2] - *terraform.NodeApplyableResourceInstance
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ansible - *terraform.NodeRootVariable
    var.avi_password - *terraform.NodeRootVariable
    var.avi_username - *terraform.NodeRootVariable
    var.aws - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  output.aviAmi - *terraform.NodeApplyableOutput
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
  output.az - *terraform.NodeApplyableOutput
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
  output.destroy - *terraform.NodeApplyableOutput
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    var.ansible - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  output.jumpPublicIp - *terraform.NodeApplyableOutput
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
  output.ubuntuBionic - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
  output.ubuntuFocal - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    aws_autoscaling_group.autoScalingGroup - *terraform.NodeApplyableResourceInstance
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
    aws_eip.eipForNatGw - *terraform.NodeApplyableResourceInstance
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-ASG-Notification - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-IAM-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-KMS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-R53-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-SNS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-SQS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.ansible-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.backend[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend[1] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend[2] - *terraform.NodeApplyableResourceInstance
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpJump - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpMysql - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpOpencart - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
    aws_launch_template.templateAsg - *terraform.NodeApplyableResourceInstance
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
    aws_nat_gateway.natGw - *terraform.NodeApplyableResourceInstance
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
    aws_route53_record.aviCtrl - *terraform.NodeApplyableResourceInstance
    aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    aws_route53_record.jump - *terraform.NodeApplyableResourceInstance
    aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table_association.subnetAssociationAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table_association.subnetAssociationAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table_association.subnetAssociationBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMgt - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table_association.subnetAssociationMysql - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgAvi - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgJump - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgMysql - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgOpencart - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMysql - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] (close) - *terraform.graphNodeCloseProvider
    null_resource.foo7 - *terraform.NodeApplyableResourceInstance
    null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] (close) - *terraform.graphNodeCloseProvider
    data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
    null_resource.foo7 - *terraform.NodeApplyableResourceInstance
    null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
  provisioner.remote-exec - *terraform.NodeProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    null_resource.foo7 - *terraform.NodeApplyableResourceInstance
    null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup - *terraform.NodeApplyableResourceInstance
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
    aws_launch_template.templateAsg - *terraform.NodeApplyableResourceInstance
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_eip.eipForNatGw - *terraform.NodeApplyableResourceInstance
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-ASG-Notification - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-IAM-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-KMS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-R53-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SNS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SQS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.ansible-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.ansible-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-R53-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SNS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SQS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-KMS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-ASG-Notification - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-IAM-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.controller - *terraform.NodeRootVariable
  aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpAvi - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgAvi - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.controller - *terraform.NodeRootVariable
  aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.backend[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  aws_instance.backend[1] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  aws_instance.backend[2] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.backend - *terraform.NodeRootVariable
  aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpJump - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgJump - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_key_pair.kpAvi - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpJump - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpMysql - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpOpencart - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_launch_template.templateAsg - *terraform.NodeApplyableResourceInstance
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.autoScalingGroupUserdata - *terraform.NodeRootVariable
    var.backend - *terraform.NodeRootVariable
  aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_nat_gateway.natGw - *terraform.NodeApplyableResourceInstance
    aws_eip.eipForNatGw - *terraform.NodeApplyableResourceInstance
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.aviCtrl - *terraform.NodeApplyableResourceInstance
    aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
  aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
  aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_nat_gateway.natGw - *terraform.NodeApplyableResourceInstance
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMgt - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMysql - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMysql - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgAvi - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgJump - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgMysql - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgOpencart - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetMysql - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  data.template_file.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_autoscaling_group.autoScalingGroup - *terraform.NodeApplyableResourceInstance
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
    aws_eip.eipForNatGw - *terraform.NodeApplyableResourceInstance
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-ASG-Notification - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-IAM-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-KMS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-R53-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-SNS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-SQS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.ansible-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.backend[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend[1] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend[2] - *terraform.NodeApplyableResourceInstance
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpJump - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpMysql - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpOpencart - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
    aws_launch_template.templateAsg - *terraform.NodeApplyableResourceInstance
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
    aws_nat_gateway.natGw - *terraform.NodeApplyableResourceInstance
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
    aws_route53_record.aviCtrl - *terraform.NodeApplyableResourceInstance
    aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    aws_route53_record.jump - *terraform.NodeApplyableResourceInstance
    aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table_association.subnetAssociationAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table_association.subnetAssociationAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table_association.subnetAssociationBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMgt - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table_association.subnetAssociationMysql - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgAvi - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgJump - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgMysql - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgOpencart - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMysql - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.jump (expand) - *terraform.nodeExpandApplyableResource
    null_resource.foo7 - *terraform.NodeApplyableResourceInstance
    null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
    output.aviAmi - *terraform.NodeApplyableOutput
    output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
    output.az - *terraform.NodeApplyableOutput
    output.destroy - *terraform.NodeApplyableOutput
    output.jumpPublicIp - *terraform.NodeApplyableOutput
    output.ubuntuBionic - *terraform.NodeApplyableOutput
    output.ubuntuFocal - *terraform.NodeApplyableOutput
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ansible - *terraform.NodeRootVariable
    var.autoScalingGroupUserdata - *terraform.NodeRootVariable
    var.avi_password - *terraform.NodeRootVariable
    var.avi_username - *terraform.NodeRootVariable
    var.aws - *terraform.NodeRootVariable
    var.backend - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
    var.public_key_path - *terraform.NodeRootVariable
  null_resource.foo7 - *terraform.NodeApplyableResourceInstance
    aws_autoscaling_group.autoScalingGroup - *terraform.NodeApplyableResourceInstance
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.backend[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend[1] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend[2] - *terraform.NodeApplyableResourceInstance
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
    var.ansible - *terraform.NodeRootVariable
    var.avi_password - *terraform.NodeRootVariable
    var.avi_username - *terraform.NodeRootVariable
    var.aws - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  output.aviAmi - *terraform.NodeApplyableOutput
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
  output.az - *terraform.NodeApplyableOutput
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
  output.destroy - *terraform.NodeApplyableOutput
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    var.ansible - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  output.jumpPublicIp - *terraform.NodeApplyableOutput
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
  output.ubuntuBionic - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
  output.ubuntuFocal - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    aws_autoscaling_group.autoScalingGroup - *terraform.NodeApplyableResourceInstance
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
    aws_eip.eipForNatGw - *terraform.NodeApplyableResourceInstance
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-ASG-Notification - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-IAM-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-KMS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-R53-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-SNS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.AviController-SQS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_policy.ansible-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    aws_instance.backend[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend[1] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend[2] - *terraform.NodeApplyableResourceInstance
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpJump - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpMysql - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpOpencart - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
    aws_launch_template.templateAsg - *terraform.NodeApplyableResourceInstance
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
    aws_nat_gateway.natGw - *terraform.NodeApplyableResourceInstance
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
    aws_route53_record.aviCtrl - *terraform.NodeApplyableResourceInstance
    aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    aws_route53_record.jump - *terraform.NodeApplyableResourceInstance
    aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table_association.subnetAssociationAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table_association.subnetAssociationAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table_association.subnetAssociationBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMgt - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_route_table_association.subnetAssociationMysql - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgAvi - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgJump - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgMysql - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgOpencart - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMysql - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] (close) - *terraform.graphNodeCloseProvider
    null_resource.foo7 - *terraform.NodeApplyableResourceInstance
    null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] (close) - *terraform.graphNodeCloseProvider
    data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provisioner.file - *terraform.NodeProvisioner
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
    null_resource.foo7 - *terraform.NodeApplyableResourceInstance
    null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
  provisioner.remote-exec - *terraform.NodeProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    null_resource.foo7 - *terraform.NodeApplyableResourceInstance
    null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/null"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/template"] (close) - *terraform.graphNodeCloseProvider
    provisioner.file (close) - *terraform.graphNodeCloseProvisioner
    provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:07 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/13 15:00:07 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  aws_autoscaling_group.autoScalingGroup - *terraform.NodeApplyableResourceInstance
    aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
    aws_launch_template.templateAsg - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
  aws_autoscaling_group.autoScalingGroup (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_eip.eipForNatGw - *terraform.NodeApplyableResourceInstance
    aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
    aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
  aws_eip.eipForNatGw (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
  aws_iam_instance_profile.Ansible-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
  aws_iam_instance_profile.AviController-Instance-Profile (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-ASG-Notification - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-ASG-Notification (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-AutoScalingGroup-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-IAM-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-IAM-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-KMS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-KMS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-R53-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-R53-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SNS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-SNS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.AviController-SQS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.AviController-SQS-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_policy.ansible-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_policy.ansible-EC2-Policy (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.Ansible-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.AviController-Refined-Role (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role.vmimport (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy.vmimport (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.ansible-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_role.Ansible-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.ansible-attach1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-EC2-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach1 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-R53-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach2 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-AutoScalingGroup-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach3 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SNS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach4 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-SQS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach5 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-KMS-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach6 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-ASG-Notification - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeApplyableResourceInstance
    aws_iam_policy.AviController-IAM-Policy - *terraform.NodeApplyableResourceInstance
    aws_iam_role.AviController-Refined-Role - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
  aws_iam_role_policy_attachment.avi-attach8 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.controller - *terraform.NodeRootVariable
  aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.AviController-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_instance.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpAvi - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgAvi - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
  aws_instance.backend[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    var.backend - *terraform.NodeRootVariable
  aws_instance.backend[1] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    var.backend - *terraform.NodeRootVariable
  aws_instance.backend[2] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    var.backend - *terraform.NodeRootVariable
  aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_iam_instance_profile.Ansible-Instance-Profile - *terraform.NodeApplyableResourceInstance
    aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    aws_key_pair.kpJump - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgJump - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.jump (expand) - *terraform.nodeExpandApplyableResource
    var.jump - *terraform.NodeRootVariable
    var.privateKey - *terraform.NodeRootVariable
  aws_instance.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    provisioner.remote-exec - *terraform.NodeProvisioner
  aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
    aws_internet_gateway.internetGateway (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
  aws_key_pair.kpAvi - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpAvi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpBackend - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpJump - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpJump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpMysql - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_key_pair.kpOpencart - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
    var.public_key_path - *terraform.NodeRootVariable
  aws_key_pair.kpOpencart (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_launch_template.templateAsg - *terraform.NodeApplyableResourceInstance
    aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
    aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    var.autoScalingGroupUserdata - *terraform.NodeRootVariable
    var.backend - *terraform.NodeRootVariable
  aws_launch_template.templateAsg (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_nat_gateway.natGw - *terraform.NodeApplyableResourceInstance
    aws_eip.eipForNatGw - *terraform.NodeApplyableResourceInstance
    aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
  aws_nat_gateway.natGw (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.aviCtrl - *terraform.NodeApplyableResourceInstance
    aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
  aws_route53_record.aviCtrl (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route53_record.jump - *terraform.NodeApplyableResourceInstance
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
    data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
  aws_route53_record.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_nat_gateway.natGw - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_internet_gateway.internetGateway[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
  aws_route_table_association.subnetAssociationAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
  aws_route_table_association.subnetAssociationAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
  aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
  aws_route_table_association.subnetAssociationAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
  aws_route_table_association.subnetAssociationAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
  aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
  aws_route_table_association.subnetAssociationBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
  aws_route_table_association.subnetAssociationBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
  aws_route_table_association.subnetAssociationBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
  aws_route_table_association.subnetAssociationMgt - *terraform.NodeApplyableResourceInstance
    aws_route_table.rt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
  aws_route_table_association.subnetAssociationMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_route_table_association.subnetAssociationMysql - *terraform.NodeApplyableResourceInstance
    aws_route_table.rtPrivate[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_subnet.subnetMysql - *terraform.NodeApplyableResourceInstance
  aws_route_table_association.subnetAssociationMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgAvi - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
  aws_security_group.sgAvi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgBackend - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
  aws_security_group.sgBackend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgJump - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
  aws_security_group.sgJump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgMysql - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
  aws_security_group.sgMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_security_group.sgOpencart - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
  aws_security_group.sgOpencart (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
  aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
  aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
  aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
  aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
  aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
  aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
  aws_subnet.subnetBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
  aws_subnet.subnetBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
  aws_subnet.subnetBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetBackend (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
  aws_subnet.subnetMgt - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
  aws_subnet.subnetMgt (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_subnet.subnetMysql - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
    aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
  aws_subnet.subnetMysql (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
    var.aws - *terraform.NodeRootVariable
  aws_vpc.vpc[0] - *terraform.NodeApplyableResourceInstance
    aws_vpc.vpc (expand) - *terraform.nodeExpandApplyableResource
  data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.aws_route53_zone.awsAviDemo (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  data.template_file.jump (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_iam_role_policy.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpMysql - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpOpencart - *terraform.NodeApplyableResourceInstance
    aws_route53_record.aviCtrl - *terraform.NodeApplyableResourceInstance
    aws_route53_record.jump - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMgt - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMysql - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgMysql - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgOpencart - *terraform.NodeApplyableResourceInstance
    null_resource.foo7 - *terraform.NodeApplyableResourceInstance
    output.aviAmi - *terraform.NodeApplyableOutput
    output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
    output.az - *terraform.NodeApplyableOutput
    output.destroy - *terraform.NodeApplyableOutput
    output.jumpPublicIp - *terraform.NodeApplyableOutput
    output.ubuntuBionic - *terraform.NodeApplyableOutput
    output.ubuntuFocal - *terraform.NodeApplyableOutput
  null_resource.foo7 - *terraform.NodeApplyableResourceInstance
    aws_autoscaling_group.autoScalingGroup - *terraform.NodeApplyableResourceInstance
    aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend[1] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend[2] - *terraform.NodeApplyableResourceInstance
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_subnet.subnetAviVs[2] - *terraform.NodeApplyableResourceInstance
    null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
    var.ansible - *terraform.NodeRootVariable
    var.avi_password - *terraform.NodeRootVariable
    var.avi_username - *terraform.NodeRootVariable
  null_resource.foo7 (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
    provisioner.file - *terraform.NodeProvisioner
    provisioner.remote-exec - *terraform.NodeProvisioner
  output.aviAmi - *terraform.NodeApplyableOutput
    data.aws_ami.aviAmi (expand) - *terraform.nodeExpandApplyableResource
  output.aviCtrlPublicIp - *terraform.NodeApplyableOutput
    aws_instance.aviCtrl[0] - *terraform.NodeApplyableResourceInstance
  output.az - *terraform.NodeApplyableOutput
    data.aws_availability_zones.available (expand) - *terraform.nodeExpandApplyableResource
  output.destroy - *terraform.NodeApplyableOutput
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
    var.ansible - *terraform.NodeRootVariable
    var.controller - *terraform.NodeRootVariable
  output.jumpPublicIp - *terraform.NodeApplyableOutput
    aws_instance.jump - *terraform.NodeApplyableResourceInstance
  output.ubuntuBionic - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuBionic (expand) - *terraform.nodeExpandApplyableResource
  output.ubuntuFocal - *terraform.NodeApplyableOutput
    data.aws_ami.ubuntuFocal (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/aws"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    aws_autoscaling_group.autoScalingGroup - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy.vmimport - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.ansible-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach1 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach2 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach3 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach4 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach5 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach6 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach7 - *terraform.NodeApplyableResourceInstance
    aws_iam_role_policy_attachment.avi-attach8 - *terraform.NodeApplyableResourceInstance
    aws_instance.backend[0] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend[1] - *terraform.NodeApplyableResourceInstance
    aws_instance.backend[2] - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpMysql - *terraform.NodeApplyableResourceInstance
    aws_key_pair.kpOpencart - *terraform.NodeApplyableResourceInstance
    aws_route53_record.aviCtrl - *terraform.NodeApplyableResourceInstance
    aws_route53_record.jump - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviSeMgt[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationAviVs[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend[0] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend[1] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationBackend[2] - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMgt - *terraform.NodeApplyableResourceInstance
    aws_route_table_association.subnetAssociationMysql - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgMysql - *terraform.NodeApplyableResourceInstance
    aws_security_group.sgOpencart - *terraform.NodeApplyableResourceInstance
  provider["registry.terraform.io/hashicorp/null"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/null"] (close) - *terraform.graphNodeCloseProvider
    null_resource.foo7 - *terraform.NodeApplyableResourceInstance
  provider["registry.terraform.io/hashicorp/template"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/template"] (close) - *terraform.graphNodeCloseProvider
    data.template_file.backend (expand) - *terraform.nodeExpandApplyableResource
    data.template_file.jump (expand) - *terraform.nodeExpandApplyableResource
  provisioner.file - *terraform.NodeProvisioner
  provisioner.file (close) - *terraform.graphNodeCloseProvisioner
    null_resource.foo7 - *terraform.NodeApplyableResourceInstance
  provisioner.remote-exec - *terraform.NodeProvisioner
  provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
    null_resource.foo7 - *terraform.NodeApplyableResourceInstance
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/aws"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/null"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/template"] (close) - *terraform.graphNodeCloseProvider
    provisioner.file (close) - *terraform.graphNodeCloseProvisioner
    provisioner.remote-exec (close) - *terraform.graphNodeCloseProvisioner
  var.ansible - *terraform.NodeRootVariable
  var.autoScalingGroupUserdata - *terraform.NodeRootVariable
  var.avi_password - *terraform.NodeRootVariable
  var.avi_username - *terraform.NodeRootVariable
  var.aws - *terraform.NodeRootVariable
  var.backend - *terraform.NodeRootVariable
  var.controller - *terraform.NodeRootVariable
  var.jump - *terraform.NodeRootVariable
  var.privateKey - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  ------
2021/02/13 15:00:07 [DEBUG] Starting graph walk: walkApply
2021/02/13 15:00:07 [TRACE] dag/walk: visiting "provisioner.file"
2021/02/13 15:00:07 [TRACE] vertex "provisioner.file": starting visit (*terraform.NodeProvisioner)
2021/02/13 15:00:07 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/aws\"]"
2021/02/13 15:00:07 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-13T15:00:07.636Z [DEBUG] plugin: starting plugin: path=/usr/bin/terraform args=[/usr/bin/terraform, internal-plugin, provisioner, file]
2021-02-13T15:00:07.636Z [INFO]  plugin: configuring client automatic mTLS
2021/02/13 15:00:07 [TRACE] dag/walk: visiting "var.jump"
2021/02/13 15:00:07 [TRACE] vertex "var.jump": starting visit (*terraform.NodeRootVariable)
2021/02/13 15:00:07 [TRACE] vertex "var.jump": visit complete
2021/02/13 15:00:07 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/null\"]"
2021/02/13 15:00:07 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/null\"]": starting visit (*terraform.NodeApplyableProvider)
2021/02/13 15:00:07 [TRACE] dag/walk: visiting "provisioner.remote-exec"
2021/02/13 15:00:07 [TRACE] vertex "provisioner.remote-exec": starting visit (*terraform.NodeProvisioner)
2021/02/13 15:00:07 [TRACE] dag/walk: visiting "var.backend"
2021/02/13 15:00:07 [TRACE] vertex "var.backend": starting visit (*terraform.NodeRootVariable)
2021/02/13 15:00:07 [TRACE] vertex "var.backend": visit complete
2021/02/13 15:00:07 [TRACE] dag/walk: visiting "var.privateKey"
2021/02/13 15:00:07 [TRACE] vertex "var.privateKey": starting visit (*terraform.NodeRootVariable)
2021/02/13 15:00:07 [TRACE] vertex "var.privateKey": visit complete
2021/02/13 15:00:07 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/template\"]"
2021/02/13 15:00:07 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/template\"]": starting visit (*terraform.NodeApplyableProvider)
2021/02/13 15:00:07 [TRACE] dag/walk: visiting "var.controller"
2021/02/13 15:00:07 [TRACE] vertex "var.controller": starting visit (*terraform.NodeRootVariable)
2021/02/13 15:00:07 [TRACE] vertex "var.controller": visit complete
2021/02/13 15:00:07 [TRACE] dag/walk: visiting "var.avi_username"
2021/02/13 15:00:07 [TRACE] vertex "var.avi_username": starting visit (*terraform.NodeRootVariable)
2021/02/13 15:00:07 [TRACE] vertex "var.avi_username": visit complete
2021/02/13 15:00:07 [TRACE] dag/walk: visiting "var.public_key_path"
2021/02/13 15:00:07 [TRACE] vertex "var.public_key_path": starting visit (*terraform.NodeRootVariable)
2021/02/13 15:00:07 [TRACE] vertex "var.public_key_path": visit complete
2021/02/13 15:00:07 [TRACE] dag/walk: visiting "var.ansible"
2021/02/13 15:00:07 [TRACE] vertex "var.ansible": starting visit (*terraform.NodeRootVariable)
2021/02/13 15:00:07 [TRACE] vertex "var.ansible": visit complete
2021/02/13 15:00:07 [TRACE] dag/walk: visiting "var.autoScalingGroupUserdata"
2021/02/13 15:00:07 [TRACE] vertex "var.autoScalingGroupUserdata": starting visit (*terraform.NodeRootVariable)
2021/02/13 15:00:07 [TRACE] vertex "var.autoScalingGroupUserdata": visit complete
2021/02/13 15:00:07 [TRACE] dag/walk: visiting "var.avi_password"
2021/02/13 15:00:07 [TRACE] vertex "var.avi_password": starting visit (*terraform.NodeRootVariable)
2021/02/13 15:00:07 [TRACE] vertex "var.avi_password": visit complete
2021/02/13 15:00:07 [TRACE] dag/walk: visiting "var.aws"
2021/02/13 15:00:07 [TRACE] vertex "var.aws": starting visit (*terraform.NodeRootVariable)
2021/02/13 15:00:07 [TRACE] vertex "var.aws": visit complete
2021-02-13T15:00:07.637Z [DEBUG] plugin: plugin started: path=/usr/bin/terraform pid=9291
2021-02-13T15:00:07.637Z [DEBUG] plugin: waiting for RPC address: path=/usr/bin/terraform
2021-02-13T15:00:07.662Z [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.22.0/linux_amd64/terraform-provider-aws_v3.22.0_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/aws/3.22.0/linux_amd64/terraform-provider-aws_v3.22.0_x5]
2021-02-13T15:00:07.665Z [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.22.0/linux_amd64/terraform-provider-aws_v3.22.0_x5 pid=9301
2021-02-13T15:00:07.665Z [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.22.0/linux_amd64/terraform-provider-aws_v3.22.0_x5
2021-02-13T15:00:07.684Z [DEBUG] plugin: using plugin: version=5
2021/02/13 15:00:07 [TRACE] vertex "provisioner.file": visit complete
2021-02-13T15:00:07.685Z [DEBUG] plugin: starting plugin: path=/usr/bin/terraform args=[/usr/bin/terraform, internal-plugin, provisioner, remote-exec]
2021-02-13T15:00:07.685Z [TRACE] plugin.stdio: waiting for stdio data
2021-02-13T15:00:07.689Z [DEBUG] plugin: plugin started: path=/usr/bin/terraform pid=9315
2021-02-13T15:00:07.689Z [DEBUG] plugin: waiting for RPC address: path=/usr/bin/terraform
2021-02-13T15:00:07.698Z [INFO]  plugin.terraform-provider-aws_v3.22.0_x5: configuring server automatic mTLS: timestamp=2021-02-13T15:00:07.698Z
2021-02-13T15:00:07.724Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: plugin address: address=/tmp/plugin496284217 network=unix timestamp=2021-02-13T15:00:07.724Z
2021-02-13T15:00:07.724Z [DEBUG] plugin: using plugin: version=5
2021-02-13T15:00:07.742Z [DEBUG] plugin: using plugin: version=5
2021/02/13 15:00:07 [TRACE] vertex "provisioner.remote-exec": visit complete
2021-02-13T15:00:07.743Z [TRACE] plugin.stdio: waiting for stdio data
2021/02/13 15:00:07 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/aws\"]" provider for provider["registry.terraform.io/hashicorp/aws"]
2021/02/13 15:00:07 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/aws"]: using explicit config only
2021/02/13 15:00:07 [TRACE] GRPCProvider: GetSchema
2021-02-13T15:00:07.776Z [TRACE] plugin.stdio: waiting for stdio data
2021-02-13T15:00:07.776Z [INFO]  plugin: configuring client automatic mTLS
2021-02-13T15:00:07.801Z [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/null/3.0.0/linux_amd64/terraform-provider-null_v3.0.0_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/null/3.0.0/linux_amd64/terraform-provider-null_v3.0.0_x5]
2021-02-13T15:00:07.801Z [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/null/3.0.0/linux_amd64/terraform-provider-null_v3.0.0_x5 pid=9338
2021-02-13T15:00:07.801Z [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/null/3.0.0/linux_amd64/terraform-provider-null_v3.0.0_x5
2021-02-13T15:00:07.813Z [INFO]  plugin.terraform-provider-null_v3.0.0_x5: configuring server automatic mTLS: timestamp=2021-02-13T15:00:07.812Z
2021-02-13T15:00:07.849Z [DEBUG] plugin: using plugin: version=5
2021-02-13T15:00:07.849Z [DEBUG] plugin.terraform-provider-null_v3.0.0_x5: plugin address: address=/tmp/plugin270960771 network=unix timestamp=2021-02-13T15:00:07.849Z
2021/02/13 15:00:07 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/null\"]" provider for provider["registry.terraform.io/hashicorp/null"]
2021/02/13 15:00:07 [TRACE] GRPCProvider: Configure
2021/02/13 15:00:07 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/null"]: no configuration at all
2021/02/13 15:00:07 [TRACE] GRPCProvider: GetSchema
2021-02-13T15:00:07.896Z [TRACE] plugin.stdio: waiting for stdio data
2021-02-13T15:00:07.896Z [INFO]  plugin: configuring client automatic mTLS
2021-02-13T15:00:07.897Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:07 [INFO] AWS Auth provider used: "EnvProvider"
2021-02-13T15:00:07.897Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:07 [DEBUG] Trying to get account information via sts:GetCallerIdentity
2021-02-13T15:00:07.921Z [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/template/2.2.0/linux_amd64/terraform-provider-template_v2.2.0_x4 args=[.terraform/providers/registry.terraform.io/hashicorp/template/2.2.0/linux_amd64/terraform-provider-template_v2.2.0_x4]
2021-02-13T15:00:07.922Z [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/template/2.2.0/linux_amd64/terraform-provider-template_v2.2.0_x4 pid=9347
2021-02-13T15:00:07.922Z [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/template/2.2.0/linux_amd64/terraform-provider-template_v2.2.0_x4
2021-02-13T15:00:07.927Z [INFO]  plugin.terraform-provider-template_v2.2.0_x4: configuring server automatic mTLS: timestamp=2021-02-13T15:00:07.927Z
2021-02-13T15:00:07.968Z [DEBUG] plugin: using plugin: version=5
2021-02-13T15:00:07.969Z [DEBUG] plugin.terraform-provider-template_v2.2.0_x4: plugin address: address=/tmp/plugin717235164 network=unix timestamp=2021-02-13T15:00:07.968Z
2021/02/13 15:00:08 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/template\"]" provider for provider["registry.terraform.io/hashicorp/template"]
2021/02/13 15:00:08 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/template"]: no configuration at all
2021/02/13 15:00:08 [TRACE] GRPCProvider: GetSchema
2021-02-13T15:00:08.020Z [TRACE] plugin.stdio: waiting for stdio data
2021/02/13 15:00:08 [TRACE] GRPCProvider: Configure
2021-02-13T15:00:08.021Z [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unimplemented desc = unknown service plugin.GRPCStdio"
2021/02/13 15:00:08 [TRACE] No provider meta schema returned
2021/02/13 15:00:08 [TRACE] GRPCProvider: Configure
2021/02/13 15:00:08 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/null\"]": visit complete
2021/02/13 15:00:08 [TRACE] dag/walk: visiting "null_resource.foo7 (expand)"
2021/02/13 15:00:08 [TRACE] vertex "null_resource.foo7 (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:08 [TRACE] vertex "null_resource.foo7 (expand)": expanding dynamic subgraph
2021/02/13 15:00:08 [TRACE] vertex "null_resource.foo7 (expand)": entering dynamic subgraph
2021/02/13 15:00:08 [TRACE] dag/walk: visiting "null_resource.foo7"
2021/02/13 15:00:08 [TRACE] vertex "null_resource.foo7": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:08 [TRACE] vertex "null_resource.foo7": visit complete
2021/02/13 15:00:08 [TRACE] vertex "null_resource.foo7 (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:08 [TRACE] vertex "null_resource.foo7 (expand)": visit complete
2021/02/13 15:00:08 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/template\"]": visit complete
2021/02/13 15:00:08 [TRACE] dag/walk: visiting "data.template_file.backend (expand)"
2021/02/13 15:00:08 [TRACE] vertex "data.template_file.backend (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:08 [TRACE] vertex "data.template_file.backend (expand)": expanding dynamic subgraph
2021/02/13 15:00:08 [TRACE] vertex "data.template_file.backend (expand)": entering dynamic subgraph
2021/02/13 15:00:08 [TRACE] dag/walk: visiting "data.template_file.backend"
2021/02/13 15:00:08 [TRACE] vertex "data.template_file.backend": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:08 [TRACE] vertex "data.template_file.backend": visit complete
2021/02/13 15:00:08 [TRACE] vertex "data.template_file.backend (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:08 [TRACE] vertex "data.template_file.backend (expand)": visit complete
2021/02/13 15:00:08 [TRACE] dag/walk: visiting "data.template_file.jump (expand)"
2021/02/13 15:00:08 [TRACE] vertex "data.template_file.jump (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:08 [TRACE] vertex "data.template_file.jump (expand)": expanding dynamic subgraph
2021/02/13 15:00:08 [TRACE] vertex "data.template_file.jump (expand)": entering dynamic subgraph
2021/02/13 15:00:08 [TRACE] dag/walk: visiting "data.template_file.jump"
2021/02/13 15:00:08 [TRACE] vertex "data.template_file.jump": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:08 [TRACE] vertex "data.template_file.jump": visit complete
2021/02/13 15:00:08 [TRACE] vertex "data.template_file.jump (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:08 [TRACE] vertex "data.template_file.jump (expand)": visit complete
2021/02/13 15:00:08 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/template\"] (close)"
2021/02/13 15:00:08 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/template\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/13 15:00:08 [TRACE] GRPCProvider: Close
2021-02-13T15:00:08.023Z [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/template/2.2.0/linux_amd64/terraform-provider-template_v2.2.0_x4 pid=9347
2021-02-13T15:00:08.023Z [DEBUG] plugin: plugin exited
2021/02/13 15:00:08 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/template\"] (close)": visit complete
2021-02-13T15:00:08.868Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:08 [DEBUG] Trying to get account information via sts:GetCallerIdentity
2021/02/13 15:00:10 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/aws\"]": visit complete
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_security_group.sgMysql (expand)"
2021/02/13 15:00:10 [TRACE] vertex "aws_security_group.sgMysql (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_security_group.sgMysql (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_security_group.sgMysql (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "data.aws_ami.ubuntuFocal (expand)"
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_policy.ansible-EC2-Policy (expand)"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.ansible-EC2-Policy (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "data.aws_ami.ubuntuFocal (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.ansible-EC2-Policy (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach1 (expand)"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.ansible-EC2-Policy (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_role.vmimport (expand)"
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_key_pair.kpMysql (expand)"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role.vmimport (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role.vmimport (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach2 (expand)"
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_role_policy.vmimport (expand)"
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_route53_record.jump (expand)"
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_security_group.sgJump (expand)"
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-ASG-Notification (expand)"
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpMysql (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_security_group.sgJump (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-KMS-Policy (expand)"
2021/02/13 15:00:10 [TRACE] vertex "aws_security_group.sgJump (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-KMS-Policy (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_key_pair.kpAvi (expand)"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-KMS-Policy (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "data.aws_route53_zone.awsAviDemo (expand)"
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_subnet.subnetMysql (expand)"
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_role.AviController-Refined-Role (expand)"
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_instance.jump (expand)"
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_route53_record.aviCtrl (expand)"
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-R53-Policy (expand)"
2021/02/13 15:00:10 [TRACE] vertex "aws_instance.jump (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationMgt (expand)"
2021/02/13 15:00:10 [TRACE] vertex "aws_instance.jump (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_route_table_association.subnetAssociationMgt (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_instance.jump (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_launch_template.templateAsg (expand)"
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-AutoScalingGroup-Policy (expand)"
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.ansible-attach1 (expand)"
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_instance.jump"
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach7 (expand)"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach7 (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationMysql (expand)"
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "data.aws_ami.ubuntuBionic (expand)"
2021/02/13 15:00:10 [TRACE] vertex "aws_route_table_association.subnetAssociationMysql (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "data.aws_ami.ubuntuBionic (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_key_pair.kpOpencart (expand)"
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-EC2-Policy (expand)"
2021/02/13 15:00:10 [TRACE] vertex "aws_subnet.subnetMysql (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-EC2-Policy (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_vpc.vpc (expand)"
2021/02/13 15:00:10 [TRACE] vertex "aws_route_table_association.subnetAssociationMysql (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "data.aws_availability_zones.available (expand)"
2021/02/13 15:00:10 [TRACE] vertex "aws_route_table_association.subnetAssociationMysql (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "data.aws_availability_zones.available (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "data.aws_availability_zones.available (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach2 (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationMysql"
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_route_table.rtPrivate (expand)"
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpAvi (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_route_table.rtPrivate (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpAvi (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_subnet.subnetMysql (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpAvi (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_key_pair.kpAvi"
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpAvi": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpAvi": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_route_table.rtPrivate (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-SQS-Policy (expand)"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-SQS-Policy (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-SQS-Policy (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.ansible-attach1 (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.ansible-attach1 (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.ansible-attach1 (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.ansible-attach1"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.ansible-attach1": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.ansible-attach1": visit complete
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_eip.eipForNatGw (expand)"
2021/02/13 15:00:10 [TRACE] vertex "aws_subnet.subnetMysql (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_subnet.subnetMysql"
2021/02/13 15:00:10 [TRACE] vertex "aws_subnet.subnetMysql": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_subnet.subnetMysql": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_subnet.subnetMysql (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "aws_subnet.subnetMysql (expand)": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_route_table.rtPrivate (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_route_table.rtPrivate"
2021/02/13 15:00:10 [TRACE] vertex "aws_route_table.rtPrivate": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_eip.eipForNatGw (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_eip.eipForNatGw (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_eip.eipForNatGw (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_eip.eipForNatGw"
2021/02/13 15:00:10 [TRACE] vertex "aws_eip.eipForNatGw": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_eip.eipForNatGw": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_eip.eipForNatGw (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "aws_eip.eipForNatGw (expand)": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.ansible-attach1 (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "aws_route_table.rtPrivate": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_route_table.rtPrivate (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "aws_route_table.rtPrivate (expand)": visit complete
2021/02/13 15:00:10 [TRACE] vertex "data.aws_availability_zones.available (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.ansible-attach1 (expand)": visit complete
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-SNS-Policy (expand)"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-SNS-Policy (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-SNS-Policy (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-SNS-Policy (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-SNS-Policy"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-SNS-Policy": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-SNS-Policy": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-SNS-Policy (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-SNS-Policy (expand)": visit complete
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-SNS-Policy"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-SNS-Policy": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:10 [TRACE] vertex "aws_launch_template.templateAsg (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_launch_template.templateAsg (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_launch_template.templateAsg (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_launch_template.templateAsg"
2021/02/13 15:00:10 [TRACE] vertex "aws_launch_template.templateAsg": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_launch_template.templateAsg": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_launch_template.templateAsg (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "aws_launch_template.templateAsg (expand)": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_route53_record.jump (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_route53_record.jump (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_route53_record.jump (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_route53_record.jump"
2021/02/13 15:00:10 [TRACE] vertex "aws_route53_record.jump": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_route53_record.jump": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_route53_record.jump (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "aws_route53_record.jump (expand)": visit complete
2021/02/13 15:00:10 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_policy.AviController-SNS-Policy
2021/02/13 15:00:10 [TRACE] EvalReadState: reading state for aws_iam_policy.AviController-SNS-Policy
2021/02/13 15:00:10 [TRACE] EvalReadState: no state present for aws_iam_policy.AviController-SNS-Policy
2021/02/13 15:00:10 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_policy.AviController-SNS-Policy
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach3 (expand)"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach3 (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach3 (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach3 (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach3"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach3": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] Re-validating config for "aws_iam_policy.AviController-SNS-Policy"
2021/02/13 15:00:10 [TRACE] vertex "aws_route_table_association.subnetAssociationMgt (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-R53-Policy (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "data.aws_ami.aviAmi (expand)"
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_nat_gateway.natGw (expand)"
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_policy.ansible-EC2-Policy"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach1 (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "data.aws_ami.ubuntuFocal (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach8 (expand)"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role.vmimport (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_security_group.sgOpencart (expand)"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy.vmimport (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_role.Ansible-Refined-Role (expand)"
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_instance_profile.AviController-Instance-Profile (expand)"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-ASG-Notification (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_key_pair.kpBackend (expand)"
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpMysql (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_security_group.sgJump (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach5 (expand)"
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-IAM-Policy (expand)"
2021/02/13 15:00:10 [TRACE] vertex "data.aws_route53_zone.awsAviDemo (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-KMS-Policy (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_subnet.subnetMgt (expand)"
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_route_table.rt (expand)"
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach6 (expand)"
2021/02/13 15:00:10 [TRACE] vertex "aws_route53_record.aviCtrl (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role.AviController-Refined-Role (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-AutoScalingGroup-Policy (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_key_pair.kpJump (expand)"
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach4 (expand)"
2021/02/13 15:00:10 [TRACE] vertex "aws_instance.jump": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_instance.aviCtrl (expand)"
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_security_group.sgMysql"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach7 (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "data.aws_ami.ubuntuBionic (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpOpencart (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_security_group.sgBackend (expand)"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-EC2-Policy (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_autoscaling_group.autoScalingGroup (expand)"
2021/02/13 15:00:10 [TRACE] vertex "aws_vpc.vpc (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_security_group.sgAvi (expand)"
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_internet_gateway.internetGateway (expand)"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach2 (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_instance_profile.Ansible-Instance-Profile (expand)"
2021/02/13 15:00:10 [TRACE] vertex "aws_route_table_association.subnetAssociationMysql": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpAvi (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-SQS-Policy (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "data.aws_availability_zones.available"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach3": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach3 (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach3 (expand)": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_route_table.rt (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_route_table.rt (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_instance_profile.AviController-Instance-Profile (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_instance_profile.AviController-Instance-Profile (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_instance_profile.AviController-Instance-Profile (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_instance_profile.AviController-Instance-Profile"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_instance_profile.AviController-Instance-Profile": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_instance_profile.AviController-Instance-Profile": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_instance_profile.AviController-Instance-Profile (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_instance_profile.AviController-Instance-Profile (expand)": visit complete
2021/02/13 15:00:10 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:10 [TRACE] vertex "aws_route_table_association.subnetAssociationMgt (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationMgt"
2021/02/13 15:00:10 [TRACE] vertex "aws_route_table_association.subnetAssociationMgt": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_route_table_association.subnetAssociationMgt": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_route_table_association.subnetAssociationMgt (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "aws_route_table_association.subnetAssociationMgt (expand)": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-R53-Policy (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-R53-Policy (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-R53-Policy"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-R53-Policy": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-R53-Policy": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-R53-Policy (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-R53-Policy (expand)": visit complete
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-R53-Policy"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-R53-Policy": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:10 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_policy.AviController-R53-Policy
2021/02/13 15:00:10 [TRACE] EvalReadState: reading state for aws_iam_policy.AviController-R53-Policy
2021/02/13 15:00:10 [TRACE] EvalReadState: no state present for aws_iam_policy.AviController-R53-Policy
2021/02/13 15:00:10 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_policy.AviController-R53-Policy
2021/02/13 15:00:10 [TRACE] vertex "data.aws_ami.aviAmi (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "data.aws_ami.aviAmi (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "data.aws_ami.aviAmi (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] Re-validating config for "aws_iam_policy.AviController-R53-Policy"
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "data.aws_ami.aviAmi"
2021/02/13 15:00:10 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:10 [TRACE] vertex "data.aws_ami.aviAmi": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "data.aws_ami.aviAmi": visit complete
2021/02/13 15:00:10 [TRACE] vertex "data.aws_ami.aviAmi (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "data.aws_ami.aviAmi (expand)": visit complete
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "output.aviAmi"
2021/02/13 15:00:10 [TRACE] vertex "output.aviAmi": starting visit (*terraform.NodeApplyableOutput)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-ASG-Notification (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-ASG-Notification (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-ASG-Notification"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-ASG-Notification": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpBackend (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_nat_gateway.natGw (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_nat_gateway.natGw (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_nat_gateway.natGw (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] ExecuteWriteOutput: Saving NoOp change for output.aviAmi in changeset
2021/02/13 15:00:10 [TRACE] EvalWriteOutput: Saving value for output.aviAmi in state
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_nat_gateway.natGw"
2021/02/13 15:00:10 [TRACE] vertex "aws_nat_gateway.natGw": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach6 (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach6 (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpBackend (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpBackend (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_key_pair.kpBackend"
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpBackend": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-ASG-Notification": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpBackend": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-ASG-Notification (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpBackend (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-ASG-Notification (expand)": visit complete
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-ASG-Notification"
2021/02/13 15:00:10 [TRACE] vertex "output.aviAmi": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-ASG-Notification": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:10 [TRACE] vertex "aws_nat_gateway.natGw": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_nat_gateway.natGw (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "aws_nat_gateway.natGw (expand)": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach6 (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach6"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach6": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach6": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach6 (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach6 (expand)": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpBackend (expand)": visit complete
2021/02/13 15:00:10 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_policy.AviController-ASG-Notification
2021/02/13 15:00:10 [TRACE] EvalReadState: reading state for aws_iam_policy.AviController-ASG-Notification
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_key_pair.kpBackend"
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpBackend": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:10 [TRACE] EvalReadDiff: Read Create change from plan for aws_key_pair.kpBackend
2021/02/13 15:00:10 [TRACE] EvalReadState: reading state for aws_key_pair.kpBackend
2021/02/13 15:00:10 [TRACE] EvalReadState: no state present for aws_key_pair.kpBackend
2021/02/13 15:00:10 [TRACE] EvalReadDiff: Read Create change from plan for aws_key_pair.kpBackend
2021/02/13 15:00:10 [TRACE] Re-validating config for "aws_key_pair.kpBackend"
2021/02/13 15:00:10 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:10 [TRACE] EvalReadState: no state present for aws_iam_policy.AviController-ASG-Notification
2021/02/13 15:00:10 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_policy.AviController-ASG-Notification
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role.AviController-Refined-Role (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role.AviController-Refined-Role (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_role.AviController-Refined-Role"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role.AviController-Refined-Role": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role.AviController-Refined-Role": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role.AviController-Refined-Role (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role.AviController-Refined-Role (expand)": visit complete
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_role.AviController-Refined-Role"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role.AviController-Refined-Role": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:10 [TRACE] Re-validating config for "aws_iam_policy.AviController-ASG-Notification"
2021/02/13 15:00:10 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:10 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_role.AviController-Refined-Role
2021/02/13 15:00:10 [TRACE] EvalReadState: reading state for aws_iam_role.AviController-Refined-Role
2021/02/13 15:00:10 [TRACE] EvalReadState: no state present for aws_iam_role.AviController-Refined-Role
2021/02/13 15:00:10 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_role.AviController-Refined-Role
2021/02/13 15:00:10 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:10 [TRACE] Re-validating config for "aws_iam_role.AviController-Refined-Role"
2021/02/13 15:00:10 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:10 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach5 (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach5 (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach5 (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach5"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach5": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach5": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach5 (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach5 (expand)": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-AutoScalingGroup-Policy (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-AutoScalingGroup-Policy (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-AutoScalingGroup-Policy"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-AutoScalingGroup-Policy": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-AutoScalingGroup-Policy": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-AutoScalingGroup-Policy (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-AutoScalingGroup-Policy (expand)": visit complete
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-AutoScalingGroup-Policy"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-AutoScalingGroup-Policy": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:10 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_policy.AviController-AutoScalingGroup-Policy
2021/02/13 15:00:10 [TRACE] EvalReadState: reading state for aws_iam_policy.AviController-AutoScalingGroup-Policy
2021/02/13 15:00:10 [TRACE] EvalReadState: no state present for aws_iam_policy.AviController-AutoScalingGroup-Policy
2021/02/13 15:00:10 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_policy.AviController-AutoScalingGroup-Policy
2021/02/13 15:00:10 [TRACE] Re-validating config for "aws_iam_policy.AviController-AutoScalingGroup-Policy"
2021/02/13 15:00:10 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-IAM-Policy (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-IAM-Policy (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-IAM-Policy (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-IAM-Policy"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-IAM-Policy": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-IAM-Policy": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-IAM-Policy (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-IAM-Policy (expand)": visit complete
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-IAM-Policy"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-IAM-Policy": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:10 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_policy.AviController-IAM-Policy
2021/02/13 15:00:10 [TRACE] EvalReadState: reading state for aws_iam_policy.AviController-IAM-Policy
2021/02/13 15:00:10 [TRACE] EvalReadState: no state present for aws_iam_policy.AviController-IAM-Policy
2021/02/13 15:00:10 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_policy.AviController-IAM-Policy
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpJump (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpJump (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpJump (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_key_pair.kpJump"
2021/02/13 15:00:10 [TRACE] Re-validating config for "aws_iam_policy.AviController-IAM-Policy"
2021/02/13 15:00:10 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpJump": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpJump": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpJump (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpJump (expand)": visit complete
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_key_pair.kpJump"
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpJump": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:10 [TRACE] vertex "data.aws_route53_zone.awsAviDemo (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "data.aws_route53_zone.awsAviDemo (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "data.aws_route53_zone.awsAviDemo"
2021/02/13 15:00:10 [TRACE] vertex "data.aws_route53_zone.awsAviDemo": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "data.aws_route53_zone.awsAviDemo": visit complete
2021/02/13 15:00:10 [TRACE] vertex "data.aws_route53_zone.awsAviDemo (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "data.aws_route53_zone.awsAviDemo (expand)": visit complete
2021/02/13 15:00:10 [TRACE] EvalReadDiff: Read Create change from plan for aws_key_pair.kpJump
2021/02/13 15:00:10 [TRACE] EvalReadState: reading state for aws_key_pair.kpJump
2021/02/13 15:00:10 [TRACE] EvalReadState: no state present for aws_key_pair.kpJump
2021/02/13 15:00:10 [TRACE] EvalReadDiff: Read Create change from plan for aws_key_pair.kpJump
2021/02/13 15:00:10 [TRACE] Re-validating config for "aws_key_pair.kpJump"
2021/02/13 15:00:10 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-KMS-Policy"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-KMS-Policy": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-KMS-Policy": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-KMS-Policy (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-KMS-Policy (expand)": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_subnet.subnetMgt (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-KMS-Policy"
2021/02/13 15:00:10 [TRACE] vertex "aws_subnet.subnetMgt (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-KMS-Policy": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:10 [TRACE] vertex "aws_subnet.subnetMgt (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_subnet.subnetMgt"
2021/02/13 15:00:10 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_policy.AviController-KMS-Policy
2021/02/13 15:00:10 [TRACE] vertex "aws_subnet.subnetMgt": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] EvalReadState: reading state for aws_iam_policy.AviController-KMS-Policy
2021/02/13 15:00:10 [TRACE] vertex "aws_security_group.sgMysql": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_internet_gateway.internetGateway (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_subnet.subnetMgt": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_internet_gateway.internetGateway (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_internet_gateway.internetGateway (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_subnet.subnetMgt (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "aws_subnet.subnetMgt (expand)": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_instance.aviCtrl (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_instance.aviCtrl (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_instance.jump": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_instance.jump (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "aws_instance.jump (expand)": visit complete
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_internet_gateway.internetGateway"
2021/02/13 15:00:10 [TRACE] vertex "aws_instance.aviCtrl (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] EvalReadState: no state present for aws_iam_policy.AviController-KMS-Policy
2021/02/13 15:00:10 [TRACE] vertex "aws_security_group.sgMysql": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_security_group.sgMysql (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "aws_security_group.sgMysql (expand)": visit complete
2021/02/13 15:00:10 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_policy.AviController-KMS-Policy
2021/02/13 15:00:10 [TRACE] Re-validating config for "aws_iam_policy.AviController-KMS-Policy"
2021/02/13 15:00:10 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:10 [TRACE] vertex "aws_internet_gateway.internetGateway": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_internet_gateway.internetGateway": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_internet_gateway.internetGateway (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "aws_internet_gateway.internetGateway (expand)": visit complete
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_instance.aviCtrl"
2021/02/13 15:00:10 [TRACE] vertex "aws_instance.aviCtrl": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_instance.aviCtrl": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_instance.aviCtrl (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "aws_instance.aviCtrl (expand)": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_autoscaling_group.autoScalingGroup (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_autoscaling_group.autoScalingGroup (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_autoscaling_group.autoScalingGroup (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_autoscaling_group.autoScalingGroup"
2021/02/13 15:00:10 [TRACE] vertex "aws_autoscaling_group.autoScalingGroup": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_autoscaling_group.autoScalingGroup": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_autoscaling_group.autoScalingGroup (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "aws_autoscaling_group.autoScalingGroup (expand)": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_vpc.vpc (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_vpc.vpc (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_vpc.vpc"
2021/02/13 15:00:10 [TRACE] vertex "aws_vpc.vpc": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_vpc.vpc": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_vpc.vpc (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "aws_vpc.vpc (expand)": visit complete
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_vpc.vpc[0]"
2021/02/13 15:00:10 [TRACE] vertex "aws_vpc.vpc[0]": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:10 [TRACE] EvalReadDiff: Read Create change from plan for aws_vpc.vpc[0]
2021/02/13 15:00:10 [TRACE] vertex "data.aws_ami.ubuntuBionic (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_security_group.sgAvi (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach8 (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.ansible-EC2-Policy": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach1 (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "data.aws_ami.ubuntuFocal (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach2 (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_instance_profile.Ansible-Instance-Profile (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-SQS-Policy"
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpAvi (expand)": visit complete
2021/02/13 15:00:10 [TRACE] vertex "data.aws_availability_zones.available": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_security_group.sgOpencart (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_route_table_association.subnetAssociationMysql": visit complete
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_role.vmimport"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy.vmimport (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role.Ansible-Refined-Role (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_route_table.rt (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpMysql (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpOpencart (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_key_pair.kpAvi"
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpAvi": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:10 [TRACE] vertex "aws_route53_record.aviCtrl (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_route53_record.aviCtrl (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_route53_record.aviCtrl"
2021/02/13 15:00:10 [TRACE] vertex "aws_route53_record.aviCtrl": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach8 (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach8 (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach8"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach8": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach1 (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach1"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach1": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "data.aws_ami.ubuntuFocal"
2021/02/13 15:00:10 [TRACE] vertex "data.aws_ami.ubuntuFocal": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach2"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach2": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_instance_profile.Ansible-Instance-Profile (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_instance_profile.Ansible-Instance-Profile (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_instance_profile.Ansible-Instance-Profile"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_instance_profile.Ansible-Instance-Profile": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-SQS-Policy": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_security_group.sgJump"
2021/02/13 15:00:10 [TRACE] vertex "aws_security_group.sgJump": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach4 (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach4 (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach4 (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach4"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach4": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach7 (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach7"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach7": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_security_group.sgBackend (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_security_group.sgBackend (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_security_group.sgBackend (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_security_group.sgBackend"
2021/02/13 15:00:10 [TRACE] vertex "aws_security_group.sgBackend": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-EC2-Policy (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-EC2-Policy"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_policy.AviController-EC2-Policy": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_security_group.sgAvi (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_security_group.sgAvi (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_security_group.sgAvi"
2021/02/13 15:00:10 [TRACE] vertex "aws_security_group.sgAvi": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] EvalReadState: reading state for aws_vpc.vpc[0]
2021/02/13 15:00:10 [TRACE] EvalReadState: no state present for aws_vpc.vpc[0]
2021/02/13 15:00:10 [TRACE] EvalReadDiff: Read Create change from plan for aws_vpc.vpc[0]
2021/02/13 15:00:10 [TRACE] Re-validating config for "aws_vpc.vpc[0]"
2021/02/13 15:00:10 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "data.aws_ami.ubuntuBionic"
2021/02/13 15:00:10 [TRACE] vertex "data.aws_ami.ubuntuBionic": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role.vmimport": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_security_group.sgOpencart (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_security_group.sgOpencart (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_security_group.sgOpencart"
2021/02/13 15:00:10 [TRACE] vertex "aws_security_group.sgOpencart": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_route_table_association.subnetAssociationMysql (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:10 [TRACE] vertex "aws_route_table_association.subnetAssociationMysql (expand)": visit complete
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role.Ansible-Refined-Role (expand)": expanding dynamic subgraph
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role.Ansible-Refined-Role (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_role.Ansible-Refined-Role"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role.Ansible-Refined-Role": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy.vmimport (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_iam_role_policy.vmimport"
2021/02/13 15:00:10 [TRACE] vertex "aws_iam_role_policy.vmimport": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_route_table.rt"
2021/02/13 15:00:10 [TRACE] vertex "aws_route_table.rt": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_key_pair.kpMysql"
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpMysql": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpOpencart (expand)": entering dynamic subgraph
2021/02/13 15:00:10 [TRACE] dag/walk: visiting "aws_key_pair.kpOpencart"
2021/02/13 15:00:10 [TRACE] vertex "aws_key_pair.kpOpencart": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:10 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:10 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:10 [TRACE] EvalReadState: reading state for aws_iam_policy.AviController-R53-Policy
2021/02/13 15:00:10 [TRACE] EvalReadState: no state present for aws_iam_policy.AviController-R53-Policy
2021/02/13 15:00:10 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:10 [DEBUG] aws_iam_policy.AviController-R53-Policy: applying the planned Create change
2021/02/13 15:00:10 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:10 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:10 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:10 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:10 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:10 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:10 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:10 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:10 [TRACE] EvalReadState: reading state for aws_iam_policy.AviController-SNS-Policy
2021/02/13 15:00:10 [TRACE] EvalReadState: no state present for aws_iam_policy.AviController-SNS-Policy
2021/02/13 15:00:10 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:10 [DEBUG] aws_iam_policy.AviController-SNS-Policy: applying the planned Create change
2021/02/13 15:00:10 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:10 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:10 [TRACE] EvalReadState: reading state for aws_iam_policy.AviController-IAM-Policy
2021/02/13 15:00:10 [TRACE] EvalReadState: no state present for aws_iam_policy.AviController-IAM-Policy
2021/02/13 15:00:10 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:10 [TRACE] EvalReadState: reading state for aws_iam_policy.AviController-AutoScalingGroup-Policy
2021/02/13 15:00:10 [TRACE] EvalReadState: no state present for aws_iam_policy.AviController-AutoScalingGroup-Policy
2021/02/13 15:00:10 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:10 [DEBUG] aws_iam_policy.AviController-IAM-Policy: applying the planned Create change
2021/02/13 15:00:10 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:10 [DEBUG] aws_iam_policy.AviController-AutoScalingGroup-Policy: applying the planned Create change
2021/02/13 15:00:10 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:10 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:10 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:10 [TRACE] EvalReadState: reading state for aws_iam_policy.AviController-KMS-Policy
2021/02/13 15:00:10 [TRACE] EvalReadState: no state present for aws_iam_policy.AviController-KMS-Policy
2021/02/13 15:00:10 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_role.AviController-Refined-Role, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_detach_policies: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
      - .max_session_duration: planned value cty.NumberIntVal(3600) does not match config value cty.NullVal(cty.Number)
2021/02/13 15:00:10 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:10 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_key_pair.kpBackend, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDT2A0BYBJpqAR6S6MCFQt3KizmG55ql6H69fzmCG113Q1/8j7pWOMRUZUkfbpmur+hInFlp///CWnMiCJYq6VZFwzdiHsftXX1s1P4Eugwuro+P7v+kFJePQYsXkjeOObeWMr7zSTncPrzLe6X3Hol1TpXFnBHEOGy3Ea2VPmbRrS5q834NxArPZXYDk6He5ihmthwVSDrUnUeUHoHZG9ZpPSLi5yKSrKRqDvRe5eebTc1pOueJBPNJzvmd0cQgrT0R+aTwJXjQZUeJbRTZDDpBpXu4mMuGvsmdX2EtjO7yxtTbMotg83OIS6vrPTI9bcApqlTN3NL5B3HoZA7tItT avi@ansible") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDT2A0BYBJpqAR6S6MCFQt3KizmG55ql6H69fzmCG113Q1/8j7pWOMRUZUkfbpmur+hInFlp///CWnMiCJYq6VZFwzdiHsftXX1s1P4Eugwuro+P7v+kFJePQYsXkjeOObeWMr7zSTncPrzLe6X3Hol1TpXFnBHEOGy3Ea2VPmbRrS5q834NxArPZXYDk6He5ihmthwVSDrUnUeUHoHZG9ZpPSLi5yKSrKRqDvRe5eebTc1pOueJBPNJzvmd0cQgrT0R+aTwJXjQZUeJbRTZDDpBpXu4mMuGvsmdX2EtjO7yxtTbMotg83OIS6vrPTI9bcApqlTN3NL5B3HoZA7tItT avi@ansible\n")
2021/02/13 15:00:10 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:10 [TRACE] EvalReadState: reading state for aws_key_pair.kpBackend
2021/02/13 15:00:10 [TRACE] EvalReadState: no state present for aws_key_pair.kpBackend
2021/02/13 15:00:10 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:10 [DEBUG] aws_key_pair.kpBackend: applying the planned Create change
2021/02/13 15:00:10 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:10 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:10 [TRACE] EvalReadState: reading state for aws_iam_policy.AviController-ASG-Notification
2021/02/13 15:00:10 [TRACE] EvalReadState: no state present for aws_iam_policy.AviController-ASG-Notification
2021/02/13 15:00:10 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:10 [DEBUG] aws_iam_policy.AviController-ASG-Notification: applying the planned Create change
2021/02/13 15:00:10 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:10 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_key_pair.kpJump, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDT2A0BYBJpqAR6S6MCFQt3KizmG55ql6H69fzmCG113Q1/8j7pWOMRUZUkfbpmur+hInFlp///CWnMiCJYq6VZFwzdiHsftXX1s1P4Eugwuro+P7v+kFJePQYsXkjeOObeWMr7zSTncPrzLe6X3Hol1TpXFnBHEOGy3Ea2VPmbRrS5q834NxArPZXYDk6He5ihmthwVSDrUnUeUHoHZG9ZpPSLi5yKSrKRqDvRe5eebTc1pOueJBPNJzvmd0cQgrT0R+aTwJXjQZUeJbRTZDDpBpXu4mMuGvsmdX2EtjO7yxtTbMotg83OIS6vrPTI9bcApqlTN3NL5B3HoZA7tItT avi@ansible") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDT2A0BYBJpqAR6S6MCFQt3KizmG55ql6H69fzmCG113Q1/8j7pWOMRUZUkfbpmur+hInFlp///CWnMiCJYq6VZFwzdiHsftXX1s1P4Eugwuro+P7v+kFJePQYsXkjeOObeWMr7zSTncPrzLe6X3Hol1TpXFnBHEOGy3Ea2VPmbRrS5q834NxArPZXYDk6He5ihmthwVSDrUnUeUHoHZG9ZpPSLi5yKSrKRqDvRe5eebTc1pOueJBPNJzvmd0cQgrT0R+aTwJXjQZUeJbRTZDDpBpXu4mMuGvsmdX2EtjO7yxtTbMotg83OIS6vrPTI9bcApqlTN3NL5B3HoZA7tItT avi@ansible\n")
2021/02/13 15:00:10 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:10 [TRACE] EvalReadState: reading state for aws_key_pair.kpJump
2021/02/13 15:00:10 [TRACE] EvalReadState: no state present for aws_key_pair.kpJump
2021/02/13 15:00:10 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:10 [DEBUG] aws_key_pair.kpJump: applying the planned Create change
2021/02/13 15:00:10 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:10 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:10 [DEBUG] aws_iam_policy.AviController-KMS-Policy: applying the planned Create change
2021/02/13 15:00:10 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:10 [TRACE] EvalReadState: reading state for aws_iam_role.AviController-Refined-Role
2021/02/13 15:00:10 [TRACE] EvalReadState: no state present for aws_iam_role.AviController-Refined-Role
2021/02/13 15:00:10 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:10 [DEBUG] aws_iam_role.AviController-Refined-Role: applying the planned Create change
2021/02/13 15:00:10 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-13T15:00:10.211Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:10 [DEBUG] Waiting for state to become: [success]
2021/02/13 15:00:10 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:10 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_vpc.vpc[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .instance_tenancy: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .assign_generated_ipv6_cidr_block: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/02/13 15:00:10 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:10 [TRACE] EvalReadState: reading state for aws_vpc.vpc[0]
2021/02/13 15:00:10 [TRACE] EvalReadState: no state present for aws_vpc.vpc[0]
2021/02/13 15:00:10 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:10 [DEBUG] aws_vpc.vpc[0]: applying the planned Create change
2021/02/13 15:00:10 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-13T15:00:10.213Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:10 [DEBUG] VPC create config: {
2021-02-13T15:00:10.213Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   AmazonProvidedIpv6CidrBlock: false,
2021-02-13T15:00:10.213Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   CidrBlock: "10.0.0.0/18",
2021-02-13T15:00:10.213Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   InstanceTenancy: "default"
2021-02-13T15:00:10.213Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:10.807Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:10 [INFO] VPC ID: vpc-009e5ad5af72453ae
2021-02-13T15:00:10.807Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:10 [DEBUG] Waiting for VPC (vpc-009e5ad5af72453ae) to become available
2021-02-13T15:00:10.807Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:10 [DEBUG] Waiting for state to become: [available]
2021-02-13T15:00:11.089Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:11 [DEBUG] Getting IAM Policy: {
2021-02-13T15:00:11.089Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   PolicyArn: "arn:aws:iam::610303284743:policy/AviController-R53-Policy"
2021-02-13T15:00:11.089Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:11.089Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:11 [DEBUG] Waiting for state to become: [success]
2021-02-13T15:00:11.109Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:11 [DEBUG] Getting IAM Policy: {
2021-02-13T15:00:11.109Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   PolicyArn: "arn:aws:iam::610303284743:policy/AviController-IAM-Policy"
2021-02-13T15:00:11.109Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:11.109Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:11 [DEBUG] Waiting for state to become: [success]
2021-02-13T15:00:11.154Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:11 [DEBUG] Getting IAM Policy: {
2021-02-13T15:00:11.154Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   PolicyArn: "arn:aws:iam::610303284743:policy/AviController-KMS-Policy"
2021-02-13T15:00:11.154Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:11.154Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:11 [DEBUG] Waiting for state to become: [success]
2021-02-13T15:00:11.167Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:11 [DEBUG] Getting IAM Policy: {
2021-02-13T15:00:11.167Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   PolicyArn: "arn:aws:iam::610303284743:policy/AviController-SNS-Policy"
2021-02-13T15:00:11.167Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:11.167Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:11 [DEBUG] Waiting for state to become: [success]
2021-02-13T15:00:11.175Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:11 [DEBUG] Getting IAM Policy: {
2021-02-13T15:00:11.175Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   PolicyArn: "arn:aws:iam::610303284743:policy/AviController-AutoScalingGroup-Policy"
2021-02-13T15:00:11.175Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:11.175Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:11 [DEBUG] Waiting for state to become: [success]
2021-02-13T15:00:11.192Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:11 [DEBUG] Getting IAM Policy: {
2021-02-13T15:00:11.192Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   PolicyArn: "arn:aws:iam::610303284743:policy/AviController-ASG-Notification"
2021-02-13T15:00:11.192Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:11.192Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:11 [DEBUG] Waiting for state to become: [success]
2021/02/13 15:00:11 [TRACE] EvalWriteState: recording 0 dependencies for aws_key_pair.kpJump
2021/02/13 15:00:11 [TRACE] EvalWriteState: writing current state object for aws_key_pair.kpJump
2021/02/13 15:00:11 [TRACE] EvalWriteState: recording 0 dependencies for aws_key_pair.kpJump
2021/02/13 15:00:11 [TRACE] EvalWriteState: writing current state object for aws_key_pair.kpJump
2021/02/13 15:00:11 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2021/02/13 15:00:11 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3322
2021/02/13 15:00:11 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:11 [TRACE] vertex "aws_key_pair.kpJump": visit complete
2021/02/13 15:00:11 [TRACE] EvalReadDiff: Read Create change from plan for aws_key_pair.kpAvi
2021/02/13 15:00:11 [TRACE] EvalReadState: reading state for aws_key_pair.kpAvi
2021/02/13 15:00:11 [TRACE] EvalReadState: no state present for aws_key_pair.kpAvi
2021/02/13 15:00:11 [TRACE] EvalReadDiff: Read Create change from plan for aws_key_pair.kpAvi
2021/02/13 15:00:11 [TRACE] Re-validating config for "aws_key_pair.kpAvi"
2021/02/13 15:00:11 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:11 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:11 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_key_pair.kpAvi, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDT2A0BYBJpqAR6S6MCFQt3KizmG55ql6H69fzmCG113Q1/8j7pWOMRUZUkfbpmur+hInFlp///CWnMiCJYq6VZFwzdiHsftXX1s1P4Eugwuro+P7v+kFJePQYsXkjeOObeWMr7zSTncPrzLe6X3Hol1TpXFnBHEOGy3Ea2VPmbRrS5q834NxArPZXYDk6He5ihmthwVSDrUnUeUHoHZG9ZpPSLi5yKSrKRqDvRe5eebTc1pOueJBPNJzvmd0cQgrT0R+aTwJXjQZUeJbRTZDDpBpXu4mMuGvsmdX2EtjO7yxtTbMotg83OIS6vrPTI9bcApqlTN3NL5B3HoZA7tItT avi@ansible") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDT2A0BYBJpqAR6S6MCFQt3KizmG55ql6H69fzmCG113Q1/8j7pWOMRUZUkfbpmur+hInFlp///CWnMiCJYq6VZFwzdiHsftXX1s1P4Eugwuro+P7v+kFJePQYsXkjeOObeWMr7zSTncPrzLe6X3Hol1TpXFnBHEOGy3Ea2VPmbRrS5q834NxArPZXYDk6He5ihmthwVSDrUnUeUHoHZG9ZpPSLi5yKSrKRqDvRe5eebTc1pOueJBPNJzvmd0cQgrT0R+aTwJXjQZUeJbRTZDDpBpXu4mMuGvsmdX2EtjO7yxtTbMotg83OIS6vrPTI9bcApqlTN3NL5B3HoZA7tItT avi@ansible\n")
2021/02/13 15:00:11 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:11 [TRACE] EvalReadState: reading state for aws_key_pair.kpAvi
2021/02/13 15:00:11 [TRACE] EvalReadState: no state present for aws_key_pair.kpAvi
2021/02/13 15:00:11 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:11 [DEBUG] aws_key_pair.kpAvi: applying the planned Create change
2021/02/13 15:00:11 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:11 [TRACE] EvalWriteState: recording 0 dependencies for aws_key_pair.kpBackend
2021/02/13 15:00:11 [TRACE] EvalWriteState: writing current state object for aws_key_pair.kpBackend
2021/02/13 15:00:11 [TRACE] EvalWriteState: recording 0 dependencies for aws_key_pair.kpBackend
2021/02/13 15:00:11 [TRACE] EvalWriteState: writing current state object for aws_key_pair.kpBackend
2021/02/13 15:00:11 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:11 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3323
2021/02/13 15:00:11 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:11 [TRACE] vertex "aws_key_pair.kpBackend": visit complete
2021/02/13 15:00:11 [TRACE] vertex "aws_route53_record.aviCtrl": visit complete
2021/02/13 15:00:11 [TRACE] vertex "aws_route53_record.aviCtrl (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:11 [TRACE] vertex "aws_route53_record.aviCtrl (expand)": visit complete
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach8": visit complete
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach8 (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach8 (expand)": visit complete
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_policy.ansible-EC2-Policy": visit complete
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_policy.ansible-EC2-Policy (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_policy.ansible-EC2-Policy (expand)": visit complete
2021/02/13 15:00:11 [TRACE] dag/walk: visiting "aws_iam_policy.ansible-EC2-Policy"
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_policy.ansible-EC2-Policy": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach1": visit complete
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach1 (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach1 (expand)": visit complete
2021/02/13 15:00:11 [TRACE] vertex "data.aws_ami.ubuntuFocal": visit complete
2021/02/13 15:00:11 [TRACE] vertex "data.aws_ami.ubuntuFocal (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:11 [TRACE] vertex "data.aws_ami.ubuntuFocal (expand)": visit complete
2021/02/13 15:00:11 [TRACE] dag/walk: visiting "output.ubuntuFocal"
2021/02/13 15:00:11 [TRACE] vertex "output.ubuntuFocal": starting visit (*terraform.NodeApplyableOutput)
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach2": visit complete
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach2 (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach2 (expand)": visit complete
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_instance_profile.Ansible-Instance-Profile": visit complete
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_instance_profile.Ansible-Instance-Profile (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_instance_profile.Ansible-Instance-Profile (expand)": visit complete
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_policy.AviController-SQS-Policy": visit complete
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_policy.AviController-SQS-Policy (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_policy.AviController-SQS-Policy (expand)": visit complete
2021/02/13 15:00:11 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-SQS-Policy"
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_policy.AviController-SQS-Policy": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:11 [TRACE] vertex "aws_security_group.sgJump": visit complete
2021/02/13 15:00:11 [TRACE] vertex "aws_security_group.sgJump (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:11 [TRACE] vertex "aws_security_group.sgJump (expand)": visit complete
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach4": visit complete
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach4 (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach4 (expand)": visit complete
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach7": visit complete
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach7 (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach7 (expand)": visit complete
2021/02/13 15:00:11 [TRACE] vertex "aws_security_group.sgBackend": visit complete
2021/02/13 15:00:11 [TRACE] vertex "aws_security_group.sgBackend (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:11 [TRACE] vertex "aws_security_group.sgBackend (expand)": visit complete
2021/02/13 15:00:11 [TRACE] vertex "aws_security_group.sgAvi": visit complete
2021/02/13 15:00:11 [TRACE] vertex "aws_security_group.sgAvi (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:11 [TRACE] vertex "aws_security_group.sgAvi (expand)": visit complete
2021/02/13 15:00:11 [TRACE] vertex "data.aws_ami.ubuntuBionic": visit complete
2021/02/13 15:00:11 [TRACE] vertex "aws_security_group.sgOpencart": visit complete
2021/02/13 15:00:11 [TRACE] vertex "aws_security_group.sgOpencart (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:11 [TRACE] vertex "aws_security_group.sgOpencart (expand)": visit complete
2021/02/13 15:00:11 [TRACE] vertex "data.aws_ami.ubuntuBionic (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:11 [TRACE] vertex "data.aws_ami.ubuntuBionic (expand)": visit complete
2021/02/13 15:00:11 [TRACE] dag/walk: visiting "output.ubuntuBionic"
2021/02/13 15:00:11 [TRACE] vertex "output.ubuntuBionic": starting visit (*terraform.NodeApplyableOutput)
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_role.vmimport": visit complete
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_role.vmimport (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_role.vmimport (expand)": visit complete
2021/02/13 15:00:11 [TRACE] dag/walk: visiting "aws_iam_role.vmimport"
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_role.vmimport": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:11 [TRACE] vertex "data.aws_availability_zones.available": visit complete
2021/02/13 15:00:11 [TRACE] vertex "data.aws_availability_zones.available (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:11 [TRACE] vertex "data.aws_availability_zones.available (expand)": visit complete
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_policy.AviController-EC2-Policy": visit complete
2021/02/13 15:00:11 [TRACE] dag/walk: visiting "aws_subnet.subnetBackend (expand)"
2021/02/13 15:00:11 [TRACE] vertex "aws_subnet.subnetBackend (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_policy.AviController-EC2-Policy (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_policy.AviController-EC2-Policy (expand)": visit complete
2021/02/13 15:00:11 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationAviSeMgt (expand)"
2021/02/13 15:00:11 [TRACE] dag/walk: visiting "aws_iam_policy.AviController-EC2-Policy"
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_policy.AviController-EC2-Policy": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:11 [TRACE] dag/walk: visiting "aws_subnet.subnetAviVs (expand)"
2021/02/13 15:00:11 [TRACE] dag/walk: visiting "aws_subnet.subnetAviSeMgt (expand)"
2021/02/13 15:00:11 [TRACE] vertex "aws_subnet.subnetBackend (expand)": expanding dynamic subgraph
2021/02/13 15:00:11 [TRACE] vertex "aws_subnet.subnetAviSeMgt (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:11 [TRACE] vertex "aws_subnet.subnetAviSeMgt (expand)": expanding dynamic subgraph
2021/02/13 15:00:11 [TRACE] vertex "aws_subnet.subnetBackend (expand)": entering dynamic subgraph
2021/02/13 15:00:11 [TRACE] vertex "aws_subnet.subnetAviSeMgt (expand)": entering dynamic subgraph
2021/02/13 15:00:11 [TRACE] dag/walk: visiting "aws_subnet.subnetBackend"
2021/02/13 15:00:11 [TRACE] vertex "aws_subnet.subnetBackend": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:11 [TRACE] dag/walk: visiting "aws_instance.backend (expand)"
2021/02/13 15:00:11 [TRACE] vertex "aws_instance.backend (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:11 [TRACE] vertex "aws_instance.backend (expand)": expanding dynamic subgraph
2021/02/13 15:00:11 [TRACE] vertex "aws_instance.backend (expand)": entering dynamic subgraph
2021/02/13 15:00:11 [TRACE] dag/walk: visiting "aws_instance.backend"
2021/02/13 15:00:11 [TRACE] vertex "aws_instance.backend": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_role.Ansible-Refined-Role": visit complete
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_role.Ansible-Refined-Role (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_role.Ansible-Refined-Role (expand)": visit complete
2021/02/13 15:00:11 [TRACE] dag/walk: visiting "aws_iam_role.Ansible-Refined-Role"
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_role.Ansible-Refined-Role": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:11 [TRACE] vertex "aws_subnet.subnetAviVs (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:11 [TRACE] vertex "aws_subnet.subnetAviVs (expand)": expanding dynamic subgraph
2021/02/13 15:00:11 [TRACE] vertex "aws_subnet.subnetAviVs (expand)": entering dynamic subgraph
2021/02/13 15:00:11 [TRACE] dag/walk: visiting "aws_subnet.subnetAviVs"
2021/02/13 15:00:11 [TRACE] vertex "aws_subnet.subnetAviVs": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_role_policy.vmimport": visit complete
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_role_policy.vmimport (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:11 [TRACE] vertex "aws_iam_role_policy.vmimport (expand)": visit complete
2021/02/13 15:00:11 [TRACE] vertex "aws_route_table_association.subnetAssociationAviSeMgt (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:11 [TRACE] vertex "aws_route_table_association.subnetAssociationAviSeMgt (expand)": expanding dynamic subgraph
2021/02/13 15:00:11 [TRACE] vertex "aws_route_table_association.subnetAssociationAviSeMgt (expand)": entering dynamic subgraph
2021/02/13 15:00:11 [TRACE] vertex "aws_route_table.rt": visit complete
2021/02/13 15:00:11 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationAviSeMgt"
2021/02/13 15:00:11 [TRACE] vertex "aws_route_table_association.subnetAssociationAviSeMgt": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:11 [TRACE] vertex "aws_route_table.rt (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:11 [TRACE] dag/walk: visiting "output.az"
2021/02/13 15:00:11 [TRACE] dag/walk: visiting "aws_subnet.subnetAviSeMgt"
2021/02/13 15:00:11 [TRACE] vertex "aws_subnet.subnetAviSeMgt": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:11 [TRACE] vertex "output.az": starting visit (*terraform.NodeApplyableOutput)
2021/02/13 15:00:11 [TRACE] vertex "aws_key_pair.kpMysql": visit complete
2021/02/13 15:00:11 [TRACE] vertex "aws_key_pair.kpMysql (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:11 [TRACE] vertex "aws_key_pair.kpMysql (expand)": visit complete
2021/02/13 15:00:11 [TRACE] dag/walk: visiting "aws_key_pair.kpMysql"
2021/02/13 15:00:11 [TRACE] vertex "aws_key_pair.kpMysql": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:11 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationAviVs (expand)"
2021/02/13 15:00:11 [TRACE] vertex "aws_route_table_association.subnetAssociationAviVs (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:11 [TRACE] vertex "aws_route_table_association.subnetAssociationAviVs (expand)": expanding dynamic subgraph
2021/02/13 15:00:11 [TRACE] vertex "aws_route_table_association.subnetAssociationAviVs (expand)": entering dynamic subgraph
2021/02/13 15:00:11 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationAviVs"
2021/02/13 15:00:11 [TRACE] vertex "aws_route_table_association.subnetAssociationAviVs": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:11 [TRACE] vertex "aws_key_pair.kpOpencart": visit complete
2021/02/13 15:00:11 [TRACE] vertex "aws_route_table.rt (expand)": visit complete
2021/02/13 15:00:11 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationBackend (expand)"
2021/02/13 15:00:11 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_policy.ansible-EC2-Policy
2021/02/13 15:00:11 [TRACE] EvalReadState: reading state for aws_iam_policy.ansible-EC2-Policy
2021/02/13 15:00:11 [TRACE] EvalReadState: no state present for aws_iam_policy.ansible-EC2-Policy
2021/02/13 15:00:11 [TRACE] vertex "aws_key_pair.kpOpencart (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:11 [TRACE] vertex "aws_key_pair.kpOpencart (expand)": visit complete
2021/02/13 15:00:11 [TRACE] dag/walk: visiting "aws_key_pair.kpOpencart"
2021/02/13 15:00:11 [TRACE] vertex "aws_key_pair.kpOpencart": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:11 [TRACE] vertex "aws_route_table_association.subnetAssociationBackend (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/13 15:00:11 [TRACE] vertex "aws_route_table_association.subnetAssociationBackend (expand)": expanding dynamic subgraph
2021/02/13 15:00:11 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_policy.ansible-EC2-Policy
2021/02/13 15:00:11 [TRACE] vertex "aws_route_table_association.subnetAssociationBackend (expand)": entering dynamic subgraph
2021/02/13 15:00:11 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationBackend"
2021/02/13 15:00:11 [TRACE] vertex "aws_route_table_association.subnetAssociationBackend": starting visit (*terraform.NodeApplyableResource)
2021/02/13 15:00:11 [TRACE] Re-validating config for "aws_iam_policy.ansible-EC2-Policy"
2021/02/13 15:00:11 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:11 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:11 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:11 [TRACE] EvalReadState: reading state for aws_iam_policy.ansible-EC2-Policy
2021/02/13 15:00:11 [TRACE] EvalReadState: no state present for aws_iam_policy.ansible-EC2-Policy
2021/02/13 15:00:11 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:11 [DEBUG] aws_iam_policy.ansible-EC2-Policy: applying the planned Create change
2021/02/13 15:00:11 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-13T15:00:11.935Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:11 [DEBUG] Getting IAM Policy Version: {
2021-02-13T15:00:11.935Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   PolicyArn: "arn:aws:iam::610303284743:policy/AviController-R53-Policy",
2021-02-13T15:00:11.935Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   VersionId: "v1"
2021-02-13T15:00:11.935Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:11.935Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:11 [DEBUG] Waiting for state to become: [success]
2021-02-13T15:00:11.996Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:11 [DEBUG] Getting IAM Policy Version: {
2021-02-13T15:00:11.996Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   PolicyArn: "arn:aws:iam::610303284743:policy/AviController-KMS-Policy",
2021-02-13T15:00:11.996Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   VersionId: "v1"
2021-02-13T15:00:11.996Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:11.996Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:11 [DEBUG] Waiting for state to become: [success]
2021/02/13 15:00:12 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_iam_role.AviController-Refined-Role, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .assume_role_policy: was cty.StringVal("{\r\n  \"Version\": \"2012-10-17\",\r\n  \"Statement\": [\r\n    {\r\n      \"Effect\": \"Allow\",\r\n      \"Principal\": {\r\n        \"Service\": \"ec2.amazonaws.com\"\r\n      },\r\n      \"Action\": \"sts:AssumeRole\"\r\n    }\r\n  ]\r\n}\r\n"), but now cty.StringVal("{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}")
      - .description: was null, but now cty.StringVal("")
2021/02/13 15:00:12 [TRACE] EvalWriteState: recording 0 dependencies for aws_iam_role.AviController-Refined-Role
2021/02/13 15:00:12 [TRACE] EvalWriteState: writing current state object for aws_iam_role.AviController-Refined-Role
2021/02/13 15:00:12 [TRACE] EvalWriteState: recording 0 dependencies for aws_iam_role.AviController-Refined-Role
2021/02/13 15:00:12 [TRACE] EvalWriteState: writing current state object for aws_iam_role.AviController-Refined-Role
2021/02/13 15:00:12 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:12 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3324
2021/02/13 15:00:12 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021-02-13T15:00:12.010Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:12 [DEBUG] Getting IAM Policy Version: {
2021-02-13T15:00:12.010Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   PolicyArn: "arn:aws:iam::610303284743:policy/AviController-ASG-Notification",
2021-02-13T15:00:12.010Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   VersionId: "v1"
2021-02-13T15:00:12.010Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:12.010Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:12 [DEBUG] Waiting for state to become: [success]
2021/02/13 15:00:12 [TRACE] vertex "aws_iam_role.AviController-Refined-Role": visit complete
2021/02/13 15:00:12 [TRACE] dag/walk: visiting "aws_iam_instance_profile.AviController-Instance-Profile"
2021/02/13 15:00:12 [TRACE] vertex "aws_iam_instance_profile.AviController-Instance-Profile": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:12 [TRACE] ExecuteWriteOutput: Saving NoOp change for output.ubuntuFocal in changeset
2021/02/13 15:00:12 [TRACE] EvalWriteOutput: Saving value for output.ubuntuFocal in state
2021/02/13 15:00:12 [TRACE] vertex "output.ubuntuFocal": visit complete
2021/02/13 15:00:12 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_policy.AviController-SQS-Policy
2021/02/13 15:00:12 [TRACE] EvalReadState: reading state for aws_iam_policy.AviController-SQS-Policy
2021/02/13 15:00:12 [TRACE] EvalReadState: no state present for aws_iam_policy.AviController-SQS-Policy
2021/02/13 15:00:12 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_policy.AviController-SQS-Policy
2021/02/13 15:00:12 [TRACE] Re-validating config for "aws_iam_policy.AviController-SQS-Policy"
2021/02/13 15:00:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:12 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:12 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:12 [TRACE] EvalReadState: reading state for aws_iam_policy.AviController-SQS-Policy
2021/02/13 15:00:12 [TRACE] EvalReadState: no state present for aws_iam_policy.AviController-SQS-Policy
2021/02/13 15:00:12 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:12 [DEBUG] aws_iam_policy.AviController-SQS-Policy: applying the planned Create change
2021/02/13 15:00:12 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-13T15:00:12.016Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:12 [DEBUG] Getting IAM Policy Version: {
2021-02-13T15:00:12.016Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   PolicyArn: "arn:aws:iam::610303284743:policy/AviController-SNS-Policy",
2021-02-13T15:00:12.016Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   VersionId: "v1"
2021-02-13T15:00:12.016Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:12.016Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:12 [DEBUG] Waiting for state to become: [success]
2021-02-13T15:00:12.020Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:12 [DEBUG] Getting IAM Policy Version: {
2021-02-13T15:00:12.020Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   PolicyArn: "arn:aws:iam::610303284743:policy/AviController-AutoScalingGroup-Policy",
2021-02-13T15:00:12.020Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   VersionId: "v1"
2021-02-13T15:00:12.020Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:12.020Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:12 [DEBUG] Waiting for state to become: [success]
2021-02-13T15:00:12.046Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:12 [DEBUG] Getting IAM Policy Version: {
2021-02-13T15:00:12.046Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   PolicyArn: "arn:aws:iam::610303284743:policy/AviController-IAM-Policy",
2021-02-13T15:00:12.046Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   VersionId: "v1"
2021-02-13T15:00:12.046Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:12.046Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:12 [DEBUG] Waiting for state to become: [success]
2021-02-13T15:00:12.328Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:12 [DEBUG] Getting IAM Policy: {
2021-02-13T15:00:12.328Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   PolicyArn: "arn:aws:iam::610303284743:policy/ansible-EC2-Policy"
2021-02-13T15:00:12.328Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:12.328Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:12 [DEBUG] Waiting for state to become: [success]
2021/02/13 15:00:12 [TRACE] EvalWriteState: recording 0 dependencies for aws_key_pair.kpAvi
2021/02/13 15:00:12 [TRACE] EvalWriteState: writing current state object for aws_key_pair.kpAvi
2021/02/13 15:00:12 [TRACE] EvalWriteState: recording 0 dependencies for aws_key_pair.kpAvi
2021/02/13 15:00:12 [TRACE] EvalWriteState: writing current state object for aws_key_pair.kpAvi
2021/02/13 15:00:12 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:12 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3325
2021/02/13 15:00:12 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:12 [TRACE] vertex "aws_key_pair.kpAvi": visit complete
2021/02/13 15:00:12 [TRACE] ExecuteWriteOutput: Saving NoOp change for output.ubuntuBionic in changeset
2021/02/13 15:00:12 [TRACE] EvalWriteOutput: Saving value for output.ubuntuBionic in state
2021/02/13 15:00:12 [TRACE] vertex "output.ubuntuBionic": visit complete
2021/02/13 15:00:12 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_role.vmimport
2021/02/13 15:00:12 [TRACE] EvalReadState: reading state for aws_iam_role.vmimport
2021/02/13 15:00:12 [TRACE] EvalReadState: no state present for aws_iam_role.vmimport
2021/02/13 15:00:12 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_role.vmimport
2021/02/13 15:00:12 [TRACE] Re-validating config for "aws_iam_role.vmimport"
2021/02/13 15:00:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:12 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:12 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_role.vmimport, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .max_session_duration: planned value cty.NumberIntVal(3600) does not match config value cty.NullVal(cty.Number)
      - .force_detach_policies: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2021/02/13 15:00:12 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:12 [TRACE] EvalReadState: reading state for aws_iam_role.vmimport
2021/02/13 15:00:12 [TRACE] EvalReadState: no state present for aws_iam_role.vmimport
2021/02/13 15:00:12 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:12 [DEBUG] aws_iam_role.vmimport: applying the planned Create change
2021/02/13 15:00:12 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-13T15:00:12.513Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:12 [DEBUG] Waiting for state to become: [success]
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationAviVs[0]" is waiting for "aws_route_table_association.subnetAssociationAviVs (expand)"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "provisioner.remote-exec (close)" is waiting for "null_resource.foo7"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_iam_instance_profile.Ansible-Instance-Profile" is waiting for "aws_iam_role.Ansible-Refined-Role"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_route53_record.jump" is waiting for "aws_instance.jump"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_subnet.subnetAviSeMgt[0]" is waiting for "aws_vpc.vpc[0]"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "provisioner.file (close)" is waiting for "null_resource.foo7"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "output.aviCtrlPublicIp" is waiting for "aws_instance.aviCtrl[0]"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_subnet.subnetMysql" is waiting for "aws_vpc.vpc[0]"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_nat_gateway.natGw" is waiting for "aws_subnet.subnetMgt"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationAviSeMgt[2]" is waiting for "aws_subnet.subnetAviSeMgt[1]"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_autoscaling_group.autoScalingGroup" is waiting for "aws_subnet.subnetBackend[2]"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_route_table.rt[0]" is waiting for "aws_internet_gateway.internetGateway[0]"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[0]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "output.jumpPublicIp" is waiting for "aws_instance.jump"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationMgt" is waiting for "aws_route_table.rt[0]"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_iam_role_policy_attachment.ansible-attach1" is waiting for "aws_iam_policy.ansible-EC2-Policy"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationAviVs[1]" is waiting for "aws_subnet.subnetAviVs[1]"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_security_group.sgOpencart" is waiting for "aws_vpc.vpc[0]"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_iam_role_policy_attachment.avi-attach7" is waiting for "aws_iam_policy.AviController-ASG-Notification"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_subnet.subnetAviSeMgt[2]" is waiting for "aws_vpc.vpc[0]"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_iam_role_policy_attachment.avi-attach2" is waiting for "aws_iam_policy.AviController-R53-Policy"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_subnet.subnetAviVs[2]" is waiting for "aws_vpc.vpc[0]"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_iam_role_policy_attachment.avi-attach8" is waiting for "aws_iam_policy.AviController-IAM-Policy"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "null_resource.foo7" is waiting for "aws_instance.backend[2]"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationAviSeMgt[0]" is waiting for "aws_subnet.subnetAviSeMgt[2]"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/null\"] (close)" is waiting for "null_resource.foo7"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_iam_role_policy.vmimport" is waiting for "aws_iam_role.vmimport"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_subnet.subnetBackend[0]" is waiting for "aws_subnet.subnetBackend (expand)"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_subnet.subnetBackend[1]" is waiting for "aws_subnet.subnetBackend (expand)"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_instance.jump" is waiting for "aws_subnet.subnetMgt"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_subnet.subnetBackend[2]" is waiting for "aws_subnet.subnetBackend (expand)"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_subnet.subnetAviVs[0]" is waiting for "aws_subnet.subnetAviVs (expand)"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationAviVs[2]" is waiting for "aws_subnet.subnetAviVs[1]"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "null_resource.foo7"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[2]" is waiting for "aws_subnet.subnetBackend[1]"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_security_group.sgAvi" is waiting for "aws_vpc.vpc[0]"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" is waiting for "aws_autoscaling_group.autoScalingGroup"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[1]" is waiting for "aws_route_table_association.subnetAssociationBackend (expand)"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationAviSeMgt[1]" is waiting for "aws_subnet.subnetAviSeMgt[0]"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_internet_gateway.internetGateway[0]" is waiting for "aws_vpc.vpc[0]"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_subnet.subnetAviSeMgt[1]" is waiting for "aws_subnet.subnetAviSeMgt (expand)"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_subnet.subnetAviVs[1]" is waiting for "aws_vpc.vpc[0]"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "aws_launch_template.templateAsg" is waiting for "aws_security_group.sgBackend"
2021/02/13 15:00:12 [TRACE] dag/walk: vertex "output.destroy" is waiting for "aws_instance.jump"
2021/02/13 15:00:12 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_iam_policy.AviController-KMS-Policy, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .description: was null, but now cty.StringVal("")
2021/02/13 15:00:12 [TRACE] EvalWriteState: recording 0 dependencies for aws_iam_policy.AviController-KMS-Policy
2021/02/13 15:00:12 [TRACE] EvalWriteState: writing current state object for aws_iam_policy.AviController-KMS-Policy
2021/02/13 15:00:12 [TRACE] EvalWriteState: recording 0 dependencies for aws_iam_policy.AviController-KMS-Policy
2021/02/13 15:00:12 [TRACE] EvalWriteState: writing current state object for aws_iam_policy.AviController-KMS-Policy
2021/02/13 15:00:12 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:12 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_iam_policy.AviController-R53-Policy, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .description: was null, but now cty.StringVal("")
2021/02/13 15:00:12 [TRACE] EvalWriteState: recording 0 dependencies for aws_iam_policy.AviController-R53-Policy
2021/02/13 15:00:12 [TRACE] EvalWriteState: writing current state object for aws_iam_policy.AviController-R53-Policy
2021/02/13 15:00:12 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3326
2021/02/13 15:00:12 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:12 [TRACE] vertex "aws_iam_policy.AviController-KMS-Policy": visit complete
2021/02/13 15:00:12 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach6"
2021/02/13 15:00:12 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach6": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:12 [TRACE] EvalWriteState: recording 0 dependencies for aws_iam_policy.AviController-R53-Policy
2021/02/13 15:00:12 [TRACE] EvalWriteState: writing current state object for aws_iam_policy.AviController-R53-Policy
2021/02/13 15:00:12 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:12 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_policy.AviController-EC2-Policy
2021/02/13 15:00:12 [TRACE] EvalReadState: reading state for aws_iam_policy.AviController-EC2-Policy
2021/02/13 15:00:12 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3327
2021/02/13 15:00:12 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:12 [TRACE] vertex "aws_iam_policy.AviController-R53-Policy": visit complete
2021/02/13 15:00:12 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach2"
2021/02/13 15:00:12 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach2": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:12 [TRACE] EvalReadState: no state present for aws_iam_policy.AviController-EC2-Policy
2021/02/13 15:00:12 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_policy.AviController-EC2-Policy
2021/02/13 15:00:12 [TRACE] vertex "aws_instance.backend": visit complete
2021/02/13 15:00:12 [TRACE] vertex "aws_instance.backend (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:12 [TRACE] vertex "aws_instance.backend (expand)": visit complete
2021/02/13 15:00:12 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_role.Ansible-Refined-Role
2021/02/13 15:00:12 [TRACE] EvalReadState: reading state for aws_iam_role.Ansible-Refined-Role
2021/02/13 15:00:12 [TRACE] EvalReadState: no state present for aws_iam_role.Ansible-Refined-Role
2021/02/13 15:00:12 [TRACE] vertex "aws_subnet.subnetBackend": visit complete
2021/02/13 15:00:12 [TRACE] vertex "aws_subnet.subnetBackend (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:12 [TRACE] vertex "aws_subnet.subnetBackend (expand)": visit complete
2021/02/13 15:00:12 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_role.Ansible-Refined-Role
2021/02/13 15:00:12 [TRACE] Re-validating config for "aws_iam_role.Ansible-Refined-Role"
2021/02/13 15:00:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:12 [TRACE] Re-validating config for "aws_iam_policy.AviController-EC2-Policy"
2021/02/13 15:00:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:12 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:12 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:12 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:12 [TRACE] EvalReadState: reading state for aws_iam_policy.AviController-EC2-Policy
2021/02/13 15:00:12 [TRACE] EvalReadState: no state present for aws_iam_policy.AviController-EC2-Policy
2021/02/13 15:00:12 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_role.Ansible-Refined-Role, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .max_session_duration: planned value cty.NumberIntVal(3600) does not match config value cty.NullVal(cty.Number)
      - .force_detach_policies: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2021/02/13 15:00:12 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:12 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:12 [DEBUG] aws_iam_policy.AviController-EC2-Policy: applying the planned Create change
2021/02/13 15:00:12 [TRACE] EvalReadState: reading state for aws_iam_role.Ansible-Refined-Role
2021/02/13 15:00:12 [TRACE] EvalReadState: no state present for aws_iam_role.Ansible-Refined-Role
2021/02/13 15:00:12 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:12 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:12 [DEBUG] aws_iam_role.Ansible-Refined-Role: applying the planned Create change
2021/02/13 15:00:12 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-13T15:00:12.855Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:12 [DEBUG] Waiting for state to become: [success]
2021/02/13 15:00:12 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_iam_policy.AviController-SNS-Policy, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .description: was null, but now cty.StringVal("")
2021/02/13 15:00:12 [TRACE] EvalWriteState: recording 0 dependencies for aws_iam_policy.AviController-SNS-Policy
2021/02/13 15:00:12 [TRACE] EvalWriteState: writing current state object for aws_iam_policy.AviController-SNS-Policy
2021/02/13 15:00:12 [TRACE] EvalWriteState: recording 0 dependencies for aws_iam_policy.AviController-SNS-Policy
2021/02/13 15:00:12 [TRACE] EvalWriteState: writing current state object for aws_iam_policy.AviController-SNS-Policy
2021/02/13 15:00:12 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:12 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3328
2021/02/13 15:00:12 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:12 [TRACE] vertex "aws_iam_policy.AviController-SNS-Policy": visit complete
2021/02/13 15:00:12 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach4"
2021/02/13 15:00:12 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach4": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:12 [TRACE] vertex "aws_subnet.subnetAviVs": visit complete
2021/02/13 15:00:12 [TRACE] vertex "aws_subnet.subnetAviVs (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:12 [TRACE] vertex "aws_subnet.subnetAviVs (expand)": visit complete
2021/02/13 15:00:12 [TRACE] vertex "aws_route_table_association.subnetAssociationAviSeMgt": visit complete
2021/02/13 15:00:12 [TRACE] vertex "aws_route_table_association.subnetAssociationAviSeMgt (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:12 [TRACE] vertex "aws_route_table_association.subnetAssociationAviSeMgt (expand)": visit complete
2021/02/13 15:00:12 [TRACE] vertex "aws_subnet.subnetAviSeMgt": visit complete
2021/02/13 15:00:12 [TRACE] vertex "aws_subnet.subnetAviSeMgt (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:12 [TRACE] vertex "aws_subnet.subnetAviSeMgt (expand)": visit complete
2021/02/13 15:00:12 [TRACE] ExecuteWriteOutput: Saving NoOp change for output.az in changeset
2021/02/13 15:00:12 [TRACE] EvalWriteOutput: Saving value for output.az in state
2021/02/13 15:00:12 [TRACE] vertex "output.az": visit complete
2021/02/13 15:00:12 [TRACE] EvalReadDiff: Read Create change from plan for aws_key_pair.kpMysql
2021/02/13 15:00:12 [TRACE] EvalReadState: reading state for aws_key_pair.kpMysql
2021/02/13 15:00:12 [TRACE] EvalReadState: no state present for aws_key_pair.kpMysql
2021/02/13 15:00:12 [TRACE] EvalReadDiff: Read Create change from plan for aws_key_pair.kpMysql
2021/02/13 15:00:12 [TRACE] Re-validating config for "aws_key_pair.kpMysql"
2021/02/13 15:00:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:12 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:12 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_key_pair.kpMysql, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDT2A0BYBJpqAR6S6MCFQt3KizmG55ql6H69fzmCG113Q1/8j7pWOMRUZUkfbpmur+hInFlp///CWnMiCJYq6VZFwzdiHsftXX1s1P4Eugwuro+P7v+kFJePQYsXkjeOObeWMr7zSTncPrzLe6X3Hol1TpXFnBHEOGy3Ea2VPmbRrS5q834NxArPZXYDk6He5ihmthwVSDrUnUeUHoHZG9ZpPSLi5yKSrKRqDvRe5eebTc1pOueJBPNJzvmd0cQgrT0R+aTwJXjQZUeJbRTZDDpBpXu4mMuGvsmdX2EtjO7yxtTbMotg83OIS6vrPTI9bcApqlTN3NL5B3HoZA7tItT avi@ansible") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDT2A0BYBJpqAR6S6MCFQt3KizmG55ql6H69fzmCG113Q1/8j7pWOMRUZUkfbpmur+hInFlp///CWnMiCJYq6VZFwzdiHsftXX1s1P4Eugwuro+P7v+kFJePQYsXkjeOObeWMr7zSTncPrzLe6X3Hol1TpXFnBHEOGy3Ea2VPmbRrS5q834NxArPZXYDk6He5ihmthwVSDrUnUeUHoHZG9ZpPSLi5yKSrKRqDvRe5eebTc1pOueJBPNJzvmd0cQgrT0R+aTwJXjQZUeJbRTZDDpBpXu4mMuGvsmdX2EtjO7yxtTbMotg83OIS6vrPTI9bcApqlTN3NL5B3HoZA7tItT avi@ansible\n")
2021/02/13 15:00:12 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:12 [TRACE] EvalReadState: reading state for aws_key_pair.kpMysql
2021/02/13 15:00:12 [TRACE] EvalReadState: no state present for aws_key_pair.kpMysql
2021/02/13 15:00:12 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:12 [DEBUG] aws_key_pair.kpMysql: applying the planned Create change
2021/02/13 15:00:12 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:12 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_iam_policy.AviController-AutoScalingGroup-Policy, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .description: was null, but now cty.StringVal("")
2021/02/13 15:00:12 [TRACE] EvalWriteState: recording 0 dependencies for aws_iam_policy.AviController-AutoScalingGroup-Policy
2021/02/13 15:00:12 [TRACE] EvalWriteState: writing current state object for aws_iam_policy.AviController-AutoScalingGroup-Policy
2021/02/13 15:00:12 [TRACE] EvalWriteState: recording 0 dependencies for aws_iam_policy.AviController-AutoScalingGroup-Policy
2021/02/13 15:00:12 [TRACE] EvalWriteState: writing current state object for aws_iam_policy.AviController-AutoScalingGroup-Policy
2021/02/13 15:00:12 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:12 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3329
2021/02/13 15:00:12 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:12 [TRACE] vertex "aws_iam_policy.AviController-AutoScalingGroup-Policy": visit complete
2021/02/13 15:00:12 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach3"
2021/02/13 15:00:12 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach3": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:12 [TRACE] vertex "aws_route_table_association.subnetAssociationAviVs": visit complete
2021/02/13 15:00:12 [TRACE] vertex "aws_route_table_association.subnetAssociationAviVs (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:12 [TRACE] vertex "aws_route_table_association.subnetAssociationAviVs (expand)": visit complete
2021/02/13 15:00:12 [TRACE] EvalReadDiff: Read Create change from plan for aws_key_pair.kpOpencart
2021/02/13 15:00:12 [TRACE] EvalReadState: reading state for aws_key_pair.kpOpencart
2021/02/13 15:00:12 [TRACE] EvalReadState: no state present for aws_key_pair.kpOpencart
2021/02/13 15:00:12 [TRACE] EvalReadDiff: Read Create change from plan for aws_key_pair.kpOpencart
2021/02/13 15:00:12 [TRACE] Re-validating config for "aws_key_pair.kpOpencart"
2021/02/13 15:00:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:12 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:12 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_key_pair.kpOpencart, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .public_key: planned value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDT2A0BYBJpqAR6S6MCFQt3KizmG55ql6H69fzmCG113Q1/8j7pWOMRUZUkfbpmur+hInFlp///CWnMiCJYq6VZFwzdiHsftXX1s1P4Eugwuro+P7v+kFJePQYsXkjeOObeWMr7zSTncPrzLe6X3Hol1TpXFnBHEOGy3Ea2VPmbRrS5q834NxArPZXYDk6He5ihmthwVSDrUnUeUHoHZG9ZpPSLi5yKSrKRqDvRe5eebTc1pOueJBPNJzvmd0cQgrT0R+aTwJXjQZUeJbRTZDDpBpXu4mMuGvsmdX2EtjO7yxtTbMotg83OIS6vrPTI9bcApqlTN3NL5B3HoZA7tItT avi@ansible") does not match config value cty.StringVal("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDT2A0BYBJpqAR6S6MCFQt3KizmG55ql6H69fzmCG113Q1/8j7pWOMRUZUkfbpmur+hInFlp///CWnMiCJYq6VZFwzdiHsftXX1s1P4Eugwuro+P7v+kFJePQYsXkjeOObeWMr7zSTncPrzLe6X3Hol1TpXFnBHEOGy3Ea2VPmbRrS5q834NxArPZXYDk6He5ihmthwVSDrUnUeUHoHZG9ZpPSLi5yKSrKRqDvRe5eebTc1pOueJBPNJzvmd0cQgrT0R+aTwJXjQZUeJbRTZDDpBpXu4mMuGvsmdX2EtjO7yxtTbMotg83OIS6vrPTI9bcApqlTN3NL5B3HoZA7tItT avi@ansible\n")
2021/02/13 15:00:12 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:12 [TRACE] EvalReadState: reading state for aws_key_pair.kpOpencart
2021/02/13 15:00:12 [TRACE] EvalReadState: no state present for aws_key_pair.kpOpencart
2021/02/13 15:00:12 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:12 [DEBUG] aws_key_pair.kpOpencart: applying the planned Create change
2021/02/13 15:00:12 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:12 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_iam_policy.AviController-ASG-Notification, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .description: was null, but now cty.StringVal("")
2021/02/13 15:00:12 [TRACE] EvalWriteState: recording 0 dependencies for aws_iam_policy.AviController-ASG-Notification
2021/02/13 15:00:12 [TRACE] EvalWriteState: writing current state object for aws_iam_policy.AviController-ASG-Notification
2021/02/13 15:00:12 [TRACE] EvalWriteState: recording 0 dependencies for aws_iam_policy.AviController-ASG-Notification
2021/02/13 15:00:12 [TRACE] EvalWriteState: writing current state object for aws_iam_policy.AviController-ASG-Notification
2021/02/13 15:00:12 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:12 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3330
2021/02/13 15:00:12 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:12 [TRACE] vertex "aws_iam_policy.AviController-ASG-Notification": visit complete
2021/02/13 15:00:12 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach7"
2021/02/13 15:00:12 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach7": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:12 [TRACE] vertex "aws_route_table_association.subnetAssociationBackend": visit complete
2021/02/13 15:00:12 [TRACE] vertex "aws_route_table_association.subnetAssociationBackend (expand)": dynamic subgraph completed successfully
2021/02/13 15:00:12 [TRACE] vertex "aws_route_table_association.subnetAssociationBackend (expand)": visit complete
2021/02/13 15:00:12 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_instance_profile.AviController-Instance-Profile
2021/02/13 15:00:12 [TRACE] EvalReadState: reading state for aws_iam_instance_profile.AviController-Instance-Profile
2021/02/13 15:00:12 [TRACE] EvalReadState: no state present for aws_iam_instance_profile.AviController-Instance-Profile
2021/02/13 15:00:12 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_instance_profile.AviController-Instance-Profile
2021/02/13 15:00:12 [TRACE] Re-validating config for "aws_iam_instance_profile.AviController-Instance-Profile"
2021/02/13 15:00:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:12 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_iam_policy.AviController-IAM-Policy, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .description: was null, but now cty.StringVal("")
2021/02/13 15:00:12 [TRACE] EvalWriteState: recording 0 dependencies for aws_iam_policy.AviController-IAM-Policy
2021/02/13 15:00:12 [TRACE] EvalWriteState: writing current state object for aws_iam_policy.AviController-IAM-Policy
2021/02/13 15:00:12 [TRACE] EvalWriteState: recording 0 dependencies for aws_iam_policy.AviController-IAM-Policy
2021/02/13 15:00:12 [TRACE] EvalWriteState: writing current state object for aws_iam_policy.AviController-IAM-Policy
2021/02/13 15:00:12 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:12 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:12 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3331
2021/02/13 15:00:12 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:12 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_instance_profile.AviController-Instance-Profile, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2021/02/13 15:00:12 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:12 [TRACE] EvalReadState: reading state for aws_iam_instance_profile.AviController-Instance-Profile
2021/02/13 15:00:12 [TRACE] EvalReadState: no state present for aws_iam_instance_profile.AviController-Instance-Profile
2021/02/13 15:00:12 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:12 [DEBUG] aws_iam_instance_profile.AviController-Instance-Profile: applying the planned Create change
2021/02/13 15:00:12 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:12 [TRACE] vertex "aws_iam_policy.AviController-IAM-Policy": visit complete
2021/02/13 15:00:12 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach8"
2021/02/13 15:00:12 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach8": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:12 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_role_policy_attachment.avi-attach6
2021/02/13 15:00:12 [TRACE] EvalReadState: reading state for aws_iam_role_policy_attachment.avi-attach6
2021/02/13 15:00:12 [TRACE] EvalReadState: no state present for aws_iam_role_policy_attachment.avi-attach6
2021/02/13 15:00:12 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_role_policy_attachment.avi-attach6
2021/02/13 15:00:12 [TRACE] Re-validating config for "aws_iam_role_policy_attachment.avi-attach6"
2021/02/13 15:00:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:12 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:12 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:12 [TRACE] EvalReadState: reading state for aws_iam_role_policy_attachment.avi-attach6
2021/02/13 15:00:12 [TRACE] EvalReadState: no state present for aws_iam_role_policy_attachment.avi-attach6
2021/02/13 15:00:12 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:12 [DEBUG] aws_iam_role_policy_attachment.avi-attach6: applying the planned Create change
2021/02/13 15:00:12 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-13T15:00:12.925Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:12 [DEBUG] Getting IAM Policy: {
2021-02-13T15:00:12.925Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   PolicyArn: "arn:aws:iam::610303284743:policy/AviController-SQS-Policy"
2021-02-13T15:00:12.925Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:12.925Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:12 [DEBUG] Waiting for state to become: [success]
2021/02/13 15:00:13 [TRACE] dag/walk: vertex "aws_instance.backend[2]" is waiting for "aws_subnet.subnetBackend[1]"
2021-02-13T15:00:13.218Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:13 [DEBUG] Getting IAM Policy Version: {
2021-02-13T15:00:13.218Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   PolicyArn: "arn:aws:iam::610303284743:policy/ansible-EC2-Policy",
2021-02-13T15:00:13.218Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   VersionId: "v1"
2021-02-13T15:00:13.218Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:13.218Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:13 [DEBUG] Waiting for state to become: [success]
2021-02-13T15:00:13.595Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:13 [DEBUG] Getting IAM Policy: {
2021-02-13T15:00:13.595Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   PolicyArn: "arn:aws:iam::610303284743:policy/AviController-EC2-Policy"
2021-02-13T15:00:13.595Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:13.595Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:13 [DEBUG] Waiting for state to become: [success]
2021-02-13T15:00:13.859Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:13 [DEBUG] Getting IAM Policy Version: {
2021-02-13T15:00:13.860Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   PolicyArn: "arn:aws:iam::610303284743:policy/AviController-SQS-Policy",
2021-02-13T15:00:13.860Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   VersionId: "v1"
2021-02-13T15:00:13.860Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:13.860Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:13 [DEBUG] Waiting for state to become: [success]
2021/02/13 15:00:14 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_iam_policy.ansible-EC2-Policy, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .description: was null, but now cty.StringVal("")
2021/02/13 15:00:14 [TRACE] EvalWriteState: recording 0 dependencies for aws_iam_policy.ansible-EC2-Policy
2021/02/13 15:00:14 [TRACE] EvalWriteState: writing current state object for aws_iam_policy.ansible-EC2-Policy
2021/02/13 15:00:14 [TRACE] EvalWriteState: recording 0 dependencies for aws_iam_policy.ansible-EC2-Policy
2021/02/13 15:00:14 [TRACE] EvalWriteState: writing current state object for aws_iam_policy.ansible-EC2-Policy
2021/02/13 15:00:14 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:14 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3332
2021/02/13 15:00:14 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:14 [TRACE] vertex "aws_iam_policy.ansible-EC2-Policy": visit complete
2021/02/13 15:00:14 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_role_policy_attachment.avi-attach2
2021/02/13 15:00:14 [TRACE] EvalReadState: reading state for aws_iam_role_policy_attachment.avi-attach2
2021/02/13 15:00:14 [TRACE] EvalReadState: no state present for aws_iam_role_policy_attachment.avi-attach2
2021/02/13 15:00:14 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_role_policy_attachment.avi-attach2
2021/02/13 15:00:14 [TRACE] Re-validating config for "aws_iam_role_policy_attachment.avi-attach2"
2021/02/13 15:00:14 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:14 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:14 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:14 [TRACE] EvalReadState: reading state for aws_iam_role_policy_attachment.avi-attach2
2021/02/13 15:00:14 [TRACE] EvalReadState: no state present for aws_iam_role_policy_attachment.avi-attach2
2021/02/13 15:00:14 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:14 [DEBUG] aws_iam_role_policy_attachment.avi-attach2: applying the planned Create change
2021/02/13 15:00:14 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:14 [TRACE] EvalWriteState: recording 0 dependencies for aws_key_pair.kpMysql
2021/02/13 15:00:14 [TRACE] EvalWriteState: writing current state object for aws_key_pair.kpMysql
2021/02/13 15:00:14 [TRACE] EvalWriteState: recording 0 dependencies for aws_key_pair.kpMysql
2021/02/13 15:00:14 [TRACE] EvalWriteState: writing current state object for aws_key_pair.kpMysql
2021/02/13 15:00:14 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:14 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3333
2021/02/13 15:00:14 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:14 [TRACE] vertex "aws_key_pair.kpMysql": visit complete
2021/02/13 15:00:14 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_role_policy_attachment.avi-attach4
2021/02/13 15:00:14 [TRACE] EvalReadState: reading state for aws_iam_role_policy_attachment.avi-attach4
2021/02/13 15:00:14 [TRACE] EvalReadState: no state present for aws_iam_role_policy_attachment.avi-attach4
2021/02/13 15:00:14 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_role_policy_attachment.avi-attach4
2021/02/13 15:00:14 [TRACE] Re-validating config for "aws_iam_role_policy_attachment.avi-attach4"
2021/02/13 15:00:14 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:14 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:14 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:14 [TRACE] EvalReadState: reading state for aws_iam_role_policy_attachment.avi-attach4
2021/02/13 15:00:14 [TRACE] EvalReadState: no state present for aws_iam_role_policy_attachment.avi-attach4
2021/02/13 15:00:14 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:14 [DEBUG] aws_iam_role_policy_attachment.avi-attach4: applying the planned Create change
2021/02/13 15:00:14 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:14 [TRACE] EvalWriteState: recording 0 dependencies for aws_key_pair.kpOpencart
2021/02/13 15:00:14 [TRACE] EvalWriteState: writing current state object for aws_key_pair.kpOpencart
2021/02/13 15:00:14 [TRACE] EvalWriteState: recording 0 dependencies for aws_key_pair.kpOpencart
2021/02/13 15:00:14 [TRACE] EvalWriteState: writing current state object for aws_key_pair.kpOpencart
2021/02/13 15:00:14 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:14 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3334
2021/02/13 15:00:14 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:14 [TRACE] vertex "aws_key_pair.kpOpencart": visit complete
2021/02/13 15:00:14 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_role_policy_attachment.avi-attach3
2021/02/13 15:00:14 [TRACE] EvalReadState: reading state for aws_iam_role_policy_attachment.avi-attach3
2021/02/13 15:00:14 [TRACE] EvalReadState: no state present for aws_iam_role_policy_attachment.avi-attach3
2021/02/13 15:00:14 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_role_policy_attachment.avi-attach3
2021/02/13 15:00:14 [TRACE] Re-validating config for "aws_iam_role_policy_attachment.avi-attach3"
2021/02/13 15:00:14 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:14 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:14 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:14 [TRACE] EvalReadState: reading state for aws_iam_role_policy_attachment.avi-attach3
2021/02/13 15:00:14 [TRACE] EvalReadState: no state present for aws_iam_role_policy_attachment.avi-attach3
2021/02/13 15:00:14 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:14 [DEBUG] aws_iam_role_policy_attachment.avi-attach3: applying the planned Create change
2021/02/13 15:00:14 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:14 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_iam_role.vmimport, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .assume_role_policy: was cty.StringVal("{\r\n \"Version\":\"2012-10-17\",\r\n \"Statement\":[\r\n    {\r\n       \"Sid\":\"\",\r\n       \"Effect\":\"Allow\",\r\n       \"Principal\":{\r\n          \"Service\":\"vmie.amazonaws.com\"\r\n       },\r\n       \"Action\":\"sts:AssumeRole\",\r\n       \"Condition\":{\r\n          \"StringEquals\":{\r\n             \"sts:ExternalId\":\"vmimport\"\r\n          }\r\n       }\r\n    }\r\n ]\r\n}\r\n"), but now cty.StringVal("{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"vmie.amazonaws.com\"},\"Action\":\"sts:AssumeRole\",\"Condition\":{\"StringEquals\":{\"sts:ExternalId\":\"vmimport\"}}}]}")
      - .description: was null, but now cty.StringVal("")
2021/02/13 15:00:14 [TRACE] EvalWriteState: recording 0 dependencies for aws_iam_role.vmimport
2021/02/13 15:00:14 [TRACE] EvalWriteState: writing current state object for aws_iam_role.vmimport
2021/02/13 15:00:14 [TRACE] EvalWriteState: recording 0 dependencies for aws_iam_role.vmimport
2021/02/13 15:00:14 [TRACE] EvalWriteState: writing current state object for aws_iam_role.vmimport
2021/02/13 15:00:14 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:14 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3335
2021/02/13 15:00:14 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:14 [TRACE] vertex "aws_iam_role.vmimport": visit complete
2021/02/13 15:00:14 [TRACE] dag/walk: visiting "aws_iam_role_policy.vmimport"
2021/02/13 15:00:14 [TRACE] vertex "aws_iam_role_policy.vmimport": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:14 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_role_policy_attachment.avi-attach7
2021/02/13 15:00:14 [TRACE] EvalReadState: reading state for aws_iam_role_policy_attachment.avi-attach7
2021/02/13 15:00:14 [TRACE] EvalReadState: no state present for aws_iam_role_policy_attachment.avi-attach7
2021/02/13 15:00:14 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_role_policy_attachment.avi-attach7
2021/02/13 15:00:14 [TRACE] Re-validating config for "aws_iam_role_policy_attachment.avi-attach7"
2021/02/13 15:00:14 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:14 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:14 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:14 [TRACE] EvalReadState: reading state for aws_iam_role_policy_attachment.avi-attach7
2021/02/13 15:00:14 [TRACE] EvalReadState: no state present for aws_iam_role_policy_attachment.avi-attach7
2021/02/13 15:00:14 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:14 [DEBUG] aws_iam_role_policy_attachment.avi-attach7: applying the planned Create change
2021/02/13 15:00:14 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-13T15:00:14.440Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:14 [DEBUG] Getting IAM Policy Version: {
2021-02-13T15:00:14.440Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   PolicyArn: "arn:aws:iam::610303284743:policy/AviController-EC2-Policy",
2021-02-13T15:00:14.440Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   VersionId: "v1"
2021-02-13T15:00:14.440Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:14.440Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:14 [DEBUG] Waiting for state to become: [success]
2021-02-13T15:00:14.617Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:14 [DEBUG] Waiting for state to become: [success]
2021/02/13 15:00:14 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_iam_role.Ansible-Refined-Role, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .assume_role_policy: was cty.StringVal("{\r\n  \"Version\": \"2012-10-17\",\r\n  \"Statement\": [\r\n    {\r\n      \"Effect\": \"Allow\",\r\n      \"Principal\": {\r\n        \"Service\": \"ec2.amazonaws.com\"\r\n      },\r\n      \"Action\": \"sts:AssumeRole\"\r\n    }\r\n  ]\r\n}\r\n"), but now cty.StringVal("{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}")
      - .description: was null, but now cty.StringVal("")
2021/02/13 15:00:14 [TRACE] EvalWriteState: recording 0 dependencies for aws_iam_role.Ansible-Refined-Role
2021/02/13 15:00:14 [TRACE] EvalWriteState: writing current state object for aws_iam_role.Ansible-Refined-Role
2021/02/13 15:00:14 [TRACE] EvalWriteState: recording 0 dependencies for aws_iam_role.Ansible-Refined-Role
2021/02/13 15:00:14 [TRACE] EvalWriteState: writing current state object for aws_iam_role.Ansible-Refined-Role
2021/02/13 15:00:14 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:14 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3336
2021/02/13 15:00:14 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:14 [TRACE] vertex "aws_iam_role.Ansible-Refined-Role": visit complete
2021/02/13 15:00:14 [TRACE] dag/walk: visiting "aws_iam_instance_profile.Ansible-Instance-Profile"
2021/02/13 15:00:14 [TRACE] vertex "aws_iam_instance_profile.Ansible-Instance-Profile": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:14 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.ansible-attach1"
2021/02/13 15:00:14 [TRACE] vertex "aws_iam_role_policy_attachment.ansible-attach1": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:14 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_role_policy_attachment.avi-attach8
2021/02/13 15:00:14 [TRACE] EvalReadState: reading state for aws_iam_role_policy_attachment.avi-attach8
2021/02/13 15:00:14 [TRACE] EvalReadState: no state present for aws_iam_role_policy_attachment.avi-attach8
2021/02/13 15:00:14 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_role_policy_attachment.avi-attach8
2021/02/13 15:00:14 [TRACE] Re-validating config for "aws_iam_role_policy_attachment.avi-attach8"
2021/02/13 15:00:14 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:14 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:14 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:14 [TRACE] EvalReadState: reading state for aws_iam_role_policy_attachment.avi-attach8
2021/02/13 15:00:14 [TRACE] EvalReadState: no state present for aws_iam_role_policy_attachment.avi-attach8
2021/02/13 15:00:14 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:14 [DEBUG] aws_iam_role_policy_attachment.avi-attach8: applying the planned Create change
2021/02/13 15:00:14 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:14 [TRACE] EvalWriteState: recording 2 dependencies for aws_iam_role_policy_attachment.avi-attach6
2021/02/13 15:00:14 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy_attachment.avi-attach6
2021/02/13 15:00:14 [TRACE] EvalWriteState: recording 2 dependencies for aws_iam_role_policy_attachment.avi-attach6
2021/02/13 15:00:14 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy_attachment.avi-attach6
2021/02/13 15:00:14 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:14 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3337
2021/02/13 15:00:14 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:14 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach6": visit complete
2021/02/13 15:00:14 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_role_policy.vmimport
2021/02/13 15:00:14 [TRACE] EvalReadState: reading state for aws_iam_role_policy.vmimport
2021/02/13 15:00:14 [TRACE] EvalReadState: no state present for aws_iam_role_policy.vmimport
2021/02/13 15:00:14 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_role_policy.vmimport
2021/02/13 15:00:14 [TRACE] Re-validating config for "aws_iam_role_policy.vmimport"
2021/02/13 15:00:14 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:14 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:14 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:14 [TRACE] EvalReadState: reading state for aws_iam_role_policy.vmimport
2021/02/13 15:00:14 [TRACE] EvalReadState: no state present for aws_iam_role_policy.vmimport
2021/02/13 15:00:14 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:14 [DEBUG] aws_iam_role_policy.vmimport: applying the planned Create change
2021/02/13 15:00:14 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:14 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_iam_policy.AviController-SQS-Policy, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .description: was null, but now cty.StringVal("")
2021/02/13 15:00:14 [TRACE] EvalWriteState: recording 0 dependencies for aws_iam_policy.AviController-SQS-Policy
2021/02/13 15:00:14 [TRACE] EvalWriteState: writing current state object for aws_iam_policy.AviController-SQS-Policy
2021/02/13 15:00:14 [TRACE] EvalWriteState: recording 0 dependencies for aws_iam_policy.AviController-SQS-Policy
2021/02/13 15:00:14 [TRACE] EvalWriteState: writing current state object for aws_iam_policy.AviController-SQS-Policy
2021/02/13 15:00:14 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:14 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3338
2021/02/13 15:00:14 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:14 [TRACE] vertex "aws_iam_policy.AviController-SQS-Policy": visit complete
2021/02/13 15:00:14 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach5"
2021/02/13 15:00:14 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach5": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:14 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_instance_profile.Ansible-Instance-Profile
2021/02/13 15:00:14 [TRACE] EvalReadState: reading state for aws_iam_instance_profile.Ansible-Instance-Profile
2021/02/13 15:00:14 [TRACE] EvalReadState: no state present for aws_iam_instance_profile.Ansible-Instance-Profile
2021/02/13 15:00:14 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_instance_profile.Ansible-Instance-Profile
2021/02/13 15:00:14 [TRACE] Re-validating config for "aws_iam_instance_profile.Ansible-Instance-Profile"
2021/02/13 15:00:14 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:14 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:14 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_instance_profile.Ansible-Instance-Profile, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .path: planned value cty.StringVal("/") does not match config value cty.NullVal(cty.String)
2021/02/13 15:00:14 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:14 [TRACE] EvalReadState: reading state for aws_iam_instance_profile.Ansible-Instance-Profile
2021/02/13 15:00:14 [TRACE] EvalReadState: no state present for aws_iam_instance_profile.Ansible-Instance-Profile
2021/02/13 15:00:14 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:14 [DEBUG] aws_iam_instance_profile.Ansible-Instance-Profile: applying the planned Create change
2021/02/13 15:00:14 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:15 [TRACE] dag/walk: vertex "aws_eip.eipForNatGw" is waiting for "aws_internet_gateway.internetGateway[0]"
2021/02/13 15:00:15 [TRACE] dag/walk: vertex "aws_route_table.rtPrivate[0]" is waiting for "aws_nat_gateway.natGw"
2021/02/13 15:00:15 [TRACE] dag/walk: vertex "aws_security_group.sgMysql" is waiting for "aws_vpc.vpc[0]"
2021/02/13 15:00:15 [TRACE] dag/walk: vertex "aws_instance.aviCtrl[0]" is waiting for "aws_security_group.sgAvi"
2021/02/13 15:00:15 [TRACE] dag/walk: vertex "aws_route53_record.aviCtrl" is waiting for "aws_instance.aviCtrl[0]"
2021/02/13 15:00:15 [TRACE] dag/walk: vertex "aws_subnet.subnetMgt" is waiting for "aws_vpc.vpc[0]"
2021/02/13 15:00:15 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationMysql" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:00:15 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_iam_policy.AviController-EC2-Policy, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .description: was null, but now cty.StringVal("")
2021/02/13 15:00:15 [TRACE] EvalWriteState: recording 0 dependencies for aws_iam_policy.AviController-EC2-Policy
2021/02/13 15:00:15 [TRACE] EvalWriteState: writing current state object for aws_iam_policy.AviController-EC2-Policy
2021/02/13 15:00:15 [TRACE] EvalWriteState: recording 0 dependencies for aws_iam_policy.AviController-EC2-Policy
2021/02/13 15:00:15 [TRACE] EvalWriteState: writing current state object for aws_iam_policy.AviController-EC2-Policy
2021/02/13 15:00:15 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:15 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3339
2021/02/13 15:00:15 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:15 [TRACE] vertex "aws_iam_policy.AviController-EC2-Policy": visit complete
2021/02/13 15:00:15 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.avi-attach1"
2021/02/13 15:00:15 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach1": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:15 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_role_policy_attachment.ansible-attach1
2021/02/13 15:00:15 [TRACE] EvalReadState: reading state for aws_iam_role_policy_attachment.ansible-attach1
2021/02/13 15:00:15 [TRACE] EvalReadState: no state present for aws_iam_role_policy_attachment.ansible-attach1
2021/02/13 15:00:15 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_role_policy_attachment.ansible-attach1
2021/02/13 15:00:15 [TRACE] Re-validating config for "aws_iam_role_policy_attachment.ansible-attach1"
2021/02/13 15:00:15 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:15 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:15 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:15 [TRACE] EvalReadState: reading state for aws_iam_role_policy_attachment.ansible-attach1
2021/02/13 15:00:15 [TRACE] EvalReadState: no state present for aws_iam_role_policy_attachment.ansible-attach1
2021/02/13 15:00:15 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:15 [DEBUG] aws_iam_role_policy_attachment.ansible-attach1: applying the planned Create change
2021/02/13 15:00:15 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:15 [TRACE] EvalWriteState: recording 1 dependencies for aws_iam_instance_profile.AviController-Instance-Profile
2021/02/13 15:00:15 [TRACE] EvalWriteState: writing current state object for aws_iam_instance_profile.AviController-Instance-Profile
2021/02/13 15:00:15 [TRACE] EvalWriteState: recording 1 dependencies for aws_iam_instance_profile.AviController-Instance-Profile
2021/02/13 15:00:15 [TRACE] EvalWriteState: writing current state object for aws_iam_instance_profile.AviController-Instance-Profile
2021/02/13 15:00:15 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:15 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3340
2021/02/13 15:00:15 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:15 [TRACE] vertex "aws_iam_instance_profile.AviController-Instance-Profile": visit complete
2021/02/13 15:00:15 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_role_policy_attachment.avi-attach5
2021/02/13 15:00:15 [TRACE] EvalReadState: reading state for aws_iam_role_policy_attachment.avi-attach5
2021/02/13 15:00:15 [TRACE] EvalReadState: no state present for aws_iam_role_policy_attachment.avi-attach5
2021/02/13 15:00:15 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_role_policy_attachment.avi-attach5
2021/02/13 15:00:15 [TRACE] Re-validating config for "aws_iam_role_policy_attachment.avi-attach5"
2021/02/13 15:00:15 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:15 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:15 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:15 [TRACE] EvalReadState: reading state for aws_iam_role_policy_attachment.avi-attach5
2021/02/13 15:00:15 [TRACE] EvalReadState: no state present for aws_iam_role_policy_attachment.avi-attach5
2021/02/13 15:00:15 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:15 [DEBUG] aws_iam_role_policy_attachment.avi-attach5: applying the planned Create change
2021/02/13 15:00:15 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:15 [TRACE] EvalWriteState: recording 2 dependencies for aws_iam_role_policy_attachment.avi-attach2
2021/02/13 15:00:15 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy_attachment.avi-attach2
2021/02/13 15:00:15 [TRACE] EvalWriteState: recording 2 dependencies for aws_iam_role_policy_attachment.avi-attach2
2021/02/13 15:00:15 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy_attachment.avi-attach2
2021/02/13 15:00:15 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:15 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3341
2021/02/13 15:00:15 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:15 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach2": visit complete
2021/02/13 15:00:15 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_role_policy_attachment.avi-attach1
2021/02/13 15:00:15 [TRACE] EvalReadState: reading state for aws_iam_role_policy_attachment.avi-attach1
2021/02/13 15:00:15 [TRACE] EvalReadState: no state present for aws_iam_role_policy_attachment.avi-attach1
2021/02/13 15:00:15 [TRACE] EvalReadDiff: Read Create change from plan for aws_iam_role_policy_attachment.avi-attach1
2021/02/13 15:00:15 [TRACE] Re-validating config for "aws_iam_role_policy_attachment.avi-attach1"
2021/02/13 15:00:15 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:15 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:15 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:15 [TRACE] EvalReadState: reading state for aws_iam_role_policy_attachment.avi-attach1
2021/02/13 15:00:15 [TRACE] EvalReadState: no state present for aws_iam_role_policy_attachment.avi-attach1
2021/02/13 15:00:15 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:15 [DEBUG] aws_iam_role_policy_attachment.avi-attach1: applying the planned Create change
2021/02/13 15:00:15 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:15 [TRACE] EvalWriteState: recording 2 dependencies for aws_iam_role_policy_attachment.avi-attach4
2021/02/13 15:00:15 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy_attachment.avi-attach4
2021/02/13 15:00:15 [TRACE] EvalWriteState: recording 2 dependencies for aws_iam_role_policy_attachment.avi-attach4
2021/02/13 15:00:15 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy_attachment.avi-attach4
2021/02/13 15:00:15 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:15 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3342
2021/02/13 15:00:15 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:15 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach4": visit complete
2021/02/13 15:00:15 [TRACE] EvalWriteState: recording 2 dependencies for aws_iam_role_policy_attachment.avi-attach3
2021/02/13 15:00:15 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy_attachment.avi-attach3
2021/02/13 15:00:15 [TRACE] EvalWriteState: recording 2 dependencies for aws_iam_role_policy_attachment.avi-attach3
2021/02/13 15:00:15 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy_attachment.avi-attach3
2021/02/13 15:00:15 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:15 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3343
2021/02/13 15:00:15 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:15 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach3": visit complete
2021/02/13 15:00:16 [TRACE] EvalWriteState: recording 2 dependencies for aws_iam_role_policy_attachment.avi-attach7
2021/02/13 15:00:16 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy_attachment.avi-attach7
2021/02/13 15:00:16 [TRACE] EvalWriteState: recording 2 dependencies for aws_iam_role_policy_attachment.avi-attach7
2021/02/13 15:00:16 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy_attachment.avi-attach7
2021/02/13 15:00:16 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:16 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3344
2021/02/13 15:00:16 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:16 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach7": visit complete
2021/02/13 15:00:16 [TRACE] EvalWriteState: recording 2 dependencies for aws_iam_role_policy_attachment.avi-attach8
2021/02/13 15:00:16 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy_attachment.avi-attach8
2021/02/13 15:00:16 [TRACE] EvalWriteState: recording 2 dependencies for aws_iam_role_policy_attachment.avi-attach8
2021/02/13 15:00:16 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy_attachment.avi-attach8
2021/02/13 15:00:16 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:16 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3345
2021/02/13 15:00:16 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:16 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach8": visit complete
2021/02/13 15:00:16 [TRACE] dag/walk: vertex "aws_instance.backend[1]" is waiting for "aws_subnet.subnetBackend[2]"
2021/02/13 15:00:16 [TRACE] dag/walk: vertex "aws_security_group.sgJump" is waiting for "aws_vpc.vpc[0]"
2021/02/13 15:00:16 [TRACE] dag/walk: vertex "aws_security_group.sgBackend" is waiting for "aws_vpc.vpc[0]"
2021/02/13 15:00:16 [TRACE] dag/walk: vertex "aws_instance.backend[0]" is waiting for "aws_security_group.sgBackend"
2021/02/13 15:00:16 [TRACE] EvalWriteState: recording 1 dependencies for aws_iam_role_policy.vmimport
2021/02/13 15:00:16 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy.vmimport
2021/02/13 15:00:16 [TRACE] EvalWriteState: recording 1 dependencies for aws_iam_role_policy.vmimport
2021/02/13 15:00:16 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy.vmimport
2021/02/13 15:00:16 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:16 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3346
2021/02/13 15:00:16 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:16 [TRACE] vertex "aws_iam_role_policy.vmimport": visit complete
2021-02-13T15:00:16.472Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:16 [DEBUG] Waiting for state to become: [success]
2021/02/13 15:00:17 [TRACE] EvalWriteState: recording 0 dependencies for aws_vpc.vpc[0]
2021/02/13 15:00:17 [TRACE] EvalWriteState: writing current state object for aws_vpc.vpc[0]
2021/02/13 15:00:17 [TRACE] EvalWriteState: recording 0 dependencies for aws_vpc.vpc[0]
2021/02/13 15:00:17 [TRACE] EvalWriteState: writing current state object for aws_vpc.vpc[0]
2021/02/13 15:00:17 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:17 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3347
2021/02/13 15:00:17 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:17 [TRACE] vertex "aws_vpc.vpc[0]": visit complete
2021/02/13 15:00:17 [TRACE] dag/walk: visiting "aws_subnet.subnetAviSeMgt[0]"
2021/02/13 15:00:17 [TRACE] vertex "aws_subnet.subnetAviSeMgt[0]": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:17 [TRACE] dag/walk: visiting "aws_subnet.subnetBackend[2]"
2021/02/13 15:00:17 [TRACE] vertex "aws_subnet.subnetBackend[2]": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:17 [TRACE] EvalReadDiff: Read Create change from plan for aws_subnet.subnetAviSeMgt[0]
2021/02/13 15:00:17 [TRACE] EvalReadState: reading state for aws_subnet.subnetAviSeMgt[0]
2021/02/13 15:00:17 [TRACE] EvalReadState: no state present for aws_subnet.subnetAviSeMgt[0]
2021/02/13 15:00:17 [TRACE] dag/walk: visiting "aws_security_group.sgAvi"
2021/02/13 15:00:17 [TRACE] vertex "aws_security_group.sgAvi": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:17 [TRACE] EvalReadDiff: Read Create change from plan for aws_subnet.subnetAviSeMgt[0]
2021/02/13 15:00:17 [TRACE] EvalReadDiff: Read Create change from plan for aws_subnet.subnetBackend[2]
2021/02/13 15:00:17 [TRACE] EvalReadState: reading state for aws_subnet.subnetBackend[2]
2021/02/13 15:00:17 [TRACE] EvalReadState: no state present for aws_subnet.subnetBackend[2]
2021/02/13 15:00:17 [TRACE] EvalReadDiff: Read Create change from plan for aws_subnet.subnetBackend[2]
2021/02/13 15:00:17 [TRACE] EvalReadDiff: Read Create change from plan for aws_security_group.sgAvi
2021/02/13 15:00:17 [TRACE] EvalReadState: reading state for aws_security_group.sgAvi
2021/02/13 15:00:17 [TRACE] EvalReadState: no state present for aws_security_group.sgAvi
2021/02/13 15:00:17 [TRACE] dag/walk: visiting "aws_subnet.subnetBackend[0]"
2021/02/13 15:00:17 [TRACE] vertex "aws_subnet.subnetBackend[0]": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:17 [TRACE] EvalReadDiff: Read Create change from plan for aws_subnet.subnetBackend[0]
2021/02/13 15:00:17 [TRACE] EvalReadState: reading state for aws_subnet.subnetBackend[0]
2021/02/13 15:00:17 [TRACE] EvalReadState: no state present for aws_subnet.subnetBackend[0]
2021/02/13 15:00:17 [TRACE] EvalReadDiff: Read Create change from plan for aws_subnet.subnetBackend[0]
2021/02/13 15:00:17 [TRACE] Re-validating config for "aws_subnet.subnetBackend[2]"
2021/02/13 15:00:17 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:17 [TRACE] dag/walk: visiting "aws_subnet.subnetAviVs[2]"
2021/02/13 15:00:17 [TRACE] vertex "aws_subnet.subnetAviVs[2]": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:17 [TRACE] dag/walk: visiting "aws_subnet.subnetAviSeMgt[2]"
2021/02/13 15:00:17 [TRACE] vertex "aws_subnet.subnetAviSeMgt[2]": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:17 [TRACE] EvalReadDiff: Read Create change from plan for aws_subnet.subnetAviVs[2]
2021/02/13 15:00:17 [TRACE] EvalReadState: reading state for aws_subnet.subnetAviVs[2]
2021/02/13 15:00:17 [TRACE] EvalReadState: no state present for aws_subnet.subnetAviVs[2]
2021/02/13 15:00:17 [TRACE] EvalReadDiff: Read Create change from plan for aws_subnet.subnetAviVs[2]
2021/02/13 15:00:17 [TRACE] EvalReadDiff: Read Create change from plan for aws_subnet.subnetAviSeMgt[2]
2021/02/13 15:00:17 [TRACE] EvalReadState: reading state for aws_subnet.subnetAviSeMgt[2]
2021/02/13 15:00:17 [TRACE] EvalReadState: no state present for aws_subnet.subnetAviSeMgt[2]
2021/02/13 15:00:17 [TRACE] dag/walk: visiting "aws_security_group.sgOpencart"
2021/02/13 15:00:17 [TRACE] vertex "aws_security_group.sgOpencart": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:17 [TRACE] EvalReadDiff: Read Create change from plan for aws_subnet.subnetAviSeMgt[2]
2021/02/13 15:00:17 [TRACE] dag/walk: visiting "aws_subnet.subnetMysql"
2021/02/13 15:00:17 [TRACE] vertex "aws_subnet.subnetMysql": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:17 [TRACE] Re-validating config for "aws_subnet.subnetBackend[0]"
2021/02/13 15:00:17 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:17 [TRACE] dag/walk: visiting "aws_internet_gateway.internetGateway[0]"
2021/02/13 15:00:17 [TRACE] vertex "aws_internet_gateway.internetGateway[0]": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:17 [TRACE] dag/walk: visiting "aws_subnet.subnetAviVs[1]"
2021/02/13 15:00:17 [TRACE] vertex "aws_subnet.subnetAviVs[1]": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:17 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:17 [TRACE] Re-validating config for "aws_subnet.subnetAviSeMgt[2]"
2021/02/13 15:00:17 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:17 [TRACE] dag/walk: visiting "aws_subnet.subnetAviSeMgt[1]"
2021/02/13 15:00:17 [TRACE] vertex "aws_subnet.subnetAviSeMgt[1]": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:17 [TRACE] dag/walk: visiting "aws_security_group.sgJump"
2021/02/13 15:00:17 [TRACE] vertex "aws_security_group.sgJump": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:17 [TRACE] dag/walk: visiting "aws_subnet.subnetMgt"
2021/02/13 15:00:17 [TRACE] vertex "aws_subnet.subnetMgt": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:17 [TRACE] dag/walk: visiting "aws_security_group.sgMysql"
2021/02/13 15:00:17 [TRACE] vertex "aws_security_group.sgMysql": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:17 [TRACE] dag/walk: visiting "aws_subnet.subnetBackend[1]"
2021/02/13 15:00:17 [TRACE] vertex "aws_subnet.subnetBackend[1]": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:17 [TRACE] dag/walk: visiting "aws_subnet.subnetAviVs[0]"
2021/02/13 15:00:17 [TRACE] vertex "aws_subnet.subnetAviVs[0]": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:17 [TRACE] EvalReadDiff: Read Create change from plan for aws_security_group.sgAvi
2021/02/13 15:00:17 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_subnet.subnetBackend[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .assign_ipv6_address_on_creation: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/02/13 15:00:17 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:17 [TRACE] EvalReadState: reading state for aws_subnet.subnetBackend[0]
2021/02/13 15:00:17 [TRACE] EvalReadState: no state present for aws_subnet.subnetBackend[0]
2021/02/13 15:00:17 [TRACE] dag/walk: visiting "aws_security_group.sgBackend"
2021/02/13 15:00:17 [TRACE] vertex "aws_security_group.sgBackend": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:17 [TRACE] Re-validating config for "aws_subnet.subnetAviSeMgt[0]"
2021/02/13 15:00:17 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:17 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:17 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:17 [TRACE] Re-validating config for "aws_subnet.subnetAviVs[2]"
2021/02/13 15:00:17 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:17 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:17 [DEBUG] aws_subnet.subnetBackend[0]: applying the planned Create change
2021/02/13 15:00:17 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:17 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_subnet.subnetAviSeMgt[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .assign_ipv6_address_on_creation: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/02/13 15:00:17 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:17 [TRACE] EvalReadState: reading state for aws_subnet.subnetAviSeMgt[2]
2021/02/13 15:00:17 [TRACE] EvalReadState: no state present for aws_subnet.subnetAviSeMgt[2]
2021/02/13 15:00:17 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:17 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_subnet.subnetBackend[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .assign_ipv6_address_on_creation: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/02/13 15:00:17 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:17 [TRACE] EvalReadState: reading state for aws_subnet.subnetBackend[2]
2021/02/13 15:00:17 [TRACE] EvalReadState: no state present for aws_subnet.subnetBackend[2]
2021/02/13 15:00:17 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:17 [DEBUG] aws_subnet.subnetAviSeMgt[2]: applying the planned Create change
2021/02/13 15:00:17 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:17 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:17 [DEBUG] aws_subnet.subnetBackend[2]: applying the planned Create change
2021/02/13 15:00:17 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:17 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:17 [TRACE] Re-validating config for "aws_security_group.sgAvi"
2021/02/13 15:00:17 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:17 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_subnet.subnetAviSeMgt[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .assign_ipv6_address_on_creation: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/02/13 15:00:17 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:17 [TRACE] EvalReadState: reading state for aws_subnet.subnetAviSeMgt[0]
2021/02/13 15:00:17 [TRACE] EvalReadState: no state present for aws_subnet.subnetAviSeMgt[0]
2021/02/13 15:00:17 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:17 [DEBUG] aws_subnet.subnetAviSeMgt[0]: applying the planned Create change
2021/02/13 15:00:17 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:17 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_subnet.subnetAviVs[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .assign_ipv6_address_on_creation: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/02/13 15:00:17 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:17 [TRACE] EvalReadState: reading state for aws_subnet.subnetAviVs[2]
2021/02/13 15:00:17 [TRACE] EvalReadState: no state present for aws_subnet.subnetAviVs[2]
2021-02-13T15:00:17.167Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:17 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021-02-13T15:00:17.167Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:17 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021/02/13 15:00:17 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:17 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:17 [DEBUG] aws_subnet.subnetAviVs[2]: applying the planned Create change
2021/02/13 15:00:17 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:17 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sgAvi, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(123), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("udp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(123)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(443), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(443)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8443), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8443)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(123), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("udp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(123)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(443), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(443)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8443), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8443)})})
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .description: planned value cty.StringVal("Managed by Terraform") does not match config value cty.NullVal(cty.String)
2021/02/13 15:00:17 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:17 [TRACE] EvalReadState: reading state for aws_security_group.sgAvi
2021/02/13 15:00:17 [TRACE] EvalReadState: no state present for aws_security_group.sgAvi
2021/02/13 15:00:17 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:17 [DEBUG] aws_security_group.sgAvi: applying the planned Create change
2021/02/13 15:00:17 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-13T15:00:17.175Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:17 [DEBUG] Security Group create configuration: {
2021-02-13T15:00:17.175Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Description: "Managed by Terraform",
2021-02-13T15:00:17.175Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   GroupName: "sgAvi",
2021-02-13T15:00:17.175Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   VpcId: "vpc-009e5ad5af72453ae"
2021-02-13T15:00:17.175Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021/02/13 15:00:17 [TRACE] EvalWriteState: recording 2 dependencies for aws_iam_role_policy_attachment.avi-attach5
2021/02/13 15:00:17 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy_attachment.avi-attach5
2021/02/13 15:00:17 [TRACE] EvalWriteState: recording 2 dependencies for aws_iam_role_policy_attachment.avi-attach5
2021/02/13 15:00:17 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy_attachment.avi-attach5
2021/02/13 15:00:17 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:17 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3348
2021/02/13 15:00:17 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:17 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach5": visit complete
2021/02/13 15:00:17 [TRACE] EvalReadDiff: Read Create change from plan for aws_security_group.sgOpencart
2021/02/13 15:00:17 [TRACE] EvalReadState: reading state for aws_security_group.sgOpencart
2021/02/13 15:00:17 [TRACE] EvalReadState: no state present for aws_security_group.sgOpencart
2021/02/13 15:00:17 [TRACE] EvalReadDiff: Read Create change from plan for aws_security_group.sgOpencart
2021/02/13 15:00:17 [TRACE] Re-validating config for "aws_security_group.sgOpencart"
2021/02/13 15:00:17 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021-02-13T15:00:17.277Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:17 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021-02-13T15:00:17.277Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:17 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021/02/13 15:00:17 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:17 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sgOpencart, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .description: planned value cty.StringVal("Managed by Terraform") does not match config value cty.NullVal(cty.String)
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(443), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(443)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(443), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(443)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)})})
2021/02/13 15:00:17 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:17 [TRACE] EvalReadState: reading state for aws_security_group.sgOpencart
2021/02/13 15:00:17 [TRACE] EvalReadState: no state present for aws_security_group.sgOpencart
2021/02/13 15:00:17 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:17 [DEBUG] aws_security_group.sgOpencart: applying the planned Create change
2021/02/13 15:00:17 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-13T15:00:17.290Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:17 [DEBUG] Security Group create configuration: {
2021-02-13T15:00:17.290Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Description: "Managed by Terraform",
2021-02-13T15:00:17.290Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   GroupName: "sgOpencart",
2021-02-13T15:00:17.290Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   VpcId: "vpc-009e5ad5af72453ae"
2021-02-13T15:00:17.290Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021/02/13 15:00:17 [TRACE] EvalWriteState: recording 1 dependencies for aws_iam_instance_profile.Ansible-Instance-Profile
2021/02/13 15:00:17 [TRACE] EvalWriteState: writing current state object for aws_iam_instance_profile.Ansible-Instance-Profile
2021/02/13 15:00:17 [TRACE] EvalWriteState: recording 1 dependencies for aws_iam_instance_profile.Ansible-Instance-Profile
2021/02/13 15:00:17 [TRACE] EvalWriteState: writing current state object for aws_iam_instance_profile.Ansible-Instance-Profile
2021/02/13 15:00:17 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:17 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3349
2021/02/13 15:00:17 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:17 [TRACE] vertex "aws_iam_instance_profile.Ansible-Instance-Profile": visit complete
2021/02/13 15:00:17 [TRACE] EvalReadDiff: Read Create change from plan for aws_subnet.subnetMysql
2021/02/13 15:00:17 [TRACE] EvalReadState: reading state for aws_subnet.subnetMysql
2021/02/13 15:00:17 [TRACE] EvalReadState: no state present for aws_subnet.subnetMysql
2021/02/13 15:00:17 [TRACE] EvalReadDiff: Read Create change from plan for aws_subnet.subnetMysql
2021/02/13 15:00:17 [TRACE] Re-validating config for "aws_subnet.subnetMysql"
2021/02/13 15:00:17 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:17 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:17 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_subnet.subnetMysql, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .assign_ipv6_address_on_creation: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/02/13 15:00:17 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:17 [TRACE] EvalReadState: reading state for aws_subnet.subnetMysql
2021/02/13 15:00:17 [TRACE] EvalReadState: no state present for aws_subnet.subnetMysql
2021/02/13 15:00:17 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:17 [DEBUG] aws_subnet.subnetMysql: applying the planned Create change
2021/02/13 15:00:17 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:17 [TRACE] EvalWriteState: recording 2 dependencies for aws_iam_role_policy_attachment.ansible-attach1
2021/02/13 15:00:17 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy_attachment.ansible-attach1
2021/02/13 15:00:17 [TRACE] EvalWriteState: recording 2 dependencies for aws_iam_role_policy_attachment.ansible-attach1
2021/02/13 15:00:17 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy_attachment.ansible-attach1
2021/02/13 15:00:17 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:17 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3350
2021/02/13 15:00:17 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:17 [TRACE] vertex "aws_iam_role_policy_attachment.ansible-attach1": visit complete
2021/02/13 15:00:17 [TRACE] EvalReadDiff: Read Create change from plan for aws_internet_gateway.internetGateway[0]
2021/02/13 15:00:17 [TRACE] EvalReadState: reading state for aws_internet_gateway.internetGateway[0]
2021/02/13 15:00:17 [TRACE] EvalReadState: no state present for aws_internet_gateway.internetGateway[0]
2021/02/13 15:00:17 [TRACE] EvalReadDiff: Read Create change from plan for aws_internet_gateway.internetGateway[0]
2021/02/13 15:00:17 [TRACE] Re-validating config for "aws_internet_gateway.internetGateway[0]"
2021/02/13 15:00:17 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:17 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:17 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:17 [TRACE] EvalReadState: reading state for aws_internet_gateway.internetGateway[0]
2021/02/13 15:00:17 [TRACE] EvalReadState: no state present for aws_internet_gateway.internetGateway[0]
2021/02/13 15:00:17 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:17 [DEBUG] aws_internet_gateway.internetGateway[0]: applying the planned Create change
2021/02/13 15:00:17 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-13T15:00:17.359Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:17 [DEBUG] Creating internet gateway
2021/02/13 15:00:17 [TRACE] EvalWriteState: recording 2 dependencies for aws_iam_role_policy_attachment.avi-attach1
2021/02/13 15:00:17 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy_attachment.avi-attach1
2021/02/13 15:00:17 [TRACE] EvalWriteState: recording 2 dependencies for aws_iam_role_policy_attachment.avi-attach1
2021/02/13 15:00:17 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy_attachment.avi-attach1
2021/02/13 15:00:17 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:17 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3351
2021/02/13 15:00:17 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:17 [TRACE] vertex "aws_iam_role_policy_attachment.avi-attach1": visit complete
2021/02/13 15:00:17 [TRACE] EvalReadDiff: Read Create change from plan for aws_subnet.subnetAviVs[1]
2021/02/13 15:00:17 [TRACE] EvalReadState: reading state for aws_subnet.subnetAviVs[1]
2021/02/13 15:00:17 [TRACE] EvalReadState: no state present for aws_subnet.subnetAviVs[1]
2021/02/13 15:00:17 [TRACE] EvalReadDiff: Read Create change from plan for aws_subnet.subnetAviVs[1]
2021/02/13 15:00:17 [TRACE] Re-validating config for "aws_subnet.subnetAviVs[1]"
2021/02/13 15:00:17 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:17 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:17 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_subnet.subnetAviVs[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .assign_ipv6_address_on_creation: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/02/13 15:00:17 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:17 [TRACE] EvalReadState: reading state for aws_subnet.subnetAviVs[1]
2021/02/13 15:00:17 [TRACE] EvalReadState: no state present for aws_subnet.subnetAviVs[1]
2021/02/13 15:00:17 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:17 [DEBUG] aws_subnet.subnetAviVs[1]: applying the planned Create change
2021/02/13 15:00:17 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:17 [TRACE] dag/walk: vertex "output.destroy" is waiting for "aws_instance.jump"
2021/02/13 15:00:17 [TRACE] dag/walk: vertex "provisioner.remote-exec (close)" is waiting for "null_resource.foo7"
2021/02/13 15:00:17 [TRACE] dag/walk: vertex "aws_launch_template.templateAsg" is waiting for "aws_security_group.sgBackend"
2021/02/13 15:00:17 [TRACE] dag/walk: vertex "provisioner.file (close)" is waiting for "null_resource.foo7"
2021/02/13 15:00:17 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/null\"] (close)" is waiting for "null_resource.foo7"
2021/02/13 15:00:17 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationAviSeMgt[2]" is waiting for "aws_subnet.subnetAviSeMgt[1]"
2021/02/13 15:00:17 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationAviVs[1]" is waiting for "aws_subnet.subnetAviVs[1]"
2021/02/13 15:00:17 [TRACE] dag/walk: vertex "output.jumpPublicIp" is waiting for "aws_instance.jump"
2021/02/13 15:00:17 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationMgt" is waiting for "aws_route_table.rt[0]"
2021/02/13 15:00:17 [TRACE] dag/walk: vertex "aws_autoscaling_group.autoScalingGroup" is waiting for "aws_subnet.subnetBackend[2]"
2021/02/13 15:00:17 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[2]" is waiting for "aws_subnet.subnetBackend[1]"
2021/02/13 15:00:17 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "null_resource.foo7"
2021/02/13 15:00:17 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationAviVs[2]" is waiting for "aws_subnet.subnetAviVs[1]"
2021/02/13 15:00:17 [TRACE] dag/walk: vertex "null_resource.foo7" is waiting for "aws_instance.backend[2]"
2021/02/13 15:00:17 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationAviSeMgt[1]" is waiting for "aws_subnet.subnetAviSeMgt[0]"
2021/02/13 15:00:17 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[0]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:00:17 [TRACE] dag/walk: vertex "output.aviCtrlPublicIp" is waiting for "aws_instance.aviCtrl[0]"
2021/02/13 15:00:17 [TRACE] dag/walk: vertex "aws_route_table.rt[0]" is waiting for "aws_internet_gateway.internetGateway[0]"
2021/02/13 15:00:17 [TRACE] dag/walk: vertex "aws_route53_record.jump" is waiting for "aws_instance.jump"
2021/02/13 15:00:17 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationAviSeMgt[0]" is waiting for "aws_subnet.subnetAviSeMgt[2]"
2021/02/13 15:00:17 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/13 15:00:17 [TRACE] dag/walk: vertex "aws_instance.jump" is waiting for "aws_subnet.subnetMgt"
2021/02/13 15:00:17 [TRACE] dag/walk: vertex "aws_nat_gateway.natGw" is waiting for "aws_subnet.subnetMgt"
2021/02/13 15:00:17 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" is waiting for "aws_autoscaling_group.autoScalingGroup"
2021-02-13T15:00:17.849Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:17 [INFO] Security Group ID: sg-071781f08020dff46
2021-02-13T15:00:17.850Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:17 [DEBUG] Waiting for Security Group (sg-071781f08020dff46) to exist
2021-02-13T15:00:17.850Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:17 [DEBUG] Waiting for state to become: [exists]
2021/02/13 15:00:17 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationAviVs[0]" is waiting for "aws_subnet.subnetAviVs[1]"
2021/02/13 15:00:17 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[1]" is waiting for "aws_subnet.subnetBackend[0]"
2021-02-13T15:00:17.906Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:17 [INFO] InternetGateway ID: igw-0dee337451ede50d9
2021-02-13T15:00:17.906Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:17 [DEBUG] Waiting for state to become: [success]
2021-02-13T15:00:17.931Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:17 [INFO] Subnet ID: subnet-01313bdde73babaaa
2021-02-13T15:00:17.931Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:17 [DEBUG] Waiting for subnet (subnet-01313bdde73babaaa) to become available
2021-02-13T15:00:17.931Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:17 [DEBUG] Waiting for state to become: [available]
2021-02-13T15:00:17.943Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:17 [INFO] Subnet ID: subnet-035355b613689bad7
2021-02-13T15:00:17.943Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:17 [DEBUG] Waiting for subnet (subnet-035355b613689bad7) to become available
2021-02-13T15:00:17.943Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:17 [DEBUG] Waiting for state to become: [available]
2021-02-13T15:00:17.943Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:17 [INFO] Security Group ID: sg-06deb94003785fe23
2021-02-13T15:00:17.943Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:17 [DEBUG] Waiting for Security Group (sg-06deb94003785fe23) to exist
2021-02-13T15:00:17.943Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:17 [DEBUG] Waiting for state to become: [exists]
2021-02-13T15:00:17.948Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:17 [INFO] Subnet ID: subnet-0134d960144f999a5
2021-02-13T15:00:17.948Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:17 [DEBUG] Waiting for subnet (subnet-0134d960144f999a5) to become available
2021-02-13T15:00:17.948Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:17 [DEBUG] Waiting for state to become: [available]
2021-02-13T15:00:17.953Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:17 [INFO] Subnet ID: subnet-0fec7531f3b69c144
2021-02-13T15:00:17.954Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:17 [DEBUG] Waiting for subnet (subnet-0fec7531f3b69c144) to become available
2021-02-13T15:00:17.954Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:17 [DEBUG] Waiting for state to become: [available]
2021-02-13T15:00:18.013Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:18 [INFO] Subnet ID: subnet-0157b22f8e7449338
2021-02-13T15:00:18.013Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:18 [DEBUG] Waiting for subnet (subnet-0157b22f8e7449338) to become available
2021-02-13T15:00:18.013Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:18 [DEBUG] Waiting for state to become: [available]
2021-02-13T15:00:18.019Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:18 [INFO] Subnet ID: subnet-0888b5e23e7f2c552
2021-02-13T15:00:18.019Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:18 [DEBUG] Waiting for subnet (subnet-0888b5e23e7f2c552) to become available
2021-02-13T15:00:18.019Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:18 [DEBUG] Waiting for state to become: [available]
2021/02/13 15:00:18 [TRACE] dag/walk: vertex "aws_instance.backend[2]" is waiting for "aws_subnet.subnetBackend[1]"
2021-02-13T15:00:18.250Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:18 [INFO] Subnet ID: subnet-0657cd2f5bf22ec7f
2021-02-13T15:00:18.250Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:18 [DEBUG] Waiting for subnet (subnet-0657cd2f5bf22ec7f) to become available
2021-02-13T15:00:18.250Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:18 [DEBUG] Waiting for state to become: [available]
2021-02-13T15:00:18.480Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:18 [INFO] Attaching Internet Gateway 'igw-0dee337451ede50d9' to VPC 'vpc-009e5ad5af72453ae'
2021-02-13T15:00:18.480Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:18 [DEBUG] Waiting for state to become: [success]
2021-02-13T15:00:18.546Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:18 [DEBUG] Revoking default egress rule for Security Group for sg-06deb94003785fe23
2021-02-13T15:00:18.579Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:18 [DEBUG] Revoking default egress rule for Security Group for sg-071781f08020dff46
2021-02-13T15:00:19.127Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:19 [DEBUG] Waiting for internet gateway (igw-0dee337451ede50d9) to attach
2021-02-13T15:00:19.127Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:19 [DEBUG] Waiting for state to become: [available]
2021/02/13 15:00:19 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_subnet.subnetAviSeMgt[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ipv6_cidr_block: was null, but now cty.StringVal("")
      - .outpost_arn: was null, but now cty.StringVal("")
2021/02/13 15:00:19 [TRACE] EvalWriteState: recording 2 dependencies for aws_subnet.subnetAviSeMgt[2]
2021/02/13 15:00:19 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetAviSeMgt[2]
2021/02/13 15:00:19 [TRACE] EvalWriteState: recording 2 dependencies for aws_subnet.subnetAviSeMgt[2]
2021/02/13 15:00:19 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetAviSeMgt[2]
2021/02/13 15:00:19 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:19 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3352
2021/02/13 15:00:19 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:19 [TRACE] vertex "aws_subnet.subnetAviSeMgt[2]": visit complete
2021/02/13 15:00:19 [TRACE] EvalReadDiff: Read Create change from plan for aws_subnet.subnetAviSeMgt[1]
2021/02/13 15:00:19 [TRACE] EvalReadState: reading state for aws_subnet.subnetAviSeMgt[1]
2021/02/13 15:00:19 [TRACE] EvalReadState: no state present for aws_subnet.subnetAviSeMgt[1]
2021/02/13 15:00:19 [TRACE] EvalReadDiff: Read Create change from plan for aws_subnet.subnetAviSeMgt[1]
2021/02/13 15:00:19 [TRACE] Re-validating config for "aws_subnet.subnetAviSeMgt[1]"
2021/02/13 15:00:19 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:19 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:19 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_subnet.subnetAviSeMgt[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .assign_ipv6_address_on_creation: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/02/13 15:00:19 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:19 [TRACE] EvalReadState: reading state for aws_subnet.subnetAviSeMgt[1]
2021/02/13 15:00:19 [TRACE] EvalReadState: no state present for aws_subnet.subnetAviSeMgt[1]
2021/02/13 15:00:19 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:19 [DEBUG] aws_subnet.subnetAviSeMgt[1]: applying the planned Create change
2021/02/13 15:00:19 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:19 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_subnet.subnetBackend[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .outpost_arn: was null, but now cty.StringVal("")
      - .ipv6_cidr_block: was null, but now cty.StringVal("")
2021/02/13 15:00:19 [TRACE] EvalWriteState: recording 2 dependencies for aws_subnet.subnetBackend[0]
2021/02/13 15:00:19 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetBackend[0]
2021/02/13 15:00:19 [TRACE] EvalWriteState: recording 2 dependencies for aws_subnet.subnetBackend[0]
2021/02/13 15:00:19 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetBackend[0]
2021/02/13 15:00:19 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:19 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3353
2021/02/13 15:00:19 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:19 [TRACE] vertex "aws_subnet.subnetBackend[0]": visit complete
2021/02/13 15:00:19 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_subnet.subnetAviSeMgt[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ipv6_cidr_block: was null, but now cty.StringVal("")
      - .outpost_arn: was null, but now cty.StringVal("")
2021/02/13 15:00:19 [TRACE] EvalWriteState: recording 2 dependencies for aws_subnet.subnetAviSeMgt[0]
2021/02/13 15:00:19 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetAviSeMgt[0]
2021/02/13 15:00:19 [TRACE] EvalWriteState: recording 2 dependencies for aws_subnet.subnetAviSeMgt[0]
2021/02/13 15:00:19 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetAviSeMgt[0]
2021/02/13 15:00:19 [TRACE] EvalReadDiff: Read Create change from plan for aws_security_group.sgJump
2021/02/13 15:00:19 [TRACE] EvalReadState: reading state for aws_security_group.sgJump
2021/02/13 15:00:19 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:19 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3354
2021/02/13 15:00:19 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:19 [TRACE] vertex "aws_subnet.subnetAviSeMgt[0]": visit complete
2021/02/13 15:00:19 [TRACE] EvalReadState: no state present for aws_security_group.sgJump
2021/02/13 15:00:19 [TRACE] EvalReadDiff: Read Create change from plan for aws_subnet.subnetMgt
2021/02/13 15:00:19 [TRACE] EvalReadState: reading state for aws_subnet.subnetMgt
2021/02/13 15:00:19 [TRACE] EvalReadState: no state present for aws_subnet.subnetMgt
2021/02/13 15:00:19 [TRACE] EvalReadDiff: Read Create change from plan for aws_subnet.subnetMgt
2021/02/13 15:00:19 [TRACE] EvalReadDiff: Read Create change from plan for aws_security_group.sgJump
2021/02/13 15:00:19 [TRACE] Re-validating config for "aws_subnet.subnetMgt"
2021/02/13 15:00:19 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:19 [TRACE] Re-validating config for "aws_security_group.sgJump"
2021/02/13 15:00:19 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:19 [TRACE] GRPCProvider: PlanResourceChange
2021-02-13T15:00:19.222Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:19 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021-02-13T15:00:19.222Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:19 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021/02/13 15:00:19 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:19 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_subnet.subnetMgt, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .assign_ipv6_address_on_creation: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/02/13 15:00:19 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:19 [TRACE] EvalReadState: reading state for aws_subnet.subnetMgt
2021/02/13 15:00:19 [TRACE] EvalReadState: no state present for aws_subnet.subnetMgt
2021/02/13 15:00:19 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:19 [DEBUG] aws_subnet.subnetMgt: applying the planned Create change
2021/02/13 15:00:19 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:19 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sgJump, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .description: planned value cty.StringVal("Managed by Terraform") does not match config value cty.NullVal(cty.String)
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(443), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(443)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(443), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(443)})})
2021/02/13 15:00:19 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:19 [TRACE] EvalReadState: reading state for aws_security_group.sgJump
2021/02/13 15:00:19 [TRACE] EvalReadState: no state present for aws_security_group.sgJump
2021/02/13 15:00:19 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:19 [DEBUG] aws_security_group.sgJump: applying the planned Create change
2021/02/13 15:00:19 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-13T15:00:19.227Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:19 [DEBUG] Security Group create configuration: {
2021-02-13T15:00:19.227Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Description: "Managed by Terraform",
2021-02-13T15:00:19.227Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   GroupName: "sgJump",
2021-02-13T15:00:19.227Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   VpcId: "vpc-009e5ad5af72453ae"
2021-02-13T15:00:19.227Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021/02/13 15:00:19 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_subnet.subnetBackend[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ipv6_cidr_block: was null, but now cty.StringVal("")
      - .outpost_arn: was null, but now cty.StringVal("")
2021/02/13 15:00:19 [TRACE] EvalWriteState: recording 2 dependencies for aws_subnet.subnetBackend[2]
2021/02/13 15:00:19 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetBackend[2]
2021/02/13 15:00:19 [TRACE] EvalWriteState: recording 2 dependencies for aws_subnet.subnetBackend[2]
2021/02/13 15:00:19 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetBackend[2]
2021/02/13 15:00:19 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021-02-13T15:00:19.248Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:19 [DEBUG] Revoking default IPv6 egress rule for Security Group for sg-06deb94003785fe23
2021-02-13T15:00:19.248Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:19 [DEBUG] Revoking default IPv6 egress rule for Security Group for sg-071781f08020dff46
2021/02/13 15:00:19 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3355
2021/02/13 15:00:19 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:19 [TRACE] vertex "aws_subnet.subnetBackend[2]": visit complete
2021/02/13 15:00:19 [TRACE] EvalReadDiff: Read Create change from plan for aws_security_group.sgMysql
2021/02/13 15:00:19 [TRACE] EvalReadState: reading state for aws_security_group.sgMysql
2021/02/13 15:00:19 [TRACE] EvalReadState: no state present for aws_security_group.sgMysql
2021/02/13 15:00:19 [TRACE] EvalReadDiff: Read Create change from plan for aws_security_group.sgMysql
2021/02/13 15:00:19 [TRACE] Re-validating config for "aws_security_group.sgMysql"
2021/02/13 15:00:19 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021-02-13T15:00:19.256Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:19 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021-02-13T15:00:19.256Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:19 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021/02/13 15:00:19 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:19 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sgMysql, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(3306), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(3306)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(3306), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(3306)})})
      - .description: planned value cty.StringVal("Managed by Terraform") does not match config value cty.NullVal(cty.String)
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/02/13 15:00:19 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:19 [TRACE] EvalReadState: reading state for aws_security_group.sgMysql
2021/02/13 15:00:19 [TRACE] EvalReadState: no state present for aws_security_group.sgMysql
2021/02/13 15:00:19 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:19 [DEBUG] aws_security_group.sgMysql: applying the planned Create change
2021/02/13 15:00:19 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-13T15:00:19.260Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:19 [DEBUG] Security Group create configuration: {
2021-02-13T15:00:19.260Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Description: "Managed by Terraform",
2021-02-13T15:00:19.260Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   GroupName: "sgMySql",
2021-02-13T15:00:19.260Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   VpcId: "vpc-009e5ad5af72453ae"
2021-02-13T15:00:19.260Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021/02/13 15:00:19 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_subnet.subnetMysql, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .outpost_arn: was null, but now cty.StringVal("")
      - .ipv6_cidr_block: was null, but now cty.StringVal("")
2021/02/13 15:00:19 [TRACE] EvalWriteState: recording 1 dependencies for aws_subnet.subnetMysql
2021/02/13 15:00:19 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetMysql
2021/02/13 15:00:19 [TRACE] EvalWriteState: recording 1 dependencies for aws_subnet.subnetMysql
2021/02/13 15:00:19 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetMysql
2021/02/13 15:00:19 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:19 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3356
2021/02/13 15:00:19 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:19 [TRACE] vertex "aws_subnet.subnetMysql": visit complete
2021/02/13 15:00:19 [TRACE] EvalReadDiff: Read Create change from plan for aws_subnet.subnetBackend[1]
2021/02/13 15:00:19 [TRACE] EvalReadState: reading state for aws_subnet.subnetBackend[1]
2021/02/13 15:00:19 [TRACE] EvalReadState: no state present for aws_subnet.subnetBackend[1]
2021/02/13 15:00:19 [TRACE] EvalReadDiff: Read Create change from plan for aws_subnet.subnetBackend[1]
2021/02/13 15:00:19 [TRACE] Re-validating config for "aws_subnet.subnetBackend[1]"
2021/02/13 15:00:19 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:19 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:19 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_subnet.subnetBackend[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .assign_ipv6_address_on_creation: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/02/13 15:00:19 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:19 [TRACE] EvalReadState: reading state for aws_subnet.subnetBackend[1]
2021/02/13 15:00:19 [TRACE] EvalReadState: no state present for aws_subnet.subnetBackend[1]
2021/02/13 15:00:19 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:19 [DEBUG] aws_subnet.subnetBackend[1]: applying the planned Create change
2021/02/13 15:00:19 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-13T15:00:19.826Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:19 [INFO] Subnet ID: subnet-0ff001cb725fd71fa
2021-02-13T15:00:19.826Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:19 [DEBUG] Waiting for subnet (subnet-0ff001cb725fd71fa) to become available
2021-02-13T15:00:19.826Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:19 [DEBUG] Waiting for state to become: [available]
2021-02-13T15:00:19.910Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:19 [INFO] Security Group ID: sg-07b3cde78551cad02
2021-02-13T15:00:19.910Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:19 [DEBUG] Waiting for Security Group (sg-07b3cde78551cad02) to exist
2021-02-13T15:00:19.910Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:19 [DEBUG] Waiting for state to become: [exists]
2021-02-13T15:00:19.920Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:19 [INFO] Security Group ID: sg-00b632058ba87d53d
2021-02-13T15:00:19.920Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:19 [DEBUG] Waiting for Security Group (sg-00b632058ba87d53d) to exist
2021-02-13T15:00:19.921Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:19 [DEBUG] Waiting for state to become: [exists]
2021/02/13 15:00:19 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_subnet.subnetAviVs[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ipv6_cidr_block: was null, but now cty.StringVal("")
      - .outpost_arn: was null, but now cty.StringVal("")
2021/02/13 15:00:19 [TRACE] EvalWriteState: recording 2 dependencies for aws_subnet.subnetAviVs[2]
2021/02/13 15:00:19 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetAviVs[2]
2021-02-13T15:00:19.942Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:19 [DEBUG] Waiting for Security Group (sg-071781f08020dff46) to exist
2021-02-13T15:00:19.944Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:19 [DEBUG] Waiting for state to become: [exists]
2021/02/13 15:00:19 [TRACE] EvalWriteState: recording 2 dependencies for aws_subnet.subnetAviVs[2]
2021/02/13 15:00:19 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetAviVs[2]
2021/02/13 15:00:19 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:19 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3357
2021/02/13 15:00:19 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:19 [TRACE] vertex "aws_subnet.subnetAviVs[2]": visit complete
2021/02/13 15:00:19 [TRACE] EvalReadDiff: Read Create change from plan for aws_subnet.subnetAviVs[0]
2021/02/13 15:00:19 [TRACE] EvalReadState: reading state for aws_subnet.subnetAviVs[0]
2021/02/13 15:00:19 [TRACE] EvalReadState: no state present for aws_subnet.subnetAviVs[0]
2021/02/13 15:00:19 [TRACE] EvalReadDiff: Read Create change from plan for aws_subnet.subnetAviVs[0]
2021/02/13 15:00:19 [TRACE] Re-validating config for "aws_subnet.subnetAviVs[0]"
2021/02/13 15:00:19 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:19 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:19 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_subnet.subnetAviVs[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .assign_ipv6_address_on_creation: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2021/02/13 15:00:19 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:19 [TRACE] EvalReadState: reading state for aws_subnet.subnetAviVs[0]
2021/02/13 15:00:19 [TRACE] EvalReadState: no state present for aws_subnet.subnetAviVs[0]
2021/02/13 15:00:19 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:19 [DEBUG] aws_subnet.subnetAviVs[0]: applying the planned Create change
2021/02/13 15:00:19 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-13T15:00:19.958Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:19 [DEBUG] Waiting for Security Group (sg-06deb94003785fe23) to exist
2021-02-13T15:00:19.958Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:19 [DEBUG] Waiting for state to become: [exists]
2021-02-13T15:00:19.991Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:19 [INFO] Subnet ID: subnet-08799d0bae57eaf57
2021-02-13T15:00:19.991Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:19 [DEBUG] Waiting for subnet (subnet-08799d0bae57eaf57) to become available
2021-02-13T15:00:19.991Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:19 [DEBUG] Waiting for state to become: [available]
2021-02-13T15:00:20.093Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:20 [INFO] Subnet ID: subnet-099870d7eb90baf25
2021-02-13T15:00:20.093Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:20 [DEBUG] Waiting for subnet (subnet-099870d7eb90baf25) to become available
2021-02-13T15:00:20.093Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:20 [DEBUG] Waiting for state to become: [available]
2021/02/13 15:00:20 [TRACE] dag/walk: vertex "aws_eip.eipForNatGw" is waiting for "aws_internet_gateway.internetGateway[0]"
2021/02/13 15:00:20 [TRACE] dag/walk: vertex "aws_route_table.rtPrivate[0]" is waiting for "aws_nat_gateway.natGw"
2021/02/13 15:00:20 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_subnet.subnetAviVs[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .outpost_arn: was null, but now cty.StringVal("")
      - .ipv6_cidr_block: was null, but now cty.StringVal("")
2021/02/13 15:00:20 [TRACE] EvalWriteState: recording 2 dependencies for aws_subnet.subnetAviVs[1]
2021/02/13 15:00:20 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetAviVs[1]
2021/02/13 15:00:20 [TRACE] EvalWriteState: recording 2 dependencies for aws_subnet.subnetAviVs[1]
2021/02/13 15:00:20 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetAviVs[1]
2021/02/13 15:00:20 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:20 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3358
2021/02/13 15:00:20 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:20 [TRACE] dag/walk: vertex "aws_route53_record.aviCtrl" is waiting for "aws_instance.aviCtrl[0]"
2021/02/13 15:00:20 [TRACE] dag/walk: vertex "aws_instance.aviCtrl[0]" is waiting for "aws_security_group.sgAvi"
2021/02/13 15:00:20 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationMysql" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:00:20 [TRACE] vertex "aws_subnet.subnetAviVs[1]": visit complete
2021/02/13 15:00:20 [TRACE] EvalReadDiff: Read Create change from plan for aws_security_group.sgBackend
2021/02/13 15:00:20 [TRACE] EvalReadState: reading state for aws_security_group.sgBackend
2021/02/13 15:00:20 [TRACE] EvalReadState: no state present for aws_security_group.sgBackend
2021/02/13 15:00:20 [TRACE] EvalReadDiff: Read Create change from plan for aws_security_group.sgBackend
2021/02/13 15:00:20 [TRACE] Re-validating config for "aws_security_group.sgBackend"
2021/02/13 15:00:20 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021-02-13T15:00:20.211Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:20 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021-02-13T15:00:20.211Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:20 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021/02/13 15:00:20 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:20 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sgBackend, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .description: planned value cty.StringVal("Managed by Terraform") does not match config value cty.NullVal(cty.String)
      - .revoke_rules_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})})
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(443), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(443)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(80)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(22), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(22)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(443), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(443)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(80), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(80)})})
2021/02/13 15:00:20 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:20 [TRACE] EvalReadState: reading state for aws_security_group.sgBackend
2021/02/13 15:00:20 [TRACE] EvalReadState: no state present for aws_security_group.sgBackend
2021/02/13 15:00:20 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:20 [DEBUG] aws_security_group.sgBackend: applying the planned Create change
2021/02/13 15:00:20 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-13T15:00:20.218Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:20 [DEBUG] Security Group create configuration: {
2021-02-13T15:00:20.218Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Description: "Managed by Terraform",
2021-02-13T15:00:20.218Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   GroupName: "sgBackend",
2021-02-13T15:00:20.218Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   VpcId: "vpc-009e5ad5af72453ae"
2021-02-13T15:00:20.218Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021/02/13 15:00:20 [TRACE] EvalWriteState: recording 1 dependencies for aws_internet_gateway.internetGateway[0]
2021/02/13 15:00:20 [TRACE] EvalWriteState: writing current state object for aws_internet_gateway.internetGateway[0]
2021/02/13 15:00:20 [TRACE] EvalWriteState: recording 1 dependencies for aws_internet_gateway.internetGateway[0]
2021/02/13 15:00:20 [TRACE] EvalWriteState: writing current state object for aws_internet_gateway.internetGateway[0]
2021/02/13 15:00:20 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:20 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3359
2021/02/13 15:00:20 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:20 [TRACE] vertex "aws_internet_gateway.internetGateway[0]": visit complete
2021/02/13 15:00:20 [TRACE] dag/walk: visiting "aws_route_table.rt[0]"
2021/02/13 15:00:20 [TRACE] vertex "aws_route_table.rt[0]": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:20 [TRACE] dag/walk: visiting "aws_eip.eipForNatGw"
2021/02/13 15:00:20 [TRACE] vertex "aws_eip.eipForNatGw": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:20 [TRACE] EvalReadDiff: Read Create change from plan for aws_route_table.rt[0]
2021/02/13 15:00:20 [TRACE] EvalReadState: reading state for aws_route_table.rt[0]
2021/02/13 15:00:20 [TRACE] EvalReadState: no state present for aws_route_table.rt[0]
2021/02/13 15:00:20 [TRACE] EvalReadDiff: Read Create change from plan for aws_route_table.rt[0]
2021/02/13 15:00:20 [TRACE] Re-validating config for "aws_route_table.rt[0]"
2021/02/13 15:00:20 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:20 [TRACE] GRPCProvider: PlanResourceChange
2021-02-13T15:00:20.236Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:20 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021/02/13 15:00:20 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_route_table.rt[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .route: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_block":cty.StringVal("0.0.0.0/0"), "egress_only_gateway_id":cty.StringVal(""), "gateway_id":cty.StringVal("igw-0dee337451ede50d9"), "instance_id":cty.StringVal(""), "ipv6_cidr_block":cty.StringVal(""), "local_gateway_id":cty.StringVal(""), "nat_gateway_id":cty.StringVal(""), "network_interface_id":cty.StringVal(""), "transit_gateway_id":cty.StringVal(""), "vpc_endpoint_id":cty.StringVal(""), "vpc_peering_connection_id":cty.StringVal("")})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_block":cty.StringVal("0.0.0.0/0"), "egress_only_gateway_id":cty.NullVal(cty.String), "gateway_id":cty.StringVal("igw-0dee337451ede50d9"), "instance_id":cty.NullVal(cty.String), "ipv6_cidr_block":cty.NullVal(cty.String), "local_gateway_id":cty.NullVal(cty.String), "nat_gateway_id":cty.NullVal(cty.String), "network_interface_id":cty.NullVal(cty.String), "transit_gateway_id":cty.NullVal(cty.String), "vpc_endpoint_id":cty.NullVal(cty.String), "vpc_peering_connection_id":cty.NullVal(cty.String)})})
2021/02/13 15:00:20 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:20 [TRACE] EvalReadState: reading state for aws_route_table.rt[0]
2021/02/13 15:00:20 [TRACE] EvalReadState: no state present for aws_route_table.rt[0]
2021/02/13 15:00:20 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:20 [DEBUG] aws_route_table.rt[0]: applying the planned Create change
2021/02/13 15:00:20 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-13T15:00:20.238Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:20 [DEBUG] setting computed for "propagating_vgws" from ComputedKeys
2021-02-13T15:00:20.238Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:20 [DEBUG] RouteTable create config: {
2021-02-13T15:00:20.238Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   VpcId: "vpc-009e5ad5af72453ae"
2021-02-13T15:00:20.238Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:20.563Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:20 [DEBUG] Authorizing security group {
2021-02-13T15:00:20.563Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Description: "Managed by Terraform",
2021-02-13T15:00:20.563Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   GroupId: "sg-071781f08020dff46",
2021-02-13T15:00:20.563Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   GroupName: "sgAvi",
2021-02-13T15:00:20.563Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   OwnerId: "610303284743",
2021-02-13T15:00:20.563Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   VpcId: "vpc-009e5ad5af72453ae"
2021-02-13T15:00:20.563Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: } ingress rule: []*ec2.IpPermission{{
2021-02-13T15:00:20.563Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   FromPort: 443,
2021-02-13T15:00:20.563Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpProtocol: "tcp",
2021-02-13T15:00:20.563Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpRanges: [{
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       CidrIp: "0.0.0.0/0"
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   ToPort: 443
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }, {
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   FromPort: 8443,
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpProtocol: "tcp",
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpRanges: [{
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       CidrIp: "0.0.0.0/0"
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   ToPort: 8443
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }, {
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   FromPort: 123,
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpProtocol: "udp",
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpRanges: [{
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       CidrIp: "0.0.0.0/0"
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   ToPort: 123
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }, {
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   FromPort: 80,
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpProtocol: "tcp",
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpRanges: [{
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       CidrIp: "0.0.0.0/0"
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   ToPort: 80
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }, {
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   FromPort: 22,
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpProtocol: "tcp",
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpRanges: [{
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       CidrIp: "0.0.0.0/0"
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   ToPort: 22
2021-02-13T15:00:20.564Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }}
2021-02-13T15:00:20.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:20 [DEBUG] Revoking default egress rule for Security Group for sg-07b3cde78551cad02
2021-02-13T15:00:20.574Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:20 [DEBUG] Authorizing security group {
2021-02-13T15:00:20.574Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Description: "Managed by Terraform",
2021-02-13T15:00:20.574Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   GroupId: "sg-06deb94003785fe23",
2021-02-13T15:00:20.574Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   GroupName: "sgOpencart",
2021-02-13T15:00:20.574Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   OwnerId: "610303284743",
2021-02-13T15:00:20.574Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   VpcId: "vpc-009e5ad5af72453ae"
2021-02-13T15:00:20.574Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: } ingress rule: []*ec2.IpPermission{{
2021-02-13T15:00:20.574Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   FromPort: 80,
2021-02-13T15:00:20.574Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpProtocol: "tcp",
2021-02-13T15:00:20.574Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpRanges: [{
2021-02-13T15:00:20.574Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       CidrIp: "0.0.0.0/0"
2021-02-13T15:00:20.574Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021-02-13T15:00:20.574Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   ToPort: 80
2021-02-13T15:00:20.574Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }, {
2021-02-13T15:00:20.574Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   FromPort: 22,
2021-02-13T15:00:20.574Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpProtocol: "tcp",
2021-02-13T15:00:20.574Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpRanges: [{
2021-02-13T15:00:20.574Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       CidrIp: "0.0.0.0/0"
2021-02-13T15:00:20.574Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021-02-13T15:00:20.574Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   ToPort: 22
2021-02-13T15:00:20.574Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }, {
2021-02-13T15:00:20.574Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   FromPort: 443,
2021-02-13T15:00:20.574Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpProtocol: "tcp",
2021-02-13T15:00:20.574Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpRanges: [{
2021-02-13T15:00:20.574Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       CidrIp: "0.0.0.0/0"
2021-02-13T15:00:20.574Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021-02-13T15:00:20.574Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   ToPort: 443
2021-02-13T15:00:20.574Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }}
2021-02-13T15:00:20.588Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:20 [DEBUG] Revoking default egress rule for Security Group for sg-00b632058ba87d53d
2021-02-13T15:00:20.707Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:20 [INFO] Subnet ID: subnet-08d83db9e994ff50f
2021-02-13T15:00:20.707Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:20 [DEBUG] Waiting for subnet (subnet-08d83db9e994ff50f) to become available
2021-02-13T15:00:20.707Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:20 [DEBUG] Waiting for state to become: [available]
2021-02-13T15:00:20.966Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:20 [INFO] Security Group ID: sg-0f7ac2433c66c6862
2021-02-13T15:00:20.966Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:20 [DEBUG] Waiting for Security Group (sg-0f7ac2433c66c6862) to exist
2021-02-13T15:00:20.967Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:20 [DEBUG] Waiting for state to become: [exists]
2021-02-13T15:00:21.063Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:21 [INFO] Route Table ID: rtb-0bda3fce34492811f
2021-02-13T15:00:21.063Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:21 [DEBUG] Waiting for route table (rtb-0bda3fce34492811f) to become available
2021-02-13T15:00:21.063Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:21 [DEBUG] Waiting for state to become: [ready]
2021/02/13 15:00:21 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_subnet.subnetAviSeMgt[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ipv6_cidr_block: was null, but now cty.StringVal("")
      - .outpost_arn: was null, but now cty.StringVal("")
2021/02/13 15:00:21 [TRACE] EvalWriteState: recording 2 dependencies for aws_subnet.subnetAviSeMgt[1]
2021/02/13 15:00:21 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetAviSeMgt[1]
2021/02/13 15:00:21 [TRACE] EvalWriteState: recording 2 dependencies for aws_subnet.subnetAviSeMgt[1]
2021/02/13 15:00:21 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetAviSeMgt[1]
2021/02/13 15:00:21 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:21 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3360
2021/02/13 15:00:21 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:21 [TRACE] vertex "aws_subnet.subnetAviSeMgt[1]": visit complete
2021/02/13 15:00:21 [TRACE] EvalReadDiff: Read Create change from plan for aws_eip.eipForNatGw
2021/02/13 15:00:21 [TRACE] EvalReadState: reading state for aws_eip.eipForNatGw
2021/02/13 15:00:21 [TRACE] EvalReadState: no state present for aws_eip.eipForNatGw
2021/02/13 15:00:21 [TRACE] EvalReadDiff: Read Create change from plan for aws_eip.eipForNatGw
2021/02/13 15:00:21 [TRACE] Re-validating config for "aws_eip.eipForNatGw"
2021/02/13 15:00:21 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:21 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:21 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:21 [TRACE] EvalReadState: reading state for aws_eip.eipForNatGw
2021/02/13 15:00:21 [TRACE] EvalReadState: no state present for aws_eip.eipForNatGw
2021/02/13 15:00:21 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:21 [DEBUG] aws_eip.eipForNatGw: applying the planned Create change
2021/02/13 15:00:21 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-13T15:00:21.162Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:21 [DEBUG] EIP create configuration: {
2021-02-13T15:00:21.162Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Domain: "vpc"
2021-02-13T15:00:21.162Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:21.181Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:21 [DEBUG] Revoking default IPv6 egress rule for Security Group for sg-07b3cde78551cad02
2021-02-13T15:00:21.185Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:21 [DEBUG] Authorizing security group {
2021-02-13T15:00:21.185Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Description: "Managed by Terraform",
2021-02-13T15:00:21.185Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   GroupId: "sg-071781f08020dff46",
2021-02-13T15:00:21.185Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   GroupName: "sgAvi",
2021-02-13T15:00:21.185Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   OwnerId: "610303284743",
2021-02-13T15:00:21.185Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   VpcId: "vpc-009e5ad5af72453ae"
2021-02-13T15:00:21.185Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: } egress rule: []*ec2.IpPermission{{
2021-02-13T15:00:21.185Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   FromPort: 0,
2021-02-13T15:00:21.185Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpProtocol: "-1",
2021-02-13T15:00:21.185Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpRanges: [{
2021-02-13T15:00:21.185Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       CidrIp: "0.0.0.0/0"
2021-02-13T15:00:21.185Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021-02-13T15:00:21.185Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   ToPort: 0
2021-02-13T15:00:21.185Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }}
2021-02-13T15:00:21.189Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:21 [DEBUG] Authorizing security group {
2021-02-13T15:00:21.189Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Description: "Managed by Terraform",
2021-02-13T15:00:21.189Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   GroupId: "sg-06deb94003785fe23",
2021-02-13T15:00:21.189Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   GroupName: "sgOpencart",
2021-02-13T15:00:21.189Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   OwnerId: "610303284743",
2021-02-13T15:00:21.189Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   VpcId: "vpc-009e5ad5af72453ae"
2021-02-13T15:00:21.189Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: } egress rule: []*ec2.IpPermission{{
2021-02-13T15:00:21.189Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   FromPort: 0,
2021-02-13T15:00:21.189Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpProtocol: "-1",
2021-02-13T15:00:21.189Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpRanges: [{
2021-02-13T15:00:21.189Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       CidrIp: "0.0.0.0/0"
2021-02-13T15:00:21.189Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021-02-13T15:00:21.189Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   ToPort: 0
2021-02-13T15:00:21.189Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }}
2021/02/13 15:00:21 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_subnet.subnetBackend[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ipv6_cidr_block: was null, but now cty.StringVal("")
      - .outpost_arn: was null, but now cty.StringVal("")
2021/02/13 15:00:21 [TRACE] EvalWriteState: recording 2 dependencies for aws_subnet.subnetBackend[1]
2021/02/13 15:00:21 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetBackend[1]
2021/02/13 15:00:21 [TRACE] EvalWriteState: recording 2 dependencies for aws_subnet.subnetBackend[1]
2021/02/13 15:00:21 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetBackend[1]
2021/02/13 15:00:21 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:21 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3361
2021/02/13 15:00:21 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:21 [TRACE] vertex "aws_subnet.subnetBackend[1]": visit complete
2021-02-13T15:00:21.288Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:21 [DEBUG] Revoking default IPv6 egress rule for Security Group for sg-00b632058ba87d53d
2021/02/13 15:00:21 [TRACE] dag/walk: vertex "aws_instance.backend[0]" is waiting for "aws_security_group.sgBackend"
2021-02-13T15:00:21.599Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:21 [DEBUG] Revoking default egress rule for Security Group for sg-0f7ac2433c66c6862
2021-02-13T15:00:21.600Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:21 [INFO] Creating route for rtb-0bda3fce34492811f: {
2021-02-13T15:00:21.600Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   DestinationCidrBlock: "0.0.0.0/0",
2021-02-13T15:00:21.600Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   GatewayId: "igw-0dee337451ede50d9",
2021-02-13T15:00:21.600Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   RouteTableId: "rtb-0bda3fce34492811f"
2021-02-13T15:00:21.600Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:21.600Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:21 [DEBUG] Waiting for state to become: [success]
2021-02-13T15:00:21.680Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:21 [DEBUG] Waiting for Security Group (sg-06deb94003785fe23) to exist
2021-02-13T15:00:21.680Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:21 [DEBUG] Waiting for state to become: [exists]
2021-02-13T15:00:21.797Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:21 [DEBUG] Waiting for Security Group (sg-07b3cde78551cad02) to exist
2021-02-13T15:00:21.797Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:21 [DEBUG] Waiting for state to become: [exists]
2021-02-13T15:00:21.860Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:21 [DEBUG] EIP Allocate: {
2021-02-13T15:00:21.860Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   AllocationId: "eipalloc-06767563942afaa5a",
2021-02-13T15:00:21.860Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Domain: "vpc",
2021-02-13T15:00:21.860Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   NetworkBorderGroup: "eu-west-1",
2021-02-13T15:00:21.860Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   PublicIp: "99.80.65.49",
2021-02-13T15:00:21.860Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   PublicIpv4Pool: "amazon"
2021-02-13T15:00:21.860Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:21.860Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:21 [INFO] EIP ID: eipalloc-06767563942afaa5a (domain: vpc)
2021-02-13T15:00:21.860Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:21 [DEBUG] EIP describe configuration: {
2021-02-13T15:00:21.860Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   AllocationIds: ["eipalloc-06767563942afaa5a"]
2021-02-13T15:00:21.860Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: } (domain: vpc)
2021-02-13T15:00:21.860Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:21 [DEBUG] Waiting for state to become: [success]
2021-02-13T15:00:21.936Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:21 [DEBUG] Waiting for Security Group (sg-071781f08020dff46) to exist
2021-02-13T15:00:21.936Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:21 [DEBUG] Waiting for state to become: [exists]
2021-02-13T15:00:21.971Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:21 [DEBUG] Waiting for Security Group (sg-00b632058ba87d53d) to exist
2021-02-13T15:00:21.971Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:21 [DEBUG] Waiting for state to become: [exists]
2021/02/13 15:00:22 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_subnet.subnetMgt, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ipv6_cidr_block: was null, but now cty.StringVal("")
      - .outpost_arn: was null, but now cty.StringVal("")
2021/02/13 15:00:22 [TRACE] EvalWriteState: recording 1 dependencies for aws_subnet.subnetMgt
2021/02/13 15:00:22 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetMgt
2021/02/13 15:00:22 [TRACE] EvalWriteState: recording 1 dependencies for aws_subnet.subnetMgt
2021/02/13 15:00:22 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetMgt
2021/02/13 15:00:22 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:22 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3362
2021/02/13 15:00:22 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:22 [TRACE] vertex "aws_subnet.subnetMgt": visit complete
2021-02-13T15:00:22.251Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:22 [DEBUG] Revoking default IPv6 egress rule for Security Group for sg-0f7ac2433c66c6862
2021/02/13 15:00:22 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_security_group.sgOpencart, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .name_prefix: was null, but now cty.StringVal("")
2021/02/13 15:00:22 [TRACE] EvalWriteState: recording 1 dependencies for aws_security_group.sgOpencart
2021/02/13 15:00:22 [TRACE] EvalWriteState: writing current state object for aws_security_group.sgOpencart
2021/02/13 15:00:22 [TRACE] EvalWriteState: recording 1 dependencies for aws_security_group.sgOpencart
2021/02/13 15:00:22 [TRACE] EvalWriteState: writing current state object for aws_security_group.sgOpencart
2021/02/13 15:00:22 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:22 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3363
2021/02/13 15:00:22 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:22 [TRACE] vertex "aws_security_group.sgOpencart": visit complete
2021-02-13T15:00:22.320Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:22 [DEBUG] Authorizing security group {
2021-02-13T15:00:22.320Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Description: "Managed by Terraform",
2021-02-13T15:00:22.320Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   GroupId: "sg-07b3cde78551cad02",
2021-02-13T15:00:22.320Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   GroupName: "sgMySql",
2021-02-13T15:00:22.320Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   OwnerId: "610303284743",
2021-02-13T15:00:22.320Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   VpcId: "vpc-009e5ad5af72453ae"
2021-02-13T15:00:22.320Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: } ingress rule: []*ec2.IpPermission{{
2021-02-13T15:00:22.320Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   FromPort: 3306,
2021-02-13T15:00:22.320Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpProtocol: "tcp",
2021-02-13T15:00:22.320Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpRanges: [{
2021-02-13T15:00:22.320Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       CidrIp: "0.0.0.0/0"
2021-02-13T15:00:22.320Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021-02-13T15:00:22.320Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   ToPort: 3306
2021-02-13T15:00:22.320Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }, {
2021-02-13T15:00:22.320Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   FromPort: 22,
2021-02-13T15:00:22.320Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpProtocol: "tcp",
2021-02-13T15:00:22.320Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpRanges: [{
2021-02-13T15:00:22.320Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       CidrIp: "0.0.0.0/0"
2021-02-13T15:00:22.320Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021-02-13T15:00:22.320Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   ToPort: 22
2021-02-13T15:00:22.320Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }}
2021/02/13 15:00:22 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_eip.eipForNatGw, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .customer_owned_ipv4_pool: was null, but now cty.StringVal("")
2021/02/13 15:00:22 [TRACE] EvalWriteState: recording 2 dependencies for aws_eip.eipForNatGw
2021/02/13 15:00:22 [TRACE] EvalWriteState: writing current state object for aws_eip.eipForNatGw
2021/02/13 15:00:22 [TRACE] EvalWriteState: recording 2 dependencies for aws_eip.eipForNatGw
2021/02/13 15:00:22 [TRACE] EvalWriteState: writing current state object for aws_eip.eipForNatGw
2021/02/13 15:00:22 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:22 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3364
2021/02/13 15:00:22 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:22 [TRACE] vertex "aws_eip.eipForNatGw": visit complete
2021/02/13 15:00:22 [TRACE] dag/walk: visiting "aws_nat_gateway.natGw"
2021/02/13 15:00:22 [TRACE] vertex "aws_nat_gateway.natGw": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:22 [TRACE] EvalReadDiff: Read Create change from plan for aws_nat_gateway.natGw
2021/02/13 15:00:22 [TRACE] EvalReadState: reading state for aws_nat_gateway.natGw
2021/02/13 15:00:22 [TRACE] EvalReadState: no state present for aws_nat_gateway.natGw
2021/02/13 15:00:22 [TRACE] EvalReadDiff: Read Create change from plan for aws_nat_gateway.natGw
2021/02/13 15:00:22 [TRACE] Re-validating config for "aws_nat_gateway.natGw"
2021/02/13 15:00:22 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:22 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:22 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:22 [TRACE] EvalReadState: reading state for aws_nat_gateway.natGw
2021/02/13 15:00:22 [TRACE] EvalReadState: no state present for aws_nat_gateway.natGw
2021/02/13 15:00:22 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:22 [DEBUG] aws_nat_gateway.natGw: applying the planned Create change
2021/02/13 15:00:22 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-13T15:00:22.469Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:22 [DEBUG] Create NAT Gateway: {
2021-02-13T15:00:22.469Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   AllocationId: "eipalloc-06767563942afaa5a",
2021-02-13T15:00:22.469Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   SubnetId: "subnet-099870d7eb90baf25"
2021-02-13T15:00:22.469Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021/02/13 15:00:22 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_subnet.subnetAviVs[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ipv6_cidr_block: was null, but now cty.StringVal("")
      - .outpost_arn: was null, but now cty.StringVal("")
2021/02/13 15:00:22 [TRACE] EvalWriteState: recording 2 dependencies for aws_subnet.subnetAviVs[0]
2021/02/13 15:00:22 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetAviVs[0]
2021/02/13 15:00:22 [TRACE] EvalWriteState: recording 2 dependencies for aws_subnet.subnetAviVs[0]
2021/02/13 15:00:22 [TRACE] EvalWriteState: writing current state object for aws_subnet.subnetAviVs[0]
2021/02/13 15:00:22 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:22 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3365
2021/02/13 15:00:22 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:22 [TRACE] vertex "aws_subnet.subnetAviVs[0]": visit complete
2021-02-13T15:00:22.522Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:22 [DEBUG] Authorizing security group {
2021-02-13T15:00:22.522Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Description: "Managed by Terraform",
2021-02-13T15:00:22.522Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   GroupId: "sg-00b632058ba87d53d",
2021-02-13T15:00:22.522Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   GroupName: "sgJump",
2021-02-13T15:00:22.522Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   OwnerId: "610303284743",
2021-02-13T15:00:22.522Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   VpcId: "vpc-009e5ad5af72453ae"
2021-02-13T15:00:22.522Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: } ingress rule: []*ec2.IpPermission{{
2021-02-13T15:00:22.522Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   FromPort: 22,
2021-02-13T15:00:22.522Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpProtocol: "tcp",
2021-02-13T15:00:22.522Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpRanges: [{
2021-02-13T15:00:22.522Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       CidrIp: "0.0.0.0/0"
2021-02-13T15:00:22.522Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021-02-13T15:00:22.522Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   ToPort: 22
2021-02-13T15:00:22.522Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }, {
2021-02-13T15:00:22.522Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   FromPort: 443,
2021-02-13T15:00:22.522Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpProtocol: "tcp",
2021-02-13T15:00:22.522Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpRanges: [{
2021-02-13T15:00:22.522Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       CidrIp: "0.0.0.0/0"
2021-02-13T15:00:22.522Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021-02-13T15:00:22.522Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   ToPort: 443
2021-02-13T15:00:22.522Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }}
2021/02/13 15:00:22 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_security_group.sgAvi, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .name_prefix: was null, but now cty.StringVal("")
2021/02/13 15:00:22 [TRACE] EvalWriteState: recording 1 dependencies for aws_security_group.sgAvi
2021/02/13 15:00:22 [TRACE] EvalWriteState: writing current state object for aws_security_group.sgAvi
2021/02/13 15:00:22 [TRACE] EvalWriteState: recording 1 dependencies for aws_security_group.sgAvi
2021/02/13 15:00:22 [TRACE] EvalWriteState: writing current state object for aws_security_group.sgAvi
2021/02/13 15:00:22 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:22 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3366
2021/02/13 15:00:22 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:22 [TRACE] vertex "aws_security_group.sgAvi": visit complete
2021/02/13 15:00:22 [TRACE] dag/walk: visiting "aws_instance.aviCtrl[0]"
2021/02/13 15:00:22 [TRACE] vertex "aws_instance.aviCtrl[0]": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:22 [TRACE] EvalReadDiff: Read Create change from plan for aws_instance.aviCtrl[0]
2021/02/13 15:00:22 [TRACE] EvalReadState: reading state for aws_instance.aviCtrl[0]
2021/02/13 15:00:22 [TRACE] EvalReadState: no state present for aws_instance.aviCtrl[0]
2021/02/13 15:00:22 [TRACE] EvalReadDiff: Read Create change from plan for aws_instance.aviCtrl[0]
2021/02/13 15:00:22 [TRACE] Re-validating config for "aws_instance.aviCtrl[0]"
2021/02/13 15:00:22 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021-02-13T15:00:22.561Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:22 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021/02/13 15:00:22 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:22 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.aviCtrl[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/02/13 15:00:22 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:22 [TRACE] EvalReadState: reading state for aws_instance.aviCtrl[0]
2021/02/13 15:00:22 [TRACE] EvalReadState: no state present for aws_instance.aviCtrl[0]
2021/02/13 15:00:22 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:22 [DEBUG] aws_instance.aviCtrl[0]: applying the planned Create change
2021/02/13 15:00:22 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-13T15:00:22.565Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:22 [DEBUG] setting computed for "ephemeral_block_device" from ComputedKeys
2021-02-13T15:00:22.565Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:22 [DEBUG] setting computed for "ebs_block_device" from ComputedKeys
2021-02-13T15:00:22.565Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:22 [DEBUG] setting computed for "network_interface" from ComputedKeys
2021-02-13T15:00:22.565Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:22 [DEBUG] setting computed for "security_groups" from ComputedKeys
2021-02-13T15:00:22.565Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:22 [DEBUG] setting computed for "root_block_device" from ComputedKeys
2021-02-13T15:00:22.565Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:22 [DEBUG] setting computed for "secondary_private_ips" from ComputedKeys
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:22 [DEBUG] setting computed for "network_interface" from ComputedKeys
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:22 [DEBUG] setting computed for "ipv6_addresses" from ComputedKeys
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:22 [DEBUG] setting computed for "metadata_options" from ComputedKeys
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:22 [DEBUG] setting computed for "volume_tags" from ComputedKeys
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:22 [DEBUG] setting computed for "enclave_options" from ComputedKeys
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:22 [DEBUG] Run configuration: {
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   DisableApiTermination: false,
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   EbsOptimized: false,
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   HibernationOptions: {
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     Configured: false
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   },
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IamInstanceProfile: {
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     Name: "AviController-Instance-Profile"
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   },
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   ImageId: "ami-07299b41405738e83",
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   InstanceType: "t2.2xlarge",
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   KeyName: "kpAvi",
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   MaxCount: 1,
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   MinCount: 1,
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Monitoring: {
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     Enabled: false
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   },
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   NetworkInterfaces: [{
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       DeviceIndex: 0,
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       Groups: ["sg-071781f08020dff46"],
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       SubnetId: "subnet-099870d7eb90baf25"
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Placement: {
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     AvailabilityZone: "",
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     GroupName: ""
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   },
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   TagSpecifications: [{
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       ResourceType: "instance",
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       Tags: [{
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Key: "Name",
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Value: "Avi Controller-1"
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:         },{
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Key: "createdBy",
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Value: "Terraform"
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:         },{
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Key: "group",
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Value: "controller"
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:         }]
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }]
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:22.566Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:22 [DEBUG] Waiting for state to become: [success]
2021/02/13 15:00:22 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" is waiting for "aws_autoscaling_group.autoScalingGroup"
2021/02/13 15:00:22 [TRACE] dag/walk: vertex "provisioner.remote-exec (close)" is waiting for "null_resource.foo7"
2021/02/13 15:00:22 [TRACE] dag/walk: vertex "aws_route53_record.jump" is waiting for "aws_instance.jump"
2021/02/13 15:00:22 [TRACE] dag/walk: vertex "null_resource.foo7" is waiting for "aws_instance.backend[2]"
2021/02/13 15:00:22 [TRACE] dag/walk: vertex "output.aviCtrlPublicIp" is waiting for "aws_instance.aviCtrl[0]"
2021/02/13 15:00:22 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationMgt" is waiting for "aws_route_table.rt[0]"
2021/02/13 15:00:22 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/13 15:00:22 [TRACE] dag/walk: vertex "provisioner.file (close)" is waiting for "null_resource.foo7"
2021/02/13 15:00:22 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[0]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:00:22 [TRACE] dag/walk: vertex "aws_launch_template.templateAsg" is waiting for "aws_security_group.sgBackend"
2021/02/13 15:00:22 [TRACE] dag/walk: vertex "output.destroy" is waiting for "aws_instance.jump"
2021/02/13 15:00:22 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "null_resource.foo7"
2021/02/13 15:00:22 [TRACE] dag/walk: vertex "output.jumpPublicIp" is waiting for "aws_instance.jump"
2021/02/13 15:00:22 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/null\"] (close)" is waiting for "null_resource.foo7"
2021/02/13 15:00:22 [TRACE] EvalWriteState: recording 2 dependencies for aws_route_table.rt[0]
2021/02/13 15:00:22 [TRACE] EvalWriteState: writing current state object for aws_route_table.rt[0]
2021/02/13 15:00:22 [TRACE] EvalWriteState: recording 2 dependencies for aws_route_table.rt[0]
2021/02/13 15:00:22 [TRACE] EvalWriteState: writing current state object for aws_route_table.rt[0]
2021/02/13 15:00:22 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:22 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3367
2021/02/13 15:00:22 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:22 [TRACE] vertex "aws_route_table.rt[0]": visit complete
2021/02/13 15:00:22 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationAviSeMgt[1]"
2021/02/13 15:00:22 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationMgt"
2021/02/13 15:00:22 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationAviVs[0]"
2021/02/13 15:00:22 [TRACE] vertex "aws_route_table_association.subnetAssociationAviVs[0]": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:22 [TRACE] vertex "aws_route_table_association.subnetAssociationMgt": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:22 [TRACE] vertex "aws_route_table_association.subnetAssociationAviSeMgt[1]": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:22 [TRACE] EvalReadDiff: Read Create change from plan for aws_route_table_association.subnetAssociationAviSeMgt[1]
2021/02/13 15:00:22 [TRACE] EvalReadState: reading state for aws_route_table_association.subnetAssociationAviSeMgt[1]
2021/02/13 15:00:22 [TRACE] EvalReadState: no state present for aws_route_table_association.subnetAssociationAviSeMgt[1]
2021/02/13 15:00:22 [TRACE] EvalReadDiff: Read Create change from plan for aws_route_table_association.subnetAssociationAviVs[0]
2021/02/13 15:00:22 [TRACE] EvalReadState: reading state for aws_route_table_association.subnetAssociationAviVs[0]
2021/02/13 15:00:22 [TRACE] EvalReadState: no state present for aws_route_table_association.subnetAssociationAviVs[0]
2021/02/13 15:00:22 [TRACE] EvalReadDiff: Read Create change from plan for aws_route_table_association.subnetAssociationAviSeMgt[1]
2021/02/13 15:00:22 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationAviSeMgt[0]"
2021/02/13 15:00:22 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationAviSeMgt[2]"
2021/02/13 15:00:22 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationAviVs[2]"
2021/02/13 15:00:22 [TRACE] dag/walk: visiting "aws_route_table_association.subnetAssociationAviVs[1]"
2021/02/13 15:00:22 [TRACE] EvalReadDiff: Read Create change from plan for aws_route_table_association.subnetAssociationMgt
2021/02/13 15:00:22 [TRACE] EvalReadDiff: Read Create change from plan for aws_route_table_association.subnetAssociationAviVs[0]
2021/02/13 15:00:22 [TRACE] Re-validating config for "aws_route_table_association.subnetAssociationAviSeMgt[1]"
2021/02/13 15:00:22 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:22 [TRACE] vertex "aws_route_table_association.subnetAssociationAviSeMgt[0]": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:22 [TRACE] vertex "aws_route_table_association.subnetAssociationAviSeMgt[2]": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:22 [TRACE] EvalReadDiff: Read Create change from plan for aws_route_table_association.subnetAssociationAviSeMgt[2]
2021/02/13 15:00:22 [TRACE] EvalReadState: reading state for aws_route_table_association.subnetAssociationAviSeMgt[2]
2021/02/13 15:00:22 [TRACE] vertex "aws_route_table_association.subnetAssociationAviVs[2]": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:22 [TRACE] vertex "aws_route_table_association.subnetAssociationAviVs[1]": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:22 [TRACE] EvalReadState: reading state for aws_route_table_association.subnetAssociationMgt
2021/02/13 15:00:22 [TRACE] EvalReadState: no state present for aws_route_table_association.subnetAssociationMgt
2021/02/13 15:00:22 [TRACE] EvalReadState: no state present for aws_route_table_association.subnetAssociationAviSeMgt[2]
2021/02/13 15:00:22 [TRACE] EvalReadDiff: Read Create change from plan for aws_route_table_association.subnetAssociationAviSeMgt[0]
2021/02/13 15:00:22 [TRACE] EvalReadState: reading state for aws_route_table_association.subnetAssociationAviSeMgt[0]
2021/02/13 15:00:22 [TRACE] EvalReadState: no state present for aws_route_table_association.subnetAssociationAviSeMgt[0]
2021/02/13 15:00:22 [TRACE] EvalReadDiff: Read Create change from plan for aws_route_table_association.subnetAssociationAviSeMgt[0]
2021/02/13 15:00:22 [TRACE] EvalReadDiff: Read Create change from plan for aws_route_table_association.subnetAssociationAviSeMgt[2]
2021/02/13 15:00:22 [TRACE] EvalReadDiff: Read Create change from plan for aws_route_table_association.subnetAssociationMgt
2021/02/13 15:00:22 [TRACE] Re-validating config for "aws_route_table_association.subnetAssociationAviVs[0]"
2021/02/13 15:00:22 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:22 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:22 [TRACE] Re-validating config for "aws_route_table_association.subnetAssociationAviSeMgt[2]"
2021/02/13 15:00:22 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:22 [TRACE] Re-validating config for "aws_route_table_association.subnetAssociationMgt"
2021/02/13 15:00:22 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:22 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:22 [TRACE] Re-validating config for "aws_route_table_association.subnetAssociationAviSeMgt[0]"
2021/02/13 15:00:22 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:22 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:22 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:22 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:22 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:22 [TRACE] EvalReadState: reading state for aws_route_table_association.subnetAssociationAviVs[0]
2021/02/13 15:00:22 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:22 [TRACE] EvalReadState: reading state for aws_route_table_association.subnetAssociationAviSeMgt[2]
2021/02/13 15:00:22 [TRACE] EvalReadState: no state present for aws_route_table_association.subnetAssociationAviSeMgt[2]
2021/02/13 15:00:22 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:22 [TRACE] EvalReadState: reading state for aws_route_table_association.subnetAssociationMgt
2021/02/13 15:00:22 [TRACE] EvalReadState: no state present for aws_route_table_association.subnetAssociationMgt
2021/02/13 15:00:22 [TRACE] EvalReadState: no state present for aws_route_table_association.subnetAssociationAviVs[0]
2021/02/13 15:00:22 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:22 [DEBUG] aws_route_table_association.subnetAssociationMgt: applying the planned Create change
2021/02/13 15:00:22 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:22 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:22 [TRACE] EvalReadState: reading state for aws_route_table_association.subnetAssociationAviSeMgt[0]
2021/02/13 15:00:22 [TRACE] EvalReadState: no state present for aws_route_table_association.subnetAssociationAviSeMgt[0]
2021/02/13 15:00:22 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:22 [TRACE] EvalReadState: reading state for aws_route_table_association.subnetAssociationAviSeMgt[1]
2021/02/13 15:00:22 [TRACE] EvalReadState: no state present for aws_route_table_association.subnetAssociationAviSeMgt[1]
2021/02/13 15:00:22 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:22 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:22 [DEBUG] aws_route_table_association.subnetAssociationAviSeMgt[0]: applying the planned Create change
2021/02/13 15:00:22 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:22 [DEBUG] aws_route_table_association.subnetAssociationAviSeMgt[2]: applying the planned Create change
2021/02/13 15:00:22 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-13T15:00:22.799Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:22 [INFO] Creating route table association: subnet-099870d7eb90baf25 => rtb-0bda3fce34492811f
2021-02-13T15:00:22.799Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:22 [DEBUG] Waiting for state to become: [success]
2021-02-13T15:00:22.800Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:22 [INFO] Creating route table association: subnet-01313bdde73babaaa => rtb-0bda3fce34492811f
2021-02-13T15:00:22.800Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:22 [DEBUG] Waiting for state to become: [success]
2021-02-13T15:00:22.800Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:22 [INFO] Creating route table association: subnet-035355b613689bad7 => rtb-0bda3fce34492811f
2021-02-13T15:00:22.800Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:22 [DEBUG] Waiting for state to become: [success]
2021/02/13 15:00:22 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:22 [DEBUG] aws_route_table_association.subnetAssociationAviSeMgt[1]: applying the planned Create change
2021/02/13 15:00:22 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:22 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:22 [DEBUG] aws_route_table_association.subnetAssociationAviVs[0]: applying the planned Create change
2021/02/13 15:00:22 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-13T15:00:22.801Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:22 [INFO] Creating route table association: subnet-0ff001cb725fd71fa => rtb-0bda3fce34492811f
2021-02-13T15:00:22.801Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:22 [DEBUG] Waiting for state to become: [success]
2021-02-13T15:00:22.801Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:22 [INFO] Creating route table association: subnet-08d83db9e994ff50f => rtb-0bda3fce34492811f
2021-02-13T15:00:22.801Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:22 [DEBUG] Waiting for state to become: [success]
2021-02-13T15:00:22.842Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:22 [DEBUG] Waiting for Security Group (sg-0f7ac2433c66c6862) to exist
2021-02-13T15:00:22.842Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:22 [DEBUG] Waiting for state to become: [exists]
2021-02-13T15:00:23.027Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:23 [DEBUG] Authorizing security group {
2021-02-13T15:00:23.028Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Description: "Managed by Terraform",
2021-02-13T15:00:23.028Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   GroupId: "sg-07b3cde78551cad02",
2021-02-13T15:00:23.028Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   GroupName: "sgMySql",
2021-02-13T15:00:23.028Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   OwnerId: "610303284743",
2021-02-13T15:00:23.028Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   VpcId: "vpc-009e5ad5af72453ae"
2021-02-13T15:00:23.028Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: } egress rule: []*ec2.IpPermission{{
2021-02-13T15:00:23.028Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   FromPort: 0,
2021-02-13T15:00:23.028Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpProtocol: "-1",
2021-02-13T15:00:23.028Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpRanges: [{
2021-02-13T15:00:23.028Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       CidrIp: "0.0.0.0/0"
2021-02-13T15:00:23.028Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021-02-13T15:00:23.028Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   ToPort: 0
2021-02-13T15:00:23.028Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }}
2021-02-13T15:00:23.173Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:23 [DEBUG] Authorizing security group {
2021-02-13T15:00:23.173Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Description: "Managed by Terraform",
2021-02-13T15:00:23.173Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   GroupId: "sg-00b632058ba87d53d",
2021-02-13T15:00:23.173Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   GroupName: "sgJump",
2021-02-13T15:00:23.174Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   OwnerId: "610303284743",
2021-02-13T15:00:23.174Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   VpcId: "vpc-009e5ad5af72453ae"
2021-02-13T15:00:23.174Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: } egress rule: []*ec2.IpPermission{{
2021-02-13T15:00:23.174Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   FromPort: 0,
2021-02-13T15:00:23.174Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpProtocol: "-1",
2021-02-13T15:00:23.174Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpRanges: [{
2021-02-13T15:00:23.174Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       CidrIp: "0.0.0.0/0"
2021-02-13T15:00:23.174Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021-02-13T15:00:23.174Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   ToPort: 0
2021-02-13T15:00:23.174Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }}
2021-02-13T15:00:23.319Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:23 [INFO] NAT Gateway ID: nat-0d7f069fcb02a90c7
2021-02-13T15:00:23.319Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:23 [DEBUG] Waiting for NAT Gateway (nat-0d7f069fcb02a90c7) to become available
2021-02-13T15:00:23.319Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:23 [DEBUG] Waiting for state to become: [available]
2021-02-13T15:00:23.490Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:23 [INFO] Association ID: rtbassoc-0bfa2cb7fa01ea348
2021/02/13 15:00:23 [TRACE] EvalWriteState: recording 5 dependencies for aws_route_table_association.subnetAssociationAviSeMgt[2]
2021/02/13 15:00:23 [TRACE] EvalWriteState: writing current state object for aws_route_table_association.subnetAssociationAviSeMgt[2]
2021/02/13 15:00:23 [TRACE] EvalWriteState: recording 5 dependencies for aws_route_table_association.subnetAssociationAviSeMgt[2]
2021/02/13 15:00:23 [TRACE] EvalWriteState: writing current state object for aws_route_table_association.subnetAssociationAviSeMgt[2]
2021/02/13 15:00:23 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:23 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3368
2021/02/13 15:00:23 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021-02-13T15:00:23.497Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:23 [INFO] Association ID: rtbassoc-00fb212126a2065e3
2021/02/13 15:00:23 [TRACE] EvalWriteState: recording 5 dependencies for aws_route_table_association.subnetAssociationAviVs[0]
2021/02/13 15:00:23 [TRACE] EvalWriteState: writing current state object for aws_route_table_association.subnetAssociationAviVs[0]
2021/02/13 15:00:23 [TRACE] vertex "aws_route_table_association.subnetAssociationAviSeMgt[2]": visit complete
2021/02/13 15:00:23 [TRACE] EvalWriteState: recording 5 dependencies for aws_route_table_association.subnetAssociationAviVs[0]
2021/02/13 15:00:23 [TRACE] EvalWriteState: writing current state object for aws_route_table_association.subnetAssociationAviVs[0]
2021/02/13 15:00:23 [TRACE] EvalReadDiff: Read Create change from plan for aws_route_table_association.subnetAssociationAviVs[2]
2021/02/13 15:00:23 [TRACE] EvalReadState: reading state for aws_route_table_association.subnetAssociationAviVs[2]
2021/02/13 15:00:23 [TRACE] EvalReadState: no state present for aws_route_table_association.subnetAssociationAviVs[2]
2021/02/13 15:00:23 [TRACE] EvalReadDiff: Read Create change from plan for aws_route_table_association.subnetAssociationAviVs[2]
2021/02/13 15:00:23 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:23 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3369
2021/02/13 15:00:23 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021-02-13T15:00:23.502Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:23 [INFO] Association ID: rtbassoc-04c61b5a113f62dfc
2021/02/13 15:00:23 [TRACE] EvalWriteState: recording 4 dependencies for aws_route_table_association.subnetAssociationMgt
2021/02/13 15:00:23 [TRACE] EvalWriteState: writing current state object for aws_route_table_association.subnetAssociationMgt
2021/02/13 15:00:23 [TRACE] vertex "aws_route_table_association.subnetAssociationAviVs[0]": visit complete
2021/02/13 15:00:23 [TRACE] EvalReadDiff: Read Create change from plan for aws_route_table_association.subnetAssociationAviVs[1]
2021/02/13 15:00:23 [TRACE] EvalReadState: reading state for aws_route_table_association.subnetAssociationAviVs[1]
2021/02/13 15:00:23 [TRACE] EvalReadState: no state present for aws_route_table_association.subnetAssociationAviVs[1]
2021/02/13 15:00:23 [TRACE] EvalReadDiff: Read Create change from plan for aws_route_table_association.subnetAssociationAviVs[1]
2021/02/13 15:00:23 [TRACE] EvalWriteState: recording 4 dependencies for aws_route_table_association.subnetAssociationMgt
2021/02/13 15:00:23 [TRACE] EvalWriteState: writing current state object for aws_route_table_association.subnetAssociationMgt
2021/02/13 15:00:23 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:23 [TRACE] Re-validating config for "aws_route_table_association.subnetAssociationAviVs[2]"
2021/02/13 15:00:23 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:23 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:23 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:23 [TRACE] EvalReadState: reading state for aws_route_table_association.subnetAssociationAviVs[2]
2021/02/13 15:00:23 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3370
2021/02/13 15:00:23 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:23 [TRACE] vertex "aws_route_table_association.subnetAssociationMgt": visit complete
2021/02/13 15:00:23 [TRACE] EvalReadState: no state present for aws_route_table_association.subnetAssociationAviVs[2]
2021/02/13 15:00:23 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:23 [DEBUG] aws_route_table_association.subnetAssociationAviVs[2]: applying the planned Create change
2021/02/13 15:00:23 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:23 [TRACE] Re-validating config for "aws_route_table_association.subnetAssociationAviVs[1]"
2021/02/13 15:00:23 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:23 [TRACE] GRPCProvider: PlanResourceChange
2021-02-13T15:00:23.511Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:23 [INFO] Creating route table association: subnet-0157b22f8e7449338 => rtb-0bda3fce34492811f
2021-02-13T15:00:23.511Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:23 [DEBUG] Waiting for state to become: [success]
2021/02/13 15:00:23 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:23 [TRACE] EvalReadState: reading state for aws_route_table_association.subnetAssociationAviVs[1]
2021/02/13 15:00:23 [TRACE] EvalReadState: no state present for aws_route_table_association.subnetAssociationAviVs[1]
2021/02/13 15:00:23 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:23 [DEBUG] aws_route_table_association.subnetAssociationAviVs[1]: applying the planned Create change
2021/02/13 15:00:23 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-13T15:00:23.513Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:23 [INFO] Creating route table association: subnet-0657cd2f5bf22ec7f => rtb-0bda3fce34492811f
2021-02-13T15:00:23.513Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:23 [DEBUG] Waiting for state to become: [success]
2021-02-13T15:00:23.519Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:23 [INFO] Association ID: rtbassoc-071ce8133b599b251
2021/02/13 15:00:23 [TRACE] EvalWriteState: recording 5 dependencies for aws_route_table_association.subnetAssociationAviSeMgt[1]
2021/02/13 15:00:23 [TRACE] EvalWriteState: writing current state object for aws_route_table_association.subnetAssociationAviSeMgt[1]
2021/02/13 15:00:23 [TRACE] EvalWriteState: recording 5 dependencies for aws_route_table_association.subnetAssociationAviSeMgt[1]
2021/02/13 15:00:23 [TRACE] EvalWriteState: writing current state object for aws_route_table_association.subnetAssociationAviSeMgt[1]
2021/02/13 15:00:23 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:23 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3371
2021/02/13 15:00:23 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:23 [TRACE] vertex "aws_route_table_association.subnetAssociationAviSeMgt[1]": visit complete
2021-02-13T15:00:23.590Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:23 [INFO] Association ID: rtbassoc-0bc980ff65e0646b9
2021/02/13 15:00:23 [TRACE] EvalWriteState: recording 5 dependencies for aws_route_table_association.subnetAssociationAviSeMgt[0]
2021/02/13 15:00:23 [TRACE] EvalWriteState: writing current state object for aws_route_table_association.subnetAssociationAviSeMgt[0]
2021/02/13 15:00:23 [TRACE] EvalWriteState: recording 5 dependencies for aws_route_table_association.subnetAssociationAviSeMgt[0]
2021/02/13 15:00:23 [TRACE] EvalWriteState: writing current state object for aws_route_table_association.subnetAssociationAviSeMgt[0]
2021/02/13 15:00:23 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:23 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3372
2021/02/13 15:00:23 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:23 [TRACE] vertex "aws_route_table_association.subnetAssociationAviSeMgt[0]": visit complete
2021-02-13T15:00:23.611Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:23 [DEBUG] Authorizing security group {
2021-02-13T15:00:23.611Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Description: "Managed by Terraform",
2021-02-13T15:00:23.611Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   GroupId: "sg-0f7ac2433c66c6862",
2021-02-13T15:00:23.611Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   GroupName: "sgBackend",
2021-02-13T15:00:23.611Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   OwnerId: "610303284743",
2021-02-13T15:00:23.611Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   VpcId: "vpc-009e5ad5af72453ae"
2021-02-13T15:00:23.611Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: } ingress rule: []*ec2.IpPermission{{
2021-02-13T15:00:23.611Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   FromPort: 22,
2021-02-13T15:00:23.611Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpProtocol: "tcp",
2021-02-13T15:00:23.611Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpRanges: [{
2021-02-13T15:00:23.611Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       CidrIp: "0.0.0.0/0"
2021-02-13T15:00:23.611Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021-02-13T15:00:23.611Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   ToPort: 22
2021-02-13T15:00:23.611Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }, {
2021-02-13T15:00:23.611Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   FromPort: 443,
2021-02-13T15:00:23.611Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpProtocol: "tcp",
2021-02-13T15:00:23.611Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpRanges: [{
2021-02-13T15:00:23.611Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       CidrIp: "0.0.0.0/0"
2021-02-13T15:00:23.611Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021-02-13T15:00:23.611Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   ToPort: 443
2021-02-13T15:00:23.611Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }, {
2021-02-13T15:00:23.611Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   FromPort: 80,
2021-02-13T15:00:23.611Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpProtocol: "tcp",
2021-02-13T15:00:23.611Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpRanges: [{
2021-02-13T15:00:23.611Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       CidrIp: "0.0.0.0/0"
2021-02-13T15:00:23.611Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021-02-13T15:00:23.611Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   ToPort: 80
2021-02-13T15:00:23.611Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }}
2021-02-13T15:00:23.706Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:23 [DEBUG] Waiting for Security Group (sg-07b3cde78551cad02) to exist
2021-02-13T15:00:23.706Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:23 [DEBUG] Waiting for state to become: [exists]
2021-02-13T15:00:23.822Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:23 [DEBUG] Waiting for Security Group (sg-00b632058ba87d53d) to exist
2021-02-13T15:00:23.822Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:23 [DEBUG] Waiting for state to become: [exists]
2021-02-13T15:00:23.903Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:23 [TRACE] Waiting 200ms before next try
2021-02-13T15:00:24.126Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:24 [INFO] Association ID: rtbassoc-0d69d15f392b836cd
2021/02/13 15:00:24 [TRACE] EvalWriteState: recording 5 dependencies for aws_route_table_association.subnetAssociationAviVs[1]
2021/02/13 15:00:24 [TRACE] EvalWriteState: writing current state object for aws_route_table_association.subnetAssociationAviVs[1]
2021/02/13 15:00:24 [TRACE] EvalWriteState: recording 5 dependencies for aws_route_table_association.subnetAssociationAviVs[1]
2021/02/13 15:00:24 [TRACE] EvalWriteState: writing current state object for aws_route_table_association.subnetAssociationAviVs[1]
2021/02/13 15:00:24 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:24 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3373
2021/02/13 15:00:24 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021-02-13T15:00:24.138Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:24 [INFO] Association ID: rtbassoc-018fdbcb66d8de1ed
2021/02/13 15:00:24 [TRACE] EvalWriteState: recording 5 dependencies for aws_route_table_association.subnetAssociationAviVs[2]
2021/02/13 15:00:24 [TRACE] EvalWriteState: writing current state object for aws_route_table_association.subnetAssociationAviVs[2]
2021/02/13 15:00:24 [TRACE] vertex "aws_route_table_association.subnetAssociationAviVs[1]": visit complete
2021/02/13 15:00:24 [TRACE] EvalWriteState: recording 5 dependencies for aws_route_table_association.subnetAssociationAviVs[2]
2021/02/13 15:00:24 [TRACE] EvalWriteState: writing current state object for aws_route_table_association.subnetAssociationAviVs[2]
2021/02/13 15:00:24 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:24 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3374
2021/02/13 15:00:24 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:24 [TRACE] vertex "aws_route_table_association.subnetAssociationAviVs[2]": visit complete
2021/02/13 15:00:24 [TRACE] dag/walk: vertex "aws_autoscaling_group.autoScalingGroup" is waiting for "aws_launch_template.templateAsg"
2021-02-13T15:00:24.307Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:24 [DEBUG] Authorizing security group {
2021-02-13T15:00:24.308Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Description: "Managed by Terraform",
2021-02-13T15:00:24.308Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   GroupId: "sg-0f7ac2433c66c6862",
2021-02-13T15:00:24.308Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   GroupName: "sgBackend",
2021-02-13T15:00:24.308Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   OwnerId: "610303284743",
2021-02-13T15:00:24.308Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   VpcId: "vpc-009e5ad5af72453ae"
2021-02-13T15:00:24.308Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: } egress rule: []*ec2.IpPermission{{
2021-02-13T15:00:24.308Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   FromPort: 0,
2021-02-13T15:00:24.308Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpProtocol: "-1",
2021-02-13T15:00:24.308Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IpRanges: [{
2021-02-13T15:00:24.308Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       CidrIp: "0.0.0.0/0"
2021-02-13T15:00:24.308Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021-02-13T15:00:24.308Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   ToPort: 0
2021-02-13T15:00:24.308Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }}
2021-02-13T15:00:24.341Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:24 [INFO] Instance ID: i-08118ac403de05e3a
2021-02-13T15:00:24.341Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:24 [DEBUG] Waiting for instance (i-08118ac403de05e3a) to become running
2021-02-13T15:00:24.341Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:24 [DEBUG] Waiting for state to become: [running]
2021/02/13 15:00:24 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_security_group.sgMysql, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .name_prefix: was null, but now cty.StringVal("")
2021/02/13 15:00:24 [TRACE] EvalWriteState: recording 1 dependencies for aws_security_group.sgMysql
2021/02/13 15:00:24 [TRACE] EvalWriteState: writing current state object for aws_security_group.sgMysql
2021/02/13 15:00:24 [TRACE] EvalWriteState: recording 1 dependencies for aws_security_group.sgMysql
2021/02/13 15:00:24 [TRACE] EvalWriteState: writing current state object for aws_security_group.sgMysql
2021/02/13 15:00:24 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:24 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3375
2021/02/13 15:00:24 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:24 [TRACE] vertex "aws_security_group.sgMysql": visit complete
2021/02/13 15:00:24 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_security_group.sgJump, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .name_prefix: was null, but now cty.StringVal("")
2021/02/13 15:00:24 [TRACE] EvalWriteState: recording 1 dependencies for aws_security_group.sgJump
2021/02/13 15:00:24 [TRACE] EvalWriteState: writing current state object for aws_security_group.sgJump
2021/02/13 15:00:24 [TRACE] EvalWriteState: recording 1 dependencies for aws_security_group.sgJump
2021/02/13 15:00:24 [TRACE] EvalWriteState: writing current state object for aws_security_group.sgJump
2021/02/13 15:00:24 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:24 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3376
2021/02/13 15:00:24 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:24 [TRACE] vertex "aws_security_group.sgJump": visit complete
2021/02/13 15:00:24 [TRACE] dag/walk: visiting "aws_instance.jump"
2021/02/13 15:00:24 [TRACE] vertex "aws_instance.jump": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:24 [TRACE] EvalReadDiff: Read Create change from plan for aws_instance.jump
2021/02/13 15:00:24 [TRACE] EvalReadState: reading state for aws_instance.jump
2021/02/13 15:00:24 [TRACE] EvalReadState: no state present for aws_instance.jump
2021/02/13 15:00:24 [TRACE] EvalReadDiff: Read Create change from plan for aws_instance.jump
2021/02/13 15:00:24 [TRACE] Re-validating config for "aws_instance.jump"
2021/02/13 15:00:24 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021-02-13T15:00:24.390Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:24 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021/02/13 15:00:24 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:24 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.jump, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .user_data: planned value cty.StringVal("b7c1b84cf87baa8a7d9edf24cbf157a6835a31ad") does not match config value cty.StringVal("#!/bin/bash\n#\n# Tested for ubbuntu 20.04\n#\nsudo apt-get update\nsudo apt-get -y install python\nsudo apt install -y python3-pip\nsudo apt install -y jq\npip3 install ansible==2.9.12\npip3 install avisdk==18.2.9\npip3 install dnspython\npip3 install boto3\npip3 install botocore\nsudo -u ubuntu ansible-galaxy install -f avinetworks.avisdk\nsudo mkdir -p /opt/ansible/inventory\nsudo tee /opt/ansible/inventory/aws_ec2.yaml > /dev/null <<EOT\n---\nplugin: aws_ec2\nkeyed_groups:\n  - key: tags\n    prefix: aws\nEOT\nsudo mkdir -p /etc/ansible\nsudo tee /etc/ansible/ansible.cfg > /dev/null <<EOT\n[defaults]\ninventory      = /opt/ansible/inventory/aws_ec2.yaml\nprivate_key_file = /home/ubuntu/.ssh/cloudKey\nhost_key_checking = False\nhost_key_auto_add = True\nEOT\necho \"cloud init done\" | tee /tmp/cloudInitDone.log\n")
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/02/13 15:00:24 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:24 [TRACE] EvalReadState: reading state for aws_instance.jump
2021/02/13 15:00:24 [TRACE] EvalReadState: no state present for aws_instance.jump
2021/02/13 15:00:24 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:24 [DEBUG] aws_instance.jump: applying the planned Create change
2021/02/13 15:00:24 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:24 [DEBUG] setting computed for "network_interface" from ComputedKeys
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:24 [DEBUG] setting computed for "security_groups" from ComputedKeys
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:24 [DEBUG] setting computed for "ephemeral_block_device" from ComputedKeys
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:24 [DEBUG] setting computed for "network_interface" from ComputedKeys
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:24 [DEBUG] setting computed for "ebs_block_device" from ComputedKeys
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:24 [DEBUG] setting computed for "metadata_options" from ComputedKeys
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:24 [DEBUG] setting computed for "volume_tags" from ComputedKeys
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:24 [DEBUG] setting computed for "root_block_device" from ComputedKeys
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:24 [DEBUG] setting computed for "ipv6_addresses" from ComputedKeys
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:24 [DEBUG] setting computed for "enclave_options" from ComputedKeys
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:24 [DEBUG] setting computed for "secondary_private_ips" from ComputedKeys
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:24 [DEBUG] Run configuration: {
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   DisableApiTermination: false,
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   EbsOptimized: false,
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   HibernationOptions: {
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     Configured: false
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   },
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IamInstanceProfile: {
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     Name: "Ansible-Instance-Profile"
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   },
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   ImageId: "ami-022e8cc8f0d3c52fd",
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   InstanceType: "t2.medium",
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   KeyName: "kpJump",
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   MaxCount: 1,
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   MinCount: 1,
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Monitoring: {
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     Enabled: false
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   },
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   NetworkInterfaces: [{
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       DeviceIndex: 0,
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       Groups: ["sg-00b632058ba87d53d"],
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       SubnetId: "subnet-099870d7eb90baf25"
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Placement: {
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     AvailabilityZone: "",
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     GroupName: ""
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   },
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   TagSpecifications: [{
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       ResourceType: "instance",
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       Tags: [{
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Key: "createdBy",
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Value: "Terraform"
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:         },{
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Key: "Name",
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Value: "jump"
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:         },{
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Key: "group",
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Value: "jump"
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:         }]
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   UserData: "IyEvYmluL2Jhc2gKIwojIFRlc3RlZCBmb3IgdWJidW50dSAyMC4wNAojCnN1ZG8gYXB0LWdldCB1cGRhdGUKc3VkbyBhcHQtZ2V0IC15IGluc3RhbGwgcHl0aG9uCnN1ZG8gYXB0IGluc3RhbGwgLXkgcHl0aG9uMy1waXAKc3VkbyBhcHQgaW5zdGFsbCAteSBqcQpwaXAzIGluc3RhbGwgYW5zaWJsZT09Mi45LjEyCnBpcDMgaW5zdGFsbCBhdmlzZGs9PTE4LjIuOQpwaXAzIGluc3RhbGwgZG5zcHl0aG9uCnBpcDMgaW5zdGFsbCBib3RvMwpwaXAzIGluc3RhbGwgYm90b2NvcmUKc3VkbyAtdSB1YnVudHUgYW5zaWJsZS1nYWxheHkgaW5zdGFsbCAtZiBhdmluZXR3b3Jrcy5hdmlzZGsKc3VkbyBta2RpciAtcCAvb3B0L2Fuc2libGUvaW52ZW50b3J5CnN1ZG8gdGVlIC9vcHQvYW5zaWJsZS9pbnZlbnRvcnkvYXdzX2VjMi55YW1sID4gL2Rldi9udWxsIDw8RU9UCi0tLQpwbHVnaW46IGF3c19lYzIKa2V5ZWRfZ3JvdXBzOgogIC0ga2V5OiB0YWdzCiAgICBwcmVmaXg6IGF3cwpFT1QKc3VkbyBta2RpciAtcCAvZXRjL2Fuc2libGUKc3VkbyB0ZWUgL2V0Yy9hbnNpYmxlL2Fuc2libGUuY2ZnID4gL2Rldi9udWxsIDw8RU9UCltkZWZhdWx0c10KaW52ZW50b3J5ICAgICAgPSAvb3B0L2Fuc2libGUvaW52ZW50b3J5L2F3c19lYzIueWFtbApwcml2YXRlX2tleV9maWxlID0gL2hvbWUvdWJ1bnR1Ly5zc2gvY2xvdWRLZXkKaG9zdF9rZXlfY2hlY2tpbmcgPSBGYWxzZQpob3N0X2tleV9hdXRvX2FkZCA9IFRydWUKRU9UCmVjaG8gImNsb3VkIGluaXQgZG9uZSIgfCB0ZWUgL3RtcC9jbG91ZEluaXREb25lLmxvZwo="
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:24.395Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:24 [DEBUG] Waiting for state to become: [success]
2021-02-13T15:00:24.650Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:24 [TRACE] Waiting 400ms before next try
2021-02-13T15:00:24.874Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:24 [DEBUG] Waiting for Security Group (sg-0f7ac2433c66c6862) to exist
2021-02-13T15:00:24.874Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:24 [DEBUG] Waiting for state to become: [exists]
2021/02/13 15:00:25 [TRACE] dag/walk: vertex "aws_route_table.rtPrivate[0]" is waiting for "aws_nat_gateway.natGw"
2021/02/13 15:00:25 [TRACE] dag/walk: vertex "aws_route53_record.aviCtrl" is waiting for "aws_instance.aviCtrl[0]"
2021/02/13 15:00:25 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationMysql" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:00:25 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_security_group.sgBackend, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .name_prefix: was null, but now cty.StringVal("")
2021/02/13 15:00:25 [TRACE] EvalWriteState: recording 1 dependencies for aws_security_group.sgBackend
2021/02/13 15:00:25 [TRACE] EvalWriteState: writing current state object for aws_security_group.sgBackend
2021/02/13 15:00:25 [TRACE] EvalWriteState: recording 1 dependencies for aws_security_group.sgBackend
2021/02/13 15:00:25 [TRACE] EvalWriteState: writing current state object for aws_security_group.sgBackend
2021/02/13 15:00:25 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:25 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3377
2021/02/13 15:00:25 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:25 [TRACE] vertex "aws_security_group.sgBackend": visit complete
2021/02/13 15:00:25 [TRACE] dag/walk: visiting "aws_instance.backend[1]"
2021/02/13 15:00:25 [TRACE] vertex "aws_instance.backend[1]": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:25 [TRACE] dag/walk: visiting "aws_launch_template.templateAsg"
2021/02/13 15:00:25 [TRACE] vertex "aws_launch_template.templateAsg": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:25 [TRACE] EvalReadDiff: Read Create change from plan for aws_instance.backend[1]
2021/02/13 15:00:25 [TRACE] EvalReadState: reading state for aws_instance.backend[1]
2021/02/13 15:00:25 [TRACE] EvalReadState: no state present for aws_instance.backend[1]
2021/02/13 15:00:25 [TRACE] dag/walk: visiting "aws_instance.backend[2]"
2021/02/13 15:00:25 [TRACE] vertex "aws_instance.backend[2]": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:25 [TRACE] EvalReadDiff: Read Create change from plan for aws_instance.backend[1]
2021/02/13 15:00:25 [TRACE] EvalReadDiff: Read Create change from plan for aws_instance.backend[2]
2021/02/13 15:00:25 [TRACE] EvalReadState: reading state for aws_instance.backend[2]
2021/02/13 15:00:25 [TRACE] EvalReadState: no state present for aws_instance.backend[2]
2021/02/13 15:00:25 [TRACE] EvalReadDiff: Read Create change from plan for aws_instance.backend[2]
2021/02/13 15:00:25 [TRACE] EvalReadDiff: Read Create change from plan for aws_launch_template.templateAsg
2021/02/13 15:00:25 [TRACE] EvalReadState: reading state for aws_launch_template.templateAsg
2021/02/13 15:00:25 [TRACE] EvalReadState: no state present for aws_launch_template.templateAsg
2021/02/13 15:00:25 [TRACE] EvalReadDiff: Read Create change from plan for aws_launch_template.templateAsg
2021/02/13 15:00:25 [TRACE] Re-validating config for "aws_instance.backend[1]"
2021/02/13 15:00:25 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:25 [TRACE] Re-validating config for "aws_instance.backend[2]"
2021/02/13 15:00:25 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:25 [TRACE] dag/walk: visiting "aws_instance.backend[0]"
2021/02/13 15:00:25 [TRACE] vertex "aws_instance.backend[0]": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:25 [TRACE] EvalReadDiff: Read Create change from plan for aws_instance.backend[0]
2021/02/13 15:00:25 [TRACE] EvalReadState: reading state for aws_instance.backend[0]
2021/02/13 15:00:25 [TRACE] EvalReadState: no state present for aws_instance.backend[0]
2021/02/13 15:00:25 [TRACE] EvalReadDiff: Read Create change from plan for aws_instance.backend[0]
2021-02-13T15:00:25.396Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021/02/13 15:00:25 [TRACE] Re-validating config for "aws_launch_template.templateAsg"
2021/02/13 15:00:25 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021-02-13T15:00:25.396Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021/02/13 15:00:25 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:25 [TRACE] Re-validating config for "aws_instance.backend[0]"
2021/02/13 15:00:25 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:00:25 [TRACE] GRPCProvider: PlanResourceChange
2021-02-13T15:00:25.398Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021-02-13T15:00:25.398Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021/02/13 15:00:25 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:25 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:25 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.backend[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .user_data: planned value cty.StringVal("09485d0ada6347ce23424f55668afe41289c05f8") does not match config value cty.StringVal("#!/bin/bash\nsudo apt update\nsudo apt install -y apache2\nsudo apt install -y docker.io\nsudo usermod -a -G docker ubuntu\nsudo mv /var/www/html/index.html /var/www/html/index.html.old\necho -e \"Hello World - cloud is Aws - Node is $(hostname)\" | sudo tee /var/www/html/index.html\ngit clone https://github.com/tacobayle/demovip_server\ncd $(basename https://github.com/tacobayle/demovip_server)\nsudo docker build . --tag demovip_server:latest\nifPrimary=`ip route | grep default | sed -e \"s/^.*dev.//\" -e \"s/.proto.*//\"`\nip=$(ip -f inet addr show $ifPrimary | awk '/inet / {print $2}' | awk -F/ '{print $1}')\nsudo docker run -d -p $ip:8080:80 demovip_server:latest\necho \"cloud init done\" | tee /tmp/cloudInitDone.log\n# while true\n# do\n# echo -e \"HTTP/1.1 200 OK\\n\\nHello World - cloud is AWS - Node is $(hostname)\" | nc -N -l -p 80\n# done\n")
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/02/13 15:00:25 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:25 [TRACE] EvalReadState: reading state for aws_instance.backend[2]
2021/02/13 15:00:25 [TRACE] EvalReadState: no state present for aws_instance.backend[2]
2021/02/13 15:00:25 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.backend[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .user_data: planned value cty.StringVal("09485d0ada6347ce23424f55668afe41289c05f8") does not match config value cty.StringVal("#!/bin/bash\nsudo apt update\nsudo apt install -y apache2\nsudo apt install -y docker.io\nsudo usermod -a -G docker ubuntu\nsudo mv /var/www/html/index.html /var/www/html/index.html.old\necho -e \"Hello World - cloud is Aws - Node is $(hostname)\" | sudo tee /var/www/html/index.html\ngit clone https://github.com/tacobayle/demovip_server\ncd $(basename https://github.com/tacobayle/demovip_server)\nsudo docker build . --tag demovip_server:latest\nifPrimary=`ip route | grep default | sed -e \"s/^.*dev.//\" -e \"s/.proto.*//\"`\nip=$(ip -f inet addr show $ifPrimary | awk '/inet / {print $2}' | awk -F/ '{print $1}')\nsudo docker run -d -p $ip:8080:80 demovip_server:latest\necho \"cloud init done\" | tee /tmp/cloudInitDone.log\n# while true\n# do\n# echo -e \"HTTP/1.1 200 OK\\n\\nHello World - cloud is AWS - Node is $(hostname)\" | nc -N -l -p 80\n# done\n")
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/02/13 15:00:25 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:25 [TRACE] EvalReadState: reading state for aws_instance.backend[1]
2021/02/13 15:00:25 [TRACE] EvalReadState: no state present for aws_instance.backend[1]
2021/02/13 15:00:25 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:25 [DEBUG] aws_instance.backend[2]: applying the planned Create change
2021/02/13 15:00:25 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:25 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.backend[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .source_dest_check: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .get_password_data: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .user_data: planned value cty.StringVal("09485d0ada6347ce23424f55668afe41289c05f8") does not match config value cty.StringVal("#!/bin/bash\nsudo apt update\nsudo apt install -y apache2\nsudo apt install -y docker.io\nsudo usermod -a -G docker ubuntu\nsudo mv /var/www/html/index.html /var/www/html/index.html.old\necho -e \"Hello World - cloud is Aws - Node is $(hostname)\" | sudo tee /var/www/html/index.html\ngit clone https://github.com/tacobayle/demovip_server\ncd $(basename https://github.com/tacobayle/demovip_server)\nsudo docker build . --tag demovip_server:latest\nifPrimary=`ip route | grep default | sed -e \"s/^.*dev.//\" -e \"s/.proto.*//\"`\nip=$(ip -f inet addr show $ifPrimary | awk '/inet / {print $2}' | awk -F/ '{print $1}')\nsudo docker run -d -p $ip:8080:80 demovip_server:latest\necho \"cloud init done\" | tee /tmp/cloudInitDone.log\n# while true\n# do\n# echo -e \"HTTP/1.1 200 OK\\n\\nHello World - cloud is AWS - Node is $(hostname)\" | nc -N -l -p 80\n# done\n")
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/02/13 15:00:25 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:25 [TRACE] EvalReadState: reading state for aws_instance.backend[0]
2021/02/13 15:00:25 [TRACE] EvalReadState: no state present for aws_instance.backend[0]
2021-02-13T15:00:25.406Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "network_interface" from ComputedKeys
2021-02-13T15:00:25.406Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "ebs_block_device" from ComputedKeys
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "security_groups" from ComputedKeys
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "volume_tags" from ComputedKeys
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "network_interface" from ComputedKeys
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "metadata_options" from ComputedKeys
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "ipv6_addresses" from ComputedKeys
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "secondary_private_ips" from ComputedKeys
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "ephemeral_block_device" from ComputedKeys
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "enclave_options" from ComputedKeys
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "root_block_device" from ComputedKeys
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] Run configuration: {
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   DisableApiTermination: false,
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   EbsOptimized: false,
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   HibernationOptions: {
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     Configured: false
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   },
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IamInstanceProfile: {
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     Name: ""
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   },
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   ImageId: "ami-0e5657f6d3c3ea350",
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   InstanceType: "t2.micro",
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   KeyName: "kpBackend",
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   MaxCount: 1,
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   MinCount: 1,
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Monitoring: {
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     Enabled: false
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   },
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   NetworkInterfaces: [{
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       DeviceIndex: 0,
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       Groups: ["sg-0f7ac2433c66c6862"],
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       SubnetId: "subnet-0134d960144f999a5"
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Placement: {
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     AvailabilityZone: "",
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     GroupName: ""
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   },
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   TagSpecifications: [{
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       ResourceType: "instance",
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       Tags: [{
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Key: "createdBy",
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Value: "Terraform"
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:         },{
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Key: "group",
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Value: "backend"
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:         },{
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Key: "Name",
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Value: "backend-3"
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:         }]
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   UserData: "IyEvYmluL2Jhc2gKc3VkbyBhcHQgdXBkYXRlCnN1ZG8gYXB0IGluc3RhbGwgLXkgYXBhY2hlMgpzdWRvIGFwdCBpbnN0YWxsIC15IGRvY2tlci5pbwpzdWRvIHVzZXJtb2QgLWEgLUcgZG9ja2VyIHVidW50dQpzdWRvIG12IC92YXIvd3d3L2h0bWwvaW5kZXguaHRtbCAvdmFyL3d3dy9odG1sL2luZGV4Lmh0bWwub2xkCmVjaG8gLWUgIkhlbGxvIFdvcmxkIC0gY2xvdWQgaXMgQXdzIC0gTm9kZSBpcyAkKGhvc3RuYW1lKSIgfCBzdWRvIHRlZSAvdmFyL3d3dy9odG1sL2luZGV4Lmh0bWwKZ2l0IGNsb25lIGh0dHBzOi8vZ2l0aHViLmNvbS90YWNvYmF5bGUvZGVtb3ZpcF9zZXJ2ZXIKY2QgJChiYXNlbmFtZSBodHRwczovL2dpdGh1Yi5jb20vdGFjb2JheWxlL2RlbW92aXBfc2VydmVyKQpzdWRvIGRvY2tlciBidWlsZCAuIC0tdGFnIGRlbW92aXBfc2VydmVyOmxhdGVzdAppZlByaW1hcnk9YGlwIHJvdXRlIHwgZ3JlcCBkZWZhdWx0IHwgc2VkIC1lICJzL14uKmRldi4vLyIgLWUgInMvLnByb3RvLiovLyJgCmlwPSQoaXAgLWYgaW5ldCBhZGRyIHNob3cgJGlmUHJpbWFyeSB8IGF3ayAnL2luZXQgLyB7cHJpbnQgJDJ9JyB8IGF3ayAtRi8gJ3twcmludCAkMX0nKQpzdWRvIGRvY2tlciBydW4gLWQgLXAgJGlwOjgwODA6ODAgZGVtb3ZpcF9zZXJ2ZXI6bGF0ZXN0CmVjaG8gImNsb3VkIGluaXQgZG9uZSIgfCB0ZWUgL3RtcC9jbG91ZEluaXREb25lLmxvZwojIHdoaWxlIHRydWUKIyBkbwojIGVjaG8gLWUgIkhUVFAvMS4xIDIwMCBPS1xuXG5IZWxsbyBXb3JsZCAtIGNsb3VkIGlzIEFXUyAtIE5vZGUgaXMgJChob3N0bmFtZSkiIHwgbmMgLU4gLWwgLXAgODAKIyBkb25lCg=="
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:25.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] Waiting for state to become: [success]
2021/02/13 15:00:25 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_launch_template.templateAsg, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/02/13 15:00:25 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:25 [TRACE] EvalReadState: reading state for aws_launch_template.templateAsg
2021/02/13 15:00:25 [TRACE] EvalReadState: no state present for aws_launch_template.templateAsg
2021/02/13 15:00:25 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:25 [DEBUG] aws_instance.backend[1]: applying the planned Create change
2021/02/13 15:00:25 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:25 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:25 [DEBUG] aws_launch_template.templateAsg: applying the planned Create change
2021/02/13 15:00:25 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/13 15:00:25 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:25 [DEBUG] aws_instance.backend[0]: applying the planned Create change
2021/02/13 15:00:25 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-13T15:00:25.411Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "network_interface" from ComputedKeys
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "secondary_private_ips" from ComputedKeys
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "ipv6_addresses" from ComputedKeys
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "security_groups" from ComputedKeys
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "metadata_options" from ComputedKeys
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "enclave_options" from ComputedKeys
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "ephemeral_block_device" from ComputedKeys
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "ebs_block_device" from ComputedKeys
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "network_interface" from ComputedKeys
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "volume_tags" from ComputedKeys
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "root_block_device" from ComputedKeys
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] Run configuration: {
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   DisableApiTermination: false,
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   EbsOptimized: false,
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   HibernationOptions: {
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     Configured: false
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   },
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IamInstanceProfile: {
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     Name: ""
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   },
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   ImageId: "ami-0e5657f6d3c3ea350",
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   InstanceType: "t2.micro",
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   KeyName: "kpBackend",
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   MaxCount: 1,
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   MinCount: 1,
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Monitoring: {
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     Enabled: false
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   },
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   NetworkInterfaces: [{
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       DeviceIndex: 0,
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       Groups: ["sg-0f7ac2433c66c6862"],
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       SubnetId: "subnet-08799d0bae57eaf57"
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Placement: {
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     AvailabilityZone: "",
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     GroupName: ""
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   },
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   TagSpecifications: [{
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       ResourceType: "instance",
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       Tags: [{
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Key: "createdBy",
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Value: "Terraform"
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:         },{
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Key: "Name",
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Value: "backend-2"
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:         },{
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Key: "group",
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Value: "backend"
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:         }]
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   UserData: "IyEvYmluL2Jhc2gKc3VkbyBhcHQgdXBkYXRlCnN1ZG8gYXB0IGluc3RhbGwgLXkgYXBhY2hlMgpzdWRvIGFwdCBpbnN0YWxsIC15IGRvY2tlci5pbwpzdWRvIHVzZXJtb2QgLWEgLUcgZG9ja2VyIHVidW50dQpzdWRvIG12IC92YXIvd3d3L2h0bWwvaW5kZXguaHRtbCAvdmFyL3d3dy9odG1sL2luZGV4Lmh0bWwub2xkCmVjaG8gLWUgIkhlbGxvIFdvcmxkIC0gY2xvdWQgaXMgQXdzIC0gTm9kZSBpcyAkKGhvc3RuYW1lKSIgfCBzdWRvIHRlZSAvdmFyL3d3dy9odG1sL2luZGV4Lmh0bWwKZ2l0IGNsb25lIGh0dHBzOi8vZ2l0aHViLmNvbS90YWNvYmF5bGUvZGVtb3ZpcF9zZXJ2ZXIKY2QgJChiYXNlbmFtZSBodHRwczovL2dpdGh1Yi5jb20vdGFjb2JheWxlL2RlbW92aXBfc2VydmVyKQpzdWRvIGRvY2tlciBidWlsZCAuIC0tdGFnIGRlbW92aXBfc2VydmVyOmxhdGVzdAppZlByaW1hcnk9YGlwIHJvdXRlIHwgZ3JlcCBkZWZhdWx0IHwgc2VkIC1lICJzL14uKmRldi4vLyIgLWUgInMvLnByb3RvLiovLyJgCmlwPSQoaXAgLWYgaW5ldCBhZGRyIHNob3cgJGlmUHJpbWFyeSB8IGF3ayAnL2luZXQgLyB7cHJpbnQgJDJ9JyB8IGF3ayAtRi8gJ3twcmludCAkMX0nKQpzdWRvIGRvY2tlciBydW4gLWQgLXAgJGlwOjgwODA6ODAgZGVtb3ZpcF9zZXJ2ZXI6bGF0ZXN0CmVjaG8gImNsb3VkIGluaXQgZG9uZSIgfCB0ZWUgL3RtcC9jbG91ZEluaXREb25lLmxvZwojIHdoaWxlIHRydWUKIyBkbwojIGVjaG8gLWUgIkhUVFAvMS4xIDIwMCBPS1xuXG5IZWxsbyBXb3JsZCAtIGNsb3VkIGlzIEFXUyAtIE5vZGUgaXMgJChob3N0bmFtZSkiIHwgbmMgLU4gLWwgLXAgODAKIyBkb25lCg=="
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] Waiting for state to become: [success]
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "metadata_options" from ComputedKeys
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "ipv6_addresses" from ComputedKeys
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "network_interface" from ComputedKeys
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "security_groups" from ComputedKeys
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "enclave_options" from ComputedKeys
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "secondary_private_ips" from ComputedKeys
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "ebs_block_device" from ComputedKeys
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "ephemeral_block_device" from ComputedKeys
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "network_interface" from ComputedKeys
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "volume_tags" from ComputedKeys
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "metadata_options" from ComputedKeys
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] setting computed for "root_block_device" from ComputedKeys
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] Run configuration: {
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   DisableApiTermination: false,
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   EbsOptimized: false,
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   HibernationOptions: {
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     Configured: false
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   },
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   IamInstanceProfile: {
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     Name: ""
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   },
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   ImageId: "ami-0e5657f6d3c3ea350",
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   InstanceType: "t2.micro",
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   KeyName: "kpBackend",
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   MaxCount: 1,
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   MinCount: 1,
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Monitoring: {
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     Enabled: false
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   },
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   NetworkInterfaces: [{
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       DeviceIndex: 0,
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       Groups: ["sg-0f7ac2433c66c6862"],
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       SubnetId: "subnet-0fec7531f3b69c144"
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   Placement: {
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     AvailabilityZone: "",
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     GroupName: ""
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   },
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   TagSpecifications: [{
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       ResourceType: "instance",
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       Tags: [{
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Key: "createdBy",
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Value: "Terraform"
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:         },{
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Key: "Name",
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Value: "backend-1"
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:         },{
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Key: "group",
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Value: "backend"
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:         }]
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     }],
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   UserData: "IyEvYmluL2Jhc2gKc3VkbyBhcHQgdXBkYXRlCnN1ZG8gYXB0IGluc3RhbGwgLXkgYXBhY2hlMgpzdWRvIGFwdCBpbnN0YWxsIC15IGRvY2tlci5pbwpzdWRvIHVzZXJtb2QgLWEgLUcgZG9ja2VyIHVidW50dQpzdWRvIG12IC92YXIvd3d3L2h0bWwvaW5kZXguaHRtbCAvdmFyL3d3dy9odG1sL2luZGV4Lmh0bWwub2xkCmVjaG8gLWUgIkhlbGxvIFdvcmxkIC0gY2xvdWQgaXMgQXdzIC0gTm9kZSBpcyAkKGhvc3RuYW1lKSIgfCBzdWRvIHRlZSAvdmFyL3d3dy9odG1sL2luZGV4Lmh0bWwKZ2l0IGNsb25lIGh0dHBzOi8vZ2l0aHViLmNvbS90YWNvYmF5bGUvZGVtb3ZpcF9zZXJ2ZXIKY2QgJChiYXNlbmFtZSBodHRwczovL2dpdGh1Yi5jb20vdGFjb2JheWxlL2RlbW92aXBfc2VydmVyKQpzdWRvIGRvY2tlciBidWlsZCAuIC0tdGFnIGRlbW92aXBfc2VydmVyOmxhdGVzdAppZlByaW1hcnk9YGlwIHJvdXRlIHwgZ3JlcCBkZWZhdWx0IHwgc2VkIC1lICJzL14uKmRldi4vLyIgLWUgInMvLnByb3RvLiovLyJgCmlwPSQoaXAgLWYgaW5ldCBhZGRyIHNob3cgJGlmUHJpbWFyeSB8IGF3ayAnL2luZXQgLyB7cHJpbnQgJDJ9JyB8IGF3ayAtRi8gJ3twcmludCAkMX0nKQpzdWRvIGRvY2tlciBydW4gLWQgLXAgJGlwOjgwODA6ODAgZGVtb3ZpcF9zZXJ2ZXI6bGF0ZXN0CmVjaG8gImNsb3VkIGluaXQgZG9uZSIgfCB0ZWUgL3RtcC9jbG91ZEluaXREb25lLmxvZwojIHdoaWxlIHRydWUKIyBkbwojIGVjaG8gLWUgIkhUVFAvMS4xIDIwMCBPS1xuXG5IZWxsbyBXb3JsZCAtIGNsb3VkIGlzIEFXUyAtIE5vZGUgaXMgJChob3N0bmFtZSkiIHwgbmMgLU4gLWwgLXAgODAKIyBkb25lCg=="
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:25.413Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [DEBUG] Waiting for state to become: [success]
2021-02-13T15:00:25.579Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:25 [TRACE] Waiting 800ms before next try
2021-02-13T15:00:26.022Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:26 [DEBUG] Launch Template created: "lt-01733cb134a073f91" (version 1)
2021-02-13T15:00:26.023Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:26 [DEBUG] Reading launch template lt-01733cb134a073f91
2021-02-13T15:00:26.146Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:26 [INFO] Instance ID: i-0a6ab579368880a7e
2021-02-13T15:00:26.146Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:26 [DEBUG] Waiting for instance (i-0a6ab579368880a7e) to become running
2021-02-13T15:00:26.146Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:26 [DEBUG] Waiting for state to become: [running]
2021/02/13 15:00:26 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[1]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:00:26 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[2]" is waiting for "aws_route_table.rtPrivate[0]"
2021-02-13T15:00:26.633Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:26 [DEBUG] Found launch template lt-01733cb134a073f91
2021-02-13T15:00:27.050Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:27 [TRACE] Waiting 1.6s before next try
2021-02-13T15:00:27.053Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:27 [INFO] Instance ID: i-0389aee8aee87a4cb
2021-02-13T15:00:27.053Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:27 [DEBUG] Waiting for instance (i-0389aee8aee87a4cb) to become running
2021-02-13T15:00:27.053Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:27 [DEBUG] Waiting for state to become: [running]
2021-02-13T15:00:27.119Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:27 [INFO] Instance ID: i-0a21a5ddff63fbcf3
2021-02-13T15:00:27.119Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:27 [DEBUG] Waiting for instance (i-0a21a5ddff63fbcf3) to become running
2021-02-13T15:00:27.119Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:27 [DEBUG] Waiting for state to become: [running]
2021-02-13T15:00:27.186Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:27 [DEBUG] Received launch template version "lt-01733cb134a073f91" (version 1)
2021-02-13T15:00:27.188Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:27 [INFO] Instance ID: i-048a52bf30eaf03b2
2021-02-13T15:00:27.188Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:27 [DEBUG] Waiting for instance (i-048a52bf30eaf03b2) to become running
2021-02-13T15:00:27.188Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:27 [DEBUG] Waiting for state to become: [running]
2021/02/13 15:00:27 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_launch_template.templateAsg, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .key_name: was null, but now cty.StringVal("")
      - .ram_disk_id: was null, but now cty.StringVal("")
      - .description: was null, but now cty.StringVal("")
      - .instance_initiated_shutdown_behavior: was null, but now cty.StringVal("")
      - .ebs_optimized: was null, but now cty.StringVal("")
      - .disable_api_termination: was null, but now cty.False
      - .kernel_id: was null, but now cty.StringVal("")
2021/02/13 15:00:27 [TRACE] EvalWriteState: recording 3 dependencies for aws_launch_template.templateAsg
2021/02/13 15:00:27 [TRACE] EvalWriteState: writing current state object for aws_launch_template.templateAsg
2021/02/13 15:00:27 [TRACE] EvalWriteState: recording 3 dependencies for aws_launch_template.templateAsg
2021/02/13 15:00:27 [TRACE] EvalWriteState: writing current state object for aws_launch_template.templateAsg
2021/02/13 15:00:27 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:27 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3378
2021/02/13 15:00:27 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:27 [TRACE] vertex "aws_launch_template.templateAsg": visit complete
2021/02/13 15:00:27 [TRACE] dag/walk: visiting "aws_autoscaling_group.autoScalingGroup"
2021/02/13 15:00:27 [TRACE] vertex "aws_autoscaling_group.autoScalingGroup": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:27 [TRACE] EvalReadDiff: Read Create change from plan for aws_autoscaling_group.autoScalingGroup
2021/02/13 15:00:27 [TRACE] EvalReadState: reading state for aws_autoscaling_group.autoScalingGroup
2021/02/13 15:00:27 [TRACE] EvalReadState: no state present for aws_autoscaling_group.autoScalingGroup
2021/02/13 15:00:27 [TRACE] EvalReadDiff: Read Create change from plan for aws_autoscaling_group.autoScalingGroup
2021/02/13 15:00:27 [TRACE] Re-validating config for "aws_autoscaling_group.autoScalingGroup"
2021/02/13 15:00:27 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021-02-13T15:00:27.200Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:27 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021/02/13 15:00:27 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:27 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_autoscaling_group.autoScalingGroup, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .protect_from_scale_in: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .force_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .metrics_granularity: planned value cty.StringVal("1Minute") does not match config value cty.NullVal(cty.String)
      - .wait_for_capacity_timeout: planned value cty.StringVal("10m") does not match config value cty.NullVal(cty.String)
      - .health_check_grace_period: planned value cty.NumberIntVal(300) does not match config value cty.NullVal(cty.Number)
2021/02/13 15:00:27 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:27 [TRACE] EvalReadState: reading state for aws_autoscaling_group.autoScalingGroup
2021/02/13 15:00:27 [TRACE] EvalReadState: no state present for aws_autoscaling_group.autoScalingGroup
2021/02/13 15:00:27 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:27 [DEBUG] aws_autoscaling_group.autoScalingGroup: applying the planned Create change
2021/02/13 15:00:27 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-13T15:00:27.205Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:27 [DEBUG] setting computed for "availability_zones" from ComputedKeys
2021-02-13T15:00:27.205Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:27 [DEBUG] Auto Scaling Group create configuration: {
2021-02-13T15:00:27.205Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   AutoScalingGroupName: "tf-asg-2021021315002720510000000c",
2021-02-13T15:00:27.205Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   DesiredCapacity: 3,
2021-02-13T15:00:27.205Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   HealthCheckGracePeriod: 300,
2021-02-13T15:00:27.205Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   LaunchTemplate: {
2021-02-13T15:00:27.205Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     LaunchTemplateId: "lt-01733cb134a073f91",
2021-02-13T15:00:27.205Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     Version: "$Latest"
2021-02-13T15:00:27.205Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   },
2021-02-13T15:00:27.205Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   MaxSize: 5,
2021-02-13T15:00:27.205Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   MinSize: 3,
2021-02-13T15:00:27.205Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   NewInstancesProtectedFromScaleIn: false,
2021-02-13T15:00:27.205Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   VPCZoneIdentifier: ",,,subnet-0134d960144f999a5,subnet-0fec7531f3b69c144,subnet-08799d0bae57eaf57"
2021-02-13T15:00:27.205Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:27.205Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:27 [DEBUG] Waiting for state to become: [success]
2021/02/13 15:00:27 [TRACE] dag/walk: vertex "output.jumpPublicIp" is waiting for "aws_instance.jump"
2021/02/13 15:00:27 [TRACE] dag/walk: vertex "output.destroy" is waiting for "aws_instance.jump"
2021/02/13 15:00:27 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "null_resource.foo7"
2021/02/13 15:00:27 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/null\"] (close)" is waiting for "null_resource.foo7"
2021/02/13 15:00:27 [TRACE] dag/walk: vertex "provisioner.remote-exec (close)" is waiting for "null_resource.foo7"
2021/02/13 15:00:27 [TRACE] dag/walk: vertex "aws_route53_record.jump" is waiting for "aws_instance.jump"
2021/02/13 15:00:27 [TRACE] dag/walk: vertex "null_resource.foo7" is waiting for "aws_instance.backend[2]"
2021/02/13 15:00:27 [TRACE] dag/walk: vertex "output.aviCtrlPublicIp" is waiting for "aws_instance.aviCtrl[0]"
2021/02/13 15:00:27 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[0]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:00:27 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/13 15:00:27 [TRACE] dag/walk: vertex "provisioner.file (close)" is waiting for "null_resource.foo7"
2021/02/13 15:00:27 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" is waiting for "aws_autoscaling_group.autoScalingGroup"
2021-02-13T15:00:28.914Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:28 [INFO] Auto Scaling Group ID: tf-asg-2021021315002720510000000c
2021-02-13T15:00:28.914Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:28 [DEBUG] Waiting on tf-asg-2021021315002720510000000c for capacity...
2021-02-13T15:00:28.914Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:28 [DEBUG] Waiting for state to become: [success]
2021-02-13T15:00:28.914Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:28 [DEBUG] Auto Scaling Group describe configuration: {
2021-02-13T15:00:28.914Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   AutoScalingGroupNames: ["tf-asg-2021021315002720510000000c"]
2021-02-13T15:00:28.914Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:29.231Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:29 [TRACE] Waiting 3.2s before next try
2021-02-13T15:00:29.507Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:29 [DEBUG] "tf-asg-2021021315002720510000000c" Capacity: 0 ASG, 0 ELB/ALB, satisfied: false, reason: "Need at least 3 healthy instances in ASG, have 0"
2021-02-13T15:00:29.507Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:29 [TRACE] Waiting 500ms before next try
2021-02-13T15:00:30.007Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:30 [DEBUG] Auto Scaling Group describe configuration: {
2021-02-13T15:00:30.007Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   AutoScalingGroupNames: ["tf-asg-2021021315002720510000000c"]
2021-02-13T15:00:30.007Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021/02/13 15:00:30 [TRACE] dag/walk: vertex "aws_route_table.rtPrivate[0]" is waiting for "aws_nat_gateway.natGw"
2021/02/13 15:00:30 [TRACE] dag/walk: vertex "aws_route53_record.aviCtrl" is waiting for "aws_instance.aviCtrl[0]"
2021/02/13 15:00:30 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationMysql" is waiting for "aws_route_table.rtPrivate[0]"
2021-02-13T15:00:30.606Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:30 [DEBUG] "tf-asg-2021021315002720510000000c" Capacity: 0 ASG, 0 ELB/ALB, satisfied: false, reason: "Need at least 3 healthy instances in ASG, have 0"
2021-02-13T15:00:30.606Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:30 [TRACE] Waiting 1s before next try
2021/02/13 15:00:31 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[2]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:00:31 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[1]" is waiting for "aws_route_table.rtPrivate[0]"
2021-02-13T15:00:31.607Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:31 [DEBUG] Auto Scaling Group describe configuration: {
2021-02-13T15:00:31.607Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   AutoScalingGroupNames: ["tf-asg-2021021315002720510000000c"]
2021-02-13T15:00:31.607Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:32.158Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:32 [DEBUG] "tf-asg-2021021315002720510000000c" Capacity: 0 ASG, 0 ELB/ALB, satisfied: false, reason: "Need at least 3 healthy instances in ASG, have 0"
2021-02-13T15:00:32.158Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:32 [TRACE] Waiting 2s before next try
2021/02/13 15:00:32 [TRACE] dag/walk: vertex "provisioner.file (close)" is waiting for "null_resource.foo7"
2021/02/13 15:00:32 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "null_resource.foo7"
2021/02/13 15:00:32 [TRACE] dag/walk: vertex "output.destroy" is waiting for "aws_instance.jump"
2021/02/13 15:00:32 [TRACE] dag/walk: vertex "output.jumpPublicIp" is waiting for "aws_instance.jump"
2021/02/13 15:00:32 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[0]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:00:32 [TRACE] dag/walk: vertex "aws_route53_record.jump" is waiting for "aws_instance.jump"
2021/02/13 15:00:32 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" is waiting for "aws_autoscaling_group.autoScalingGroup"
2021/02/13 15:00:32 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/null\"] (close)" is waiting for "null_resource.foo7"
2021/02/13 15:00:32 [TRACE] dag/walk: vertex "provisioner.remote-exec (close)" is waiting for "null_resource.foo7"
2021/02/13 15:00:32 [TRACE] dag/walk: vertex "null_resource.foo7" is waiting for "aws_instance.backend[2]"
2021/02/13 15:00:32 [TRACE] dag/walk: vertex "output.aviCtrlPublicIp" is waiting for "aws_instance.aviCtrl[0]"
2021/02/13 15:00:32 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021-02-13T15:00:32.988Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:32 [TRACE] Waiting 6.4s before next try
2021-02-13T15:00:34.158Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:34 [DEBUG] Auto Scaling Group describe configuration: {
2021-02-13T15:00:34.158Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   AutoScalingGroupNames: ["tf-asg-2021021315002720510000000c"]
2021-02-13T15:00:34.158Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:34.750Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:34 [DEBUG] "tf-asg-2021021315002720510000000c" Capacity: 0 ASG, 0 ELB/ALB, satisfied: false, reason: "Need at least 3 healthy instances in ASG, have 0"
2021-02-13T15:00:34.750Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:34 [TRACE] Waiting 4s before next try
2021-02-13T15:00:34.956Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:34 [TRACE] Waiting 3s before next try
2021/02/13 15:00:35 [TRACE] dag/walk: vertex "aws_route_table.rtPrivate[0]" is waiting for "aws_nat_gateway.natGw"
2021/02/13 15:00:35 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationMysql" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:00:35 [TRACE] dag/walk: vertex "aws_route53_record.aviCtrl" is waiting for "aws_instance.aviCtrl[0]"
2021/02/13 15:00:36 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[2]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:00:36 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[1]" is waiting for "aws_route_table.rtPrivate[0]"
2021-02-13T15:00:36.723Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:36 [TRACE] Waiting 3s before next try
2021/02/13 15:00:37 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/13 15:00:37 [TRACE] dag/walk: vertex "provisioner.remote-exec (close)" is waiting for "null_resource.foo7"
2021/02/13 15:00:37 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "null_resource.foo7"
2021/02/13 15:00:37 [TRACE] dag/walk: vertex "output.aviCtrlPublicIp" is waiting for "aws_instance.aviCtrl[0]"
2021/02/13 15:00:37 [TRACE] dag/walk: vertex "provisioner.file (close)" is waiting for "null_resource.foo7"
2021/02/13 15:00:37 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[0]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:00:37 [TRACE] dag/walk: vertex "aws_route53_record.jump" is waiting for "aws_instance.jump"
2021/02/13 15:00:37 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" is waiting for "aws_autoscaling_group.autoScalingGroup"
2021/02/13 15:00:37 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/null\"] (close)" is waiting for "null_resource.foo7"
2021/02/13 15:00:37 [TRACE] dag/walk: vertex "output.destroy" is waiting for "aws_instance.jump"
2021/02/13 15:00:37 [TRACE] dag/walk: vertex "output.jumpPublicIp" is waiting for "aws_instance.jump"
2021/02/13 15:00:37 [TRACE] dag/walk: vertex "null_resource.foo7" is waiting for "aws_instance.backend[2]"
2021-02-13T15:00:37.669Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:37 [TRACE] Waiting 3s before next try
2021-02-13T15:00:37.689Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:37 [TRACE] Waiting 3s before next try
2021-02-13T15:00:37.824Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:37 [TRACE] Waiting 3s before next try
2021-02-13T15:00:38.753Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:38 [DEBUG] Auto Scaling Group describe configuration: {
2021-02-13T15:00:38.753Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   AutoScalingGroupNames: ["tf-asg-2021021315002720510000000c"]
2021-02-13T15:00:38.753Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:39.279Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:39 [DEBUG] "tf-asg-2021021315002720510000000c" Capacity: 0 ASG, 0 ELB/ALB, satisfied: false, reason: "Need at least 3 healthy instances in ASG, have 0"
2021-02-13T15:00:39.279Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:39 [TRACE] Waiting 8s before next try
2021-02-13T15:00:39.917Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:39 [TRACE] Waiting 10s before next try
2021/02/13 15:00:40 [TRACE] dag/walk: vertex "aws_route_table.rtPrivate[0]" is waiting for "aws_nat_gateway.natGw"
2021/02/13 15:00:40 [TRACE] dag/walk: vertex "aws_route53_record.aviCtrl" is waiting for "aws_instance.aviCtrl[0]"
2021/02/13 15:00:40 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationMysql" is waiting for "aws_route_table.rtPrivate[0]"
2021-02-13T15:00:41.253Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:41 [TRACE] Waiting 6s before next try
2021-02-13T15:00:41.257Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:41 [TRACE] Waiting 6s before next try
2021-02-13T15:00:41.264Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:41 [DEBUG] Setting Security Group IDs: []string{"sg-071781f08020dff46"}
2021/02/13 15:00:41 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[2]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:00:41 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[1]" is waiting for "aws_route_table.rtPrivate[0]"
2021-02-13T15:00:41.418Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:41 [TRACE] Waiting 6s before next try
2021-02-13T15:00:42.525Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:42 [DEBUG] Setting Security Group IDs: []string{"sg-00b632058ba87d53d"}
2021/02/13 15:00:42 [TRACE] dag/walk: vertex "null_resource.foo7" is waiting for "aws_instance.backend[2]"
2021/02/13 15:00:42 [TRACE] dag/walk: vertex "provisioner.remote-exec (close)" is waiting for "null_resource.foo7"
2021/02/13 15:00:42 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" is waiting for "aws_autoscaling_group.autoScalingGroup"
2021/02/13 15:00:42 [TRACE] dag/walk: vertex "output.destroy" is waiting for "aws_instance.jump"
2021/02/13 15:00:42 [TRACE] dag/walk: vertex "output.jumpPublicIp" is waiting for "aws_instance.jump"
2021/02/13 15:00:42 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/null\"] (close)" is waiting for "null_resource.foo7"
2021/02/13 15:00:42 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/13 15:00:42 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "null_resource.foo7"
2021/02/13 15:00:42 [TRACE] dag/walk: vertex "output.aviCtrlPublicIp" is waiting for "aws_instance.aviCtrl[0]"
2021/02/13 15:00:42 [TRACE] dag/walk: vertex "provisioner.file (close)" is waiting for "null_resource.foo7"
2021/02/13 15:00:42 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[0]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:00:42 [TRACE] dag/walk: vertex "aws_route53_record.jump" is waiting for "aws_instance.jump"
2021/02/13 15:00:43 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_instance.aviCtrl[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .hibernation: was null, but now cty.False
      - .monitoring: was null, but now cty.False
      - .ebs_optimized: was null, but now cty.False
      - .disable_api_termination: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
2021/02/13 15:00:43 [TRACE] EvalWriteState: recording 7 dependencies for aws_instance.aviCtrl[0]
2021/02/13 15:00:43 [TRACE] EvalWriteState: writing current state object for aws_instance.aviCtrl[0]
2021/02/13 15:00:43 [TRACE] EvalWriteState: recording 7 dependencies for aws_instance.aviCtrl[0]
2021/02/13 15:00:43 [TRACE] EvalWriteState: writing current state object for aws_instance.aviCtrl[0]
2021/02/13 15:00:43 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:00:43 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3379
2021/02/13 15:00:43 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:00:43 [TRACE] vertex "aws_instance.aviCtrl[0]": visit complete
2021/02/13 15:00:43 [TRACE] dag/walk: visiting "aws_route53_record.aviCtrl"
2021/02/13 15:00:43 [TRACE] vertex "aws_route53_record.aviCtrl": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:00:43 [TRACE] dag/walk: visiting "output.aviCtrlPublicIp"
2021/02/13 15:00:43 [TRACE] vertex "output.aviCtrlPublicIp": starting visit (*terraform.NodeApplyableOutput)
2021/02/13 15:00:43 [TRACE] EvalReadDiff: Read Create change from plan for aws_route53_record.aviCtrl
2021/02/13 15:00:43 [TRACE] EvalReadState: reading state for aws_route53_record.aviCtrl
2021/02/13 15:00:43 [TRACE] EvalReadState: no state present for aws_route53_record.aviCtrl
2021/02/13 15:00:43 [TRACE] EvalReadDiff: Read Create change from plan for aws_route53_record.aviCtrl
2021/02/13 15:00:43 [TRACE] ExecuteWriteOutput: Saving Create change for output.aviCtrlPublicIp in changeset
2021/02/13 15:00:43 [TRACE] EvalWriteOutput: Saving value for output.aviCtrlPublicIp in state
2021/02/13 15:00:43 [TRACE] vertex "output.aviCtrlPublicIp": visit complete
2021/02/13 15:00:43 [TRACE] Re-validating config for "aws_route53_record.aviCtrl"
2021/02/13 15:00:43 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021-02-13T15:00:43.461Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:43 [WARN] Truncating attribute path of 0 diagnostics for TypeSet
2021/02/13 15:00:43 [TRACE] GRPCProvider: PlanResourceChange
2021/02/13 15:00:43 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/13 15:00:43 [TRACE] EvalReadState: reading state for aws_route53_record.aviCtrl
2021/02/13 15:00:43 [TRACE] EvalReadState: no state present for aws_route53_record.aviCtrl
2021/02/13 15:00:43 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/13 15:00:43 [DEBUG] aws_route53_record.aviCtrl: applying the planned Create change
2021/02/13 15:00:43 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-13T15:00:44.309Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:44 [DEBUG] Creating resource records for zone: Z08586824H1ONUMQDKU9, name: controller.aws.avidemo.fr
2021-02-13T15:00:44.309Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 
2021-02-13T15:00:44.309Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: {
2021-02-13T15:00:44.309Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   ChangeBatch: {
2021-02-13T15:00:44.309Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     Changes: [{
2021-02-13T15:00:44.309Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:         Action: "CREATE",
2021-02-13T15:00:44.309Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:         ResourceRecordSet: {
2021-02-13T15:00:44.309Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Name: "controller.aws.avidemo.fr",
2021-02-13T15:00:44.309Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           ResourceRecords: [{
2021-02-13T15:00:44.309Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:               Value: "54.154.244.163"
2021-02-13T15:00:44.309Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:             }],
2021-02-13T15:00:44.309Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           TTL: 300,
2021-02-13T15:00:44.309Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:           Type: "A"
2021-02-13T15:00:44.309Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:         }
2021-02-13T15:00:44.309Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:       }],
2021-02-13T15:00:44.309Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:     Comment: "Managed by Terraform"
2021-02-13T15:00:44.309Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   },
2021-02-13T15:00:44.309Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   HostedZoneId: "Z08586824H1ONUMQDKU9"
2021-02-13T15:00:44.309Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:44.309Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:44 [DEBUG] Waiting for state to become: [success]
2021/02/13 15:00:44 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_instance.jump, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ebs_optimized: was null, but now cty.False
      - .disable_api_termination: was null, but now cty.False
      - .monitoring: was null, but now cty.False
      - .hibernation: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
2021/02/13 15:00:44 [TRACE] EvalWriteState: recording 8 dependencies for aws_instance.jump
2021/02/13 15:00:44 [TRACE] EvalWriteState: writing current state object for aws_instance.jump
2021/02/13 15:00:44 [TRACE] EvalApplyProvisioners: provisioning aws_instance.jump with "remote-exec"
2021/02/13 15:00:45 [TRACE] dag/walk: vertex "aws_route_table.rtPrivate[0]" is waiting for "aws_nat_gateway.natGw"
2021/02/13 15:00:45 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationMysql" is waiting for "aws_route_table.rtPrivate[0]"
2021-02-13T15:00:45.269Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:45 [DEBUG] Waiting for state to become: [INSYNC]
2021/02/13 15:00:46 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[1]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:00:46 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[2]" is waiting for "aws_route_table.rtPrivate[0]"
2021-02-13T15:00:47.281Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:47 [DEBUG] Auto Scaling Group describe configuration: {
2021-02-13T15:00:47.281Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   AutoScalingGroupNames: ["tf-asg-2021021315002720510000000c"]
2021-02-13T15:00:47.281Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021/02/13 15:00:47 [TRACE] dag/walk: vertex "aws_route53_record.jump" is waiting for "aws_instance.jump"
2021/02/13 15:00:47 [TRACE] dag/walk: vertex "output.jumpPublicIp" is waiting for "aws_instance.jump"
2021/02/13 15:00:47 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "null_resource.foo7"
2021/02/13 15:00:47 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/null\"] (close)" is waiting for "null_resource.foo7"
2021/02/13 15:00:47 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/13 15:00:47 [TRACE] dag/walk: vertex "provisioner.remote-exec (close)" is waiting for "null_resource.foo7"
2021/02/13 15:00:47 [TRACE] dag/walk: vertex "null_resource.foo7" is waiting for "aws_instance.backend[2]"
2021/02/13 15:00:47 [TRACE] dag/walk: vertex "provisioner.file (close)" is waiting for "null_resource.foo7"
2021/02/13 15:00:47 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[0]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:00:47 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" is waiting for "aws_autoscaling_group.autoScalingGroup"
2021/02/13 15:00:47 [TRACE] dag/walk: vertex "output.destroy" is waiting for "aws_instance.jump"
2021-02-13T15:00:47.773Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:47 [DEBUG] "tf-asg-2021021315002720510000000c" Capacity: 0 ASG, 0 ELB/ALB, satisfied: false, reason: "Need at least 3 healthy instances in ASG, have 0"
2021-02-13T15:00:47.773Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:47 [TRACE] Waiting 10s before next try
2021-02-13T15:00:47.806Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:47 [TRACE] Waiting 10s before next try
2021-02-13T15:00:47.807Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:47 [TRACE] Waiting 10s before next try
2021-02-13T15:00:47.881Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:47 [TRACE] Waiting 10s before next try
2021/02/13 15:00:50 [TRACE] dag/walk: vertex "aws_route_table.rtPrivate[0]" is waiting for "aws_nat_gateway.natGw"
2021/02/13 15:00:50 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationMysql" is waiting for "aws_route_table.rtPrivate[0]"
2021-02-13T15:00:50.475Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:50 [TRACE] Waiting 10s before next try
2021/02/13 15:00:51 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[2]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:00:51 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[1]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:00:52 [TRACE] dag/walk: vertex "output.destroy" is waiting for "aws_instance.jump"
2021/02/13 15:00:52 [TRACE] dag/walk: vertex "aws_route53_record.jump" is waiting for "aws_instance.jump"
2021/02/13 15:00:52 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "null_resource.foo7"
2021/02/13 15:00:52 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/null\"] (close)" is waiting for "null_resource.foo7"
2021/02/13 15:00:52 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/13 15:00:52 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[0]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:00:52 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" is waiting for "aws_autoscaling_group.autoScalingGroup"
2021/02/13 15:00:52 [TRACE] dag/walk: vertex "null_resource.foo7" is waiting for "aws_instance.backend[2]"
2021/02/13 15:00:52 [TRACE] dag/walk: vertex "provisioner.file (close)" is waiting for "null_resource.foo7"
2021/02/13 15:00:52 [TRACE] dag/walk: vertex "provisioner.remote-exec (close)" is waiting for "null_resource.foo7"
2021/02/13 15:00:52 [TRACE] dag/walk: vertex "output.jumpPublicIp" is waiting for "aws_instance.jump"
2021/02/13 15:00:55 [TRACE] dag/walk: vertex "aws_route_table.rtPrivate[0]" is waiting for "aws_nat_gateway.natGw"
2021/02/13 15:00:55 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationMysql" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:00:56 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[1]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:00:56 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[2]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:00:57 [TRACE] dag/walk: vertex "output.jumpPublicIp" is waiting for "aws_instance.jump"
2021/02/13 15:00:57 [TRACE] dag/walk: vertex "provisioner.remote-exec (close)" is waiting for "null_resource.foo7"
2021/02/13 15:00:57 [TRACE] dag/walk: vertex "provisioner.file (close)" is waiting for "null_resource.foo7"
2021/02/13 15:00:57 [TRACE] dag/walk: vertex "output.destroy" is waiting for "aws_instance.jump"
2021/02/13 15:00:57 [TRACE] dag/walk: vertex "aws_route53_record.jump" is waiting for "aws_instance.jump"
2021/02/13 15:00:57 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "null_resource.foo7"
2021/02/13 15:00:57 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/null\"] (close)" is waiting for "null_resource.foo7"
2021/02/13 15:00:57 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/13 15:00:57 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[0]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:00:57 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" is waiting for "aws_autoscaling_group.autoScalingGroup"
2021/02/13 15:00:57 [TRACE] dag/walk: vertex "null_resource.foo7" is waiting for "aws_instance.backend[2]"
2021-02-13T15:00:57.774Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:57 [DEBUG] Auto Scaling Group describe configuration: {
2021-02-13T15:00:57.774Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   AutoScalingGroupNames: ["tf-asg-2021021315002720510000000c"]
2021-02-13T15:00:57.774Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:00:58.352Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:58 [TRACE] Waiting 10s before next try
2021-02-13T15:00:58.406Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:58 [DEBUG] "tf-asg-2021021315002720510000000c" Capacity: 0 ASG, 0 ELB/ALB, satisfied: false, reason: "Need at least 3 healthy instances in ASG, have 0"
2021-02-13T15:00:58.406Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:00:58 [TRACE] Waiting 10s before next try
2021/02/13 15:01:00 [TRACE] dag/walk: vertex "aws_route_table.rtPrivate[0]" is waiting for "aws_nat_gateway.natGw"
2021/02/13 15:01:00 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationMysql" is waiting for "aws_route_table.rtPrivate[0]"
2021-02-13T15:01:00.638Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:01:00 [DEBUG] Setting Security Group IDs: []string{"sg-0f7ac2433c66c6862"}
2021-02-13T15:01:00.683Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:01:00 [DEBUG] Setting Security Group IDs: []string{"sg-0f7ac2433c66c6862"}
2021-02-13T15:01:01.065Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:01:01 [TRACE] Waiting 10s before next try
2021/02/13 15:01:01 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[2]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:01 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[1]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:02 [TRACE] dag/walk: vertex "provisioner.remote-exec (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:02 [TRACE] dag/walk: vertex "output.jumpPublicIp" is waiting for "aws_instance.jump"
2021/02/13 15:01:02 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "null_resource.foo7"
2021/02/13 15:01:02 [TRACE] dag/walk: vertex "provisioner.file (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:02 [TRACE] dag/walk: vertex "output.destroy" is waiting for "aws_instance.jump"
2021/02/13 15:01:02 [TRACE] dag/walk: vertex "aws_route53_record.jump" is waiting for "aws_instance.jump"
2021/02/13 15:01:02 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/13 15:01:02 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/null\"] (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:02 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[0]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:02 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" is waiting for "aws_autoscaling_group.autoScalingGroup"
2021/02/13 15:01:02 [TRACE] dag/walk: vertex "null_resource.foo7" is waiting for "aws_instance.backend[2]"
2021/02/13 15:01:02 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_instance.backend[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .disable_api_termination: was null, but now cty.False
      - .iam_instance_profile: was null, but now cty.StringVal("")
      - .monitoring: was null, but now cty.False
      - .hibernation: was null, but now cty.False
      - .ebs_optimized: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
2021/02/13 15:01:02 [TRACE] EvalWriteState: recording 7 dependencies for aws_instance.backend[1]
2021/02/13 15:01:02 [TRACE] EvalWriteState: writing current state object for aws_instance.backend[1]
2021/02/13 15:01:02 [TRACE] EvalWriteState: recording 7 dependencies for aws_instance.backend[1]
2021/02/13 15:01:02 [TRACE] EvalWriteState: writing current state object for aws_instance.backend[1]
2021/02/13 15:01:02 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:01:02 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_instance.backend[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ebs_optimized: was null, but now cty.False
      - .disable_api_termination: was null, but now cty.False
      - .iam_instance_profile: was null, but now cty.StringVal("")
      - .monitoring: was null, but now cty.False
      - .hibernation: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
2021/02/13 15:01:02 [TRACE] EvalWriteState: recording 7 dependencies for aws_instance.backend[2]
2021/02/13 15:01:02 [TRACE] EvalWriteState: writing current state object for aws_instance.backend[2]
2021/02/13 15:01:02 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3380
2021/02/13 15:01:02 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:01:02 [TRACE] vertex "aws_instance.backend[1]": visit complete
2021/02/13 15:01:02 [TRACE] EvalWriteState: recording 7 dependencies for aws_instance.backend[2]
2021/02/13 15:01:02 [TRACE] EvalWriteState: writing current state object for aws_instance.backend[2]
2021/02/13 15:01:02 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:01:02 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3381
2021/02/13 15:01:02 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:01:02 [TRACE] vertex "aws_instance.backend[2]": visit complete
2021/02/13 15:01:05 [TRACE] dag/walk: vertex "aws_route_table.rtPrivate[0]" is waiting for "aws_nat_gateway.natGw"
2021/02/13 15:01:05 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationMysql" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:06 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[1]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:06 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[2]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:07 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" is waiting for "aws_autoscaling_group.autoScalingGroup"
2021/02/13 15:01:07 [TRACE] dag/walk: vertex "provisioner.remote-exec (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:07 [TRACE] dag/walk: vertex "output.jumpPublicIp" is waiting for "aws_instance.jump"
2021/02/13 15:01:07 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "null_resource.foo7"
2021/02/13 15:01:07 [TRACE] dag/walk: vertex "provisioner.file (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:07 [TRACE] dag/walk: vertex "output.destroy" is waiting for "aws_instance.jump"
2021/02/13 15:01:07 [TRACE] dag/walk: vertex "aws_route53_record.jump" is waiting for "aws_instance.jump"
2021/02/13 15:01:07 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/13 15:01:07 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/null\"] (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:07 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[0]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:07 [TRACE] dag/walk: vertex "null_resource.foo7" is waiting for "aws_autoscaling_group.autoScalingGroup"
2021-02-13T15:01:08.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:01:08 [DEBUG] Auto Scaling Group describe configuration: {
2021-02-13T15:01:08.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   AutoScalingGroupNames: ["tf-asg-2021021315002720510000000c"]
2021-02-13T15:01:08.407Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:01:09.005Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:01:09 [DEBUG] "tf-asg-2021021315002720510000000c" Capacity: 2 ASG, 2 ELB/ALB, satisfied: false, reason: "Need at least 3 healthy instances in ASG, have 2"
2021-02-13T15:01:09.005Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:01:09 [TRACE] Waiting 10s before next try
2021/02/13 15:01:10 [TRACE] dag/walk: vertex "aws_route_table.rtPrivate[0]" is waiting for "aws_nat_gateway.natGw"
2021/02/13 15:01:10 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationMysql" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:11 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[1]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:11 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[2]" is waiting for "aws_route_table.rtPrivate[0]"
2021-02-13T15:01:11.439Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:01:11 [DEBUG] Setting Security Group IDs: []string{"sg-0f7ac2433c66c6862"}
2021-02-13T15:01:11.592Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:01:11 [TRACE] Waiting 10s before next try
2021/02/13 15:01:12 [TRACE] dag/walk: vertex "provisioner.file (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:12 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/13 15:01:12 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[0]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:12 [TRACE] dag/walk: vertex "output.destroy" is waiting for "aws_instance.jump"
2021/02/13 15:01:12 [TRACE] dag/walk: vertex "aws_route53_record.jump" is waiting for "aws_instance.jump"
2021/02/13 15:01:12 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" is waiting for "aws_autoscaling_group.autoScalingGroup"
2021/02/13 15:01:12 [TRACE] dag/walk: vertex "provisioner.remote-exec (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:12 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/null\"] (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:12 [TRACE] dag/walk: vertex "output.jumpPublicIp" is waiting for "aws_instance.jump"
2021/02/13 15:01:12 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "null_resource.foo7"
2021/02/13 15:01:12 [TRACE] dag/walk: vertex "null_resource.foo7" is waiting for "aws_autoscaling_group.autoScalingGroup"
2021/02/13 15:01:13 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_instance.backend[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ebs_optimized: was null, but now cty.False
      - .disable_api_termination: was null, but now cty.False
      - .iam_instance_profile: was null, but now cty.StringVal("")
      - .hibernation: was null, but now cty.False
      - .monitoring: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
2021/02/13 15:01:13 [TRACE] EvalWriteState: recording 7 dependencies for aws_instance.backend[0]
2021/02/13 15:01:13 [TRACE] EvalWriteState: writing current state object for aws_instance.backend[0]
2021/02/13 15:01:13 [TRACE] EvalWriteState: recording 7 dependencies for aws_instance.backend[0]
2021/02/13 15:01:13 [TRACE] EvalWriteState: writing current state object for aws_instance.backend[0]
2021/02/13 15:01:13 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:01:13 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3382
2021/02/13 15:01:13 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:01:13 [TRACE] vertex "aws_instance.backend[0]": visit complete
2021/02/13 15:01:15 [TRACE] dag/walk: vertex "aws_route_table.rtPrivate[0]" is waiting for "aws_nat_gateway.natGw"
2021/02/13 15:01:15 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationMysql" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:16 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[1]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:16 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[2]" is waiting for "aws_route_table.rtPrivate[0]"
2021-02-13T15:01:16.905Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:01:16 [DEBUG] Expanded record name: controller.aws.avidemo.fr
2021-02-13T15:01:16.905Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:01:16 [DEBUG] List resource records sets for zone: Z08586824H1ONUMQDKU9, opts: {
2021-02-13T15:01:16.905Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   HostedZoneId: "Z08586824H1ONUMQDKU9",
2021-02-13T15:01:16.905Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   MaxItems: "1",
2021-02-13T15:01:16.905Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   StartRecordName: "controller.aws.avidemo.fr.",
2021-02-13T15:01:16.905Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   StartRecordType: "A"
2021-02-13T15:01:16.905Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021/02/13 15:01:17 [TRACE] EvalWriteState: recording 9 dependencies for aws_route53_record.aviCtrl
2021/02/13 15:01:17 [TRACE] EvalWriteState: writing current state object for aws_route53_record.aviCtrl
2021/02/13 15:01:17 [TRACE] EvalWriteState: recording 9 dependencies for aws_route53_record.aviCtrl
2021/02/13 15:01:17 [TRACE] EvalWriteState: writing current state object for aws_route53_record.aviCtrl
2021/02/13 15:01:17 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:01:17 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3383
2021/02/13 15:01:17 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:01:17 [TRACE] vertex "aws_route53_record.aviCtrl": visit complete
2021/02/13 15:01:17 [TRACE] dag/walk: vertex "output.jumpPublicIp" is waiting for "aws_instance.jump"
2021/02/13 15:01:17 [TRACE] dag/walk: vertex "provisioner.file (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:17 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" is waiting for "aws_autoscaling_group.autoScalingGroup"
2021/02/13 15:01:17 [TRACE] dag/walk: vertex "provisioner.remote-exec (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:17 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "null_resource.foo7"
2021/02/13 15:01:17 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/13 15:01:17 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[0]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:17 [TRACE] dag/walk: vertex "output.destroy" is waiting for "aws_instance.jump"
2021/02/13 15:01:17 [TRACE] dag/walk: vertex "aws_route53_record.jump" is waiting for "aws_instance.jump"
2021/02/13 15:01:17 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/null\"] (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:17 [TRACE] dag/walk: vertex "null_resource.foo7" is waiting for "aws_autoscaling_group.autoScalingGroup"
2021-02-13T15:01:19.006Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:01:19 [DEBUG] Auto Scaling Group describe configuration: {
2021-02-13T15:01:19.007Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   AutoScalingGroupNames: ["tf-asg-2021021315002720510000000c"]
2021-02-13T15:01:19.007Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:01:19.563Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:01:19 [DEBUG] "tf-asg-2021021315002720510000000c" Capacity: 2 ASG, 2 ELB/ALB, satisfied: false, reason: "Need at least 3 healthy instances in ASG, have 2"
2021-02-13T15:01:19.563Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:01:19 [TRACE] Waiting 10s before next try
2021/02/13 15:01:20 [TRACE] dag/walk: vertex "aws_route_table.rtPrivate[0]" is waiting for "aws_nat_gateway.natGw"
2021/02/13 15:01:20 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationMysql" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:21 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[2]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:21 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[1]" is waiting for "aws_route_table.rtPrivate[0]"
2021-02-13T15:01:22.149Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:01:22 [TRACE] Waiting 10s before next try
2021/02/13 15:01:22 [TRACE] dag/walk: vertex "output.jumpPublicIp" is waiting for "aws_instance.jump"
2021/02/13 15:01:22 [TRACE] dag/walk: vertex "provisioner.file (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:22 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/null\"] (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:22 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" is waiting for "aws_autoscaling_group.autoScalingGroup"
2021/02/13 15:01:22 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/13 15:01:22 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[0]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:22 [TRACE] dag/walk: vertex "provisioner.remote-exec (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:22 [TRACE] dag/walk: vertex "output.destroy" is waiting for "aws_instance.jump"
2021/02/13 15:01:22 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "null_resource.foo7"
2021/02/13 15:01:22 [TRACE] dag/walk: vertex "aws_route53_record.jump" is waiting for "aws_instance.jump"
2021/02/13 15:01:22 [TRACE] dag/walk: vertex "null_resource.foo7" is waiting for "aws_autoscaling_group.autoScalingGroup"
2021/02/13 15:01:25 [TRACE] dag/walk: vertex "aws_route_table.rtPrivate[0]" is waiting for "aws_nat_gateway.natGw"
2021/02/13 15:01:25 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationMysql" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:26 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[2]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:26 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[1]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:27 [TRACE] dag/walk: vertex "aws_route53_record.jump" is waiting for "aws_instance.jump"
2021/02/13 15:01:27 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" is waiting for "aws_autoscaling_group.autoScalingGroup"
2021/02/13 15:01:27 [TRACE] dag/walk: vertex "output.jumpPublicIp" is waiting for "aws_instance.jump"
2021/02/13 15:01:27 [TRACE] dag/walk: vertex "provisioner.file (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:27 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[0]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:27 [TRACE] dag/walk: vertex "output.destroy" is waiting for "aws_instance.jump"
2021/02/13 15:01:27 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "null_resource.foo7"
2021/02/13 15:01:27 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/null\"] (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:27 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/13 15:01:27 [TRACE] dag/walk: vertex "provisioner.remote-exec (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:27 [TRACE] dag/walk: vertex "null_resource.foo7" is waiting for "aws_autoscaling_group.autoScalingGroup"
2021-02-13T15:01:29.565Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:01:29 [DEBUG] Auto Scaling Group describe configuration: {
2021-02-13T15:01:29.565Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   AutoScalingGroupNames: ["tf-asg-2021021315002720510000000c"]
2021-02-13T15:01:29.565Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021-02-13T15:01:30.130Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:01:30 [DEBUG] "tf-asg-2021021315002720510000000c" Capacity: 2 ASG, 2 ELB/ALB, satisfied: false, reason: "Need at least 3 healthy instances in ASG, have 2"
2021-02-13T15:01:30.130Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:01:30 [TRACE] Waiting 10s before next try
2021/02/13 15:01:30 [TRACE] dag/walk: vertex "aws_route_table.rtPrivate[0]" is waiting for "aws_nat_gateway.natGw"
2021/02/13 15:01:30 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationMysql" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:31 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[1]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:31 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[2]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:32 [TRACE] dag/walk: vertex "provisioner.remote-exec (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:32 [TRACE] dag/walk: vertex "aws_route53_record.jump" is waiting for "aws_instance.jump"
2021/02/13 15:01:32 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" is waiting for "aws_autoscaling_group.autoScalingGroup"
2021/02/13 15:01:32 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "null_resource.foo7"
2021/02/13 15:01:32 [TRACE] dag/walk: vertex "output.destroy" is waiting for "aws_instance.jump"
2021/02/13 15:01:32 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/null\"] (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:32 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/13 15:01:32 [TRACE] dag/walk: vertex "output.jumpPublicIp" is waiting for "aws_instance.jump"
2021/02/13 15:01:32 [TRACE] dag/walk: vertex "provisioner.file (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:32 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[0]" is waiting for "aws_route_table.rtPrivate[0]"
2021-02-13T15:01:32.706Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:01:32 [TRACE] Waiting 10s before next try
2021/02/13 15:01:32 [TRACE] dag/walk: vertex "null_resource.foo7" is waiting for "aws_autoscaling_group.autoScalingGroup"
2021/02/13 15:01:35 [TRACE] dag/walk: vertex "aws_route_table.rtPrivate[0]" is waiting for "aws_nat_gateway.natGw"
2021/02/13 15:01:35 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationMysql" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:36 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[1]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:36 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[2]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:37 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[0]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:37 [TRACE] dag/walk: vertex "provisioner.file (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:37 [TRACE] dag/walk: vertex "output.jumpPublicIp" is waiting for "aws_instance.jump"
2021/02/13 15:01:37 [TRACE] dag/walk: vertex "provisioner.remote-exec (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:37 [TRACE] dag/walk: vertex "aws_route53_record.jump" is waiting for "aws_instance.jump"
2021/02/13 15:01:37 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" is waiting for "aws_autoscaling_group.autoScalingGroup"
2021/02/13 15:01:37 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "null_resource.foo7"
2021/02/13 15:01:37 [TRACE] dag/walk: vertex "output.destroy" is waiting for "aws_instance.jump"
2021/02/13 15:01:37 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/null\"] (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:37 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/13 15:01:37 [TRACE] dag/walk: vertex "null_resource.foo7" is waiting for "aws_autoscaling_group.autoScalingGroup"
2021-02-13T15:01:40.131Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:01:40 [DEBUG] Auto Scaling Group describe configuration: {
2021-02-13T15:01:40.131Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   AutoScalingGroupNames: ["tf-asg-2021021315002720510000000c"]
2021-02-13T15:01:40.131Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021/02/13 15:01:40 [TRACE] dag/walk: vertex "aws_route_table.rtPrivate[0]" is waiting for "aws_nat_gateway.natGw"
2021/02/13 15:01:40 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationMysql" is waiting for "aws_route_table.rtPrivate[0]"
2021-02-13T15:01:40.729Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:01:40 [DEBUG] "tf-asg-2021021315002720510000000c" Capacity: 3 ASG, 3 ELB/ALB, satisfied: true, reason: ""
2021-02-13T15:01:40.729Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:01:40 [DEBUG] Auto Scaling Group describe configuration: {
2021-02-13T15:01:40.729Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5:   AutoScalingGroupNames: ["tf-asg-2021021315002720510000000c"]
2021-02-13T15:01:40.729Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: }
2021/02/13 15:01:41 [WARN] Provider "registry.terraform.io/hashicorp/aws" produced an unexpected new value for aws_autoscaling_group.autoScalingGroup, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .max_instance_lifetime: was null, but now cty.NumberIntVal(0)
      - .capacity_rebalance: was null, but now cty.False
      - .launch_configuration: was null, but now cty.StringVal("")
      - .placement_group: was null, but now cty.StringVal("")
2021/02/13 15:01:41 [TRACE] EvalWriteState: recording 6 dependencies for aws_autoscaling_group.autoScalingGroup
2021/02/13 15:01:41 [TRACE] EvalWriteState: writing current state object for aws_autoscaling_group.autoScalingGroup
2021/02/13 15:01:41 [TRACE] EvalWriteState: recording 6 dependencies for aws_autoscaling_group.autoScalingGroup
2021/02/13 15:01:41 [TRACE] EvalWriteState: writing current state object for aws_autoscaling_group.autoScalingGroup
2021/02/13 15:01:41 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:01:41 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3384
2021/02/13 15:01:41 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:01:41 [TRACE] vertex "aws_autoscaling_group.autoScalingGroup": visit complete
2021/02/13 15:01:41 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[1]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:41 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[2]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:42 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[0]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:42 [TRACE] dag/walk: vertex "provisioner.file (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:42 [TRACE] dag/walk: vertex "output.jumpPublicIp" is waiting for "aws_instance.jump"
2021/02/13 15:01:42 [TRACE] dag/walk: vertex "provisioner.remote-exec (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:42 [TRACE] dag/walk: vertex "aws_route53_record.jump" is waiting for "aws_instance.jump"
2021/02/13 15:01:42 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "null_resource.foo7"
2021/02/13 15:01:42 [TRACE] dag/walk: vertex "output.destroy" is waiting for "aws_instance.jump"
2021/02/13 15:01:42 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/null\"] (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:42 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021-02-13T15:01:43.280Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:01:43 [TRACE] Waiting 10s before next try
2021/02/13 15:01:45 [TRACE] dag/walk: vertex "aws_route_table.rtPrivate[0]" is waiting for "aws_nat_gateway.natGw"
2021/02/13 15:01:45 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationMysql" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:46 [TRACE] dag/walk: vertex "null_resource.foo7" is waiting for "aws_instance.jump"
2021/02/13 15:01:46 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" is waiting for "aws_route_table_association.subnetAssociationBackend[0]"
2021/02/13 15:01:46 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[2]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:46 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[1]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:47 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/13 15:01:47 [TRACE] dag/walk: vertex "aws_route53_record.jump" is waiting for "aws_instance.jump"
2021/02/13 15:01:47 [TRACE] dag/walk: vertex "provisioner.remote-exec (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:47 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "null_resource.foo7"
2021/02/13 15:01:47 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[0]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:47 [TRACE] dag/walk: vertex "output.destroy" is waiting for "aws_instance.jump"
2021/02/13 15:01:47 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/null\"] (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:47 [TRACE] dag/walk: vertex "output.jumpPublicIp" is waiting for "aws_instance.jump"
2021/02/13 15:01:47 [TRACE] dag/walk: vertex "provisioner.file (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:50 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationMysql" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:50 [TRACE] dag/walk: vertex "aws_route_table.rtPrivate[0]" is waiting for "aws_nat_gateway.natGw"
2021/02/13 15:01:51 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" is waiting for "aws_route_table_association.subnetAssociationBackend[0]"
2021/02/13 15:01:51 [TRACE] dag/walk: vertex "null_resource.foo7" is waiting for "aws_instance.jump"
2021/02/13 15:01:51 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[2]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:51 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[1]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:52 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[0]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:52 [TRACE] dag/walk: vertex "provisioner.file (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:52 [TRACE] dag/walk: vertex "output.jumpPublicIp" is waiting for "aws_instance.jump"
2021/02/13 15:01:52 [TRACE] dag/walk: vertex "output.destroy" is waiting for "aws_instance.jump"
2021/02/13 15:01:52 [TRACE] dag/walk: vertex "aws_route53_record.jump" is waiting for "aws_instance.jump"
2021/02/13 15:01:52 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/13 15:01:52 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/null\"] (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:52 [TRACE] dag/walk: vertex "provisioner.remote-exec (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:52 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "null_resource.foo7"
2021-02-13T15:01:53.755Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 2021/02/13 15:01:53 [TRACE] Waiting 10s before next try
2021/02/13 15:01:55 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationMysql" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:55 [TRACE] dag/walk: vertex "aws_route_table.rtPrivate[0]" is waiting for "aws_nat_gateway.natGw"
2021/02/13 15:01:56 [TRACE] dag/walk: vertex "null_resource.foo7" is waiting for "aws_instance.jump"
2021/02/13 15:01:56 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" is waiting for "aws_route_table_association.subnetAssociationBackend[0]"
2021/02/13 15:01:56 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[1]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:56 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[2]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:57 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "null_resource.foo7"
2021/02/13 15:01:57 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[0]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:01:57 [TRACE] dag/walk: vertex "output.jumpPublicIp" is waiting for "aws_instance.jump"
2021/02/13 15:01:57 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/null\"] (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:57 [TRACE] dag/walk: vertex "provisioner.remote-exec (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:57 [TRACE] dag/walk: vertex "provisioner.file (close)" is waiting for "null_resource.foo7"
2021/02/13 15:01:57 [TRACE] dag/walk: vertex "aws_route53_record.jump" is waiting for "aws_instance.jump"
2021/02/13 15:01:57 [TRACE] dag/walk: vertex "output.destroy" is waiting for "aws_instance.jump"
2021/02/13 15:01:57 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/13 15:02:00 [TRACE] dag/walk: vertex "aws_route_table.rtPrivate[0]" is waiting for "aws_nat_gateway.natGw"
2021/02/13 15:02:00 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationMysql" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:02:01 [TRACE] dag/walk: vertex "null_resource.foo7" is waiting for "aws_instance.jump"
2021/02/13 15:02:01 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" is waiting for "aws_route_table_association.subnetAssociationBackend[0]"
2021/02/13 15:02:01 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[2]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:02:01 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[1]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:02:02 [TRACE] dag/walk: vertex "output.destroy" is waiting for "aws_instance.jump"
2021/02/13 15:02:02 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "null_resource.foo7"
2021/02/13 15:02:02 [TRACE] dag/walk: vertex "aws_route_table_association.subnetAssociationBackend[0]" is waiting for "aws_route_table.rtPrivate[0]"
2021/02/13 15:02:02 [TRACE] dag/walk: vertex "output.jumpPublicIp" is waiting for "aws_instance.jump"
2021/02/13 15:02:02 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/null\"] (close)" is waiting for "null_resource.foo7"
2021/02/13 15:02:02 [TRACE] dag/walk: vertex "provisioner.remote-exec (close)" is waiting for "null_resource.foo7"
2021/02/13 15:02:02 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/13 15:02:02 [TRACE] dag/walk: vertex "aws_route53_record.jump" is waiting for "aws_instance.jump"
2021/02/13 15:02:02 [TRACE] dag/walk: vertex "provisioner.file (close)" is waiting for "null_resource.foo7"
2021-02-13T15:02:04.247Z [TRACE] plugin.terraform-provider-null_v3.0.0_x5: plugin received interrupt signal, ignoring: count=1 timestamp=2021-02-13T15:02:04.246Z
2021/02/13 15:02:04 [TRACE] backend/local: waiting for the running operation to stop
2021/02/13 15:02:04 [WARN] terraform: Stop called, initiating interrupt sequence
2021/02/13 15:02:04 [WARN] terraform: run context exists, stopping
2021/02/13 15:02:04 [INFO] terraform: waiting for graceful stop to complete
2021/02/13 15:02:04 [TRACE] Context: requesting providers and provisioners to gracefully stop
2021/02/13 15:02:04 [TRACE] GRPCProvider: Stop
2021-02-13T15:02:04.248Z [TRACE] plugin.terraform-provider-aws_v3.22.0_x5: plugin received interrupt signal, ignoring: count=1 timestamp=2021-02-13T15:02:04.247Z
2021/02/13 15:02:04 [TRACE] GRPCProvider: Stop
2021-02-13T15:02:04.255Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: panic: close of nil channel
2021-02-13T15:02:04.255Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 
2021-02-13T15:02:04.255Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: goroutine 2731 [running]:
2021-02-13T15:02:04.255Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: github.com/hashicorp/terraform-plugin-go/tfprotov5/server.(*server).stop(0xc0017d8e00)
2021-02-13T15:02:04.255Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/github.com/hashicorp/terraform-plugin-go@v0.1.0/tfprotov5/server/server.go:201 +0x71
2021-02-13T15:02:04.255Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: github.com/hashicorp/terraform-plugin-go/tfprotov5/server.(*server).Stop(0xc0017d8e00, 0x7229480, 0xc0017da9f0, 0xc0017daa20, 0xc0017d8e00, 0xc0017da9f0, 0xc000af4ba0)
2021-02-13T15:02:04.255Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/github.com/hashicorp/terraform-plugin-go@v0.1.0/tfprotov5/server/server.go:215 +0xa5
2021-02-13T15:02:04.255Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: github.com/hashicorp/terraform-plugin-go/tfprotov5/internal/tfplugin5._Provider_Stop_Handler(0x65dc260, 0xc0017d8e00, 0x7229480, 0xc0017da9f0, 0xc0017bde00, 0x0, 0x7229480, 0xc0017da9f0, 0x0, 0x0)
2021-02-13T15:02:04.255Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/github.com/hashicorp/terraform-plugin-go@v0.1.0/tfprotov5/internal/tfplugin5/tfplugin5_grpc.pb.go:434 +0x214
2021-02-13T15:02:04.255Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: google.golang.org/grpc.(*Server).processUnaryRPC(0xc000219a40, 0x724ca60, 0xc000af0600, 0xc00028b000, 0xc000adda70, 0xa62e3c8, 0x0, 0x0, 0x0)
2021-02-13T15:02:04.255Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/google.golang.org/grpc@v1.32.0/server.go:1194 +0x522
2021-02-13T15:02:04.255Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: google.golang.org/grpc.(*Server).handleStream(0xc000219a40, 0x724ca60, 0xc000af0600, 0xc00028b000, 0x0)
2021-02-13T15:02:04.255Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/google.golang.org/grpc@v1.32.0/server.go:1517 +0xd05
2021-02-13T15:02:04.255Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: google.golang.org/grpc.(*Server).serveStreams.func1.2(0xc0007529e0, 0xc000219a40, 0x724ca60, 0xc000af0600, 0xc00028b000)
2021-02-13T15:02:04.255Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/google.golang.org/grpc@v1.32.0/server.go:859 +0xa5
2021-02-13T15:02:04.255Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: created by google.golang.org/grpc.(*Server).serveStreams.func1
2021-02-13T15:02:04.255Z [DEBUG] plugin.terraform-provider-aws_v3.22.0_x5: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/google.golang.org/grpc@v1.32.0/server.go:857 +0x1fd
2021-02-13T15:02:04.257Z [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/aws/3.22.0/linux_amd64/terraform-provider-aws_v3.22.0_x5 pid=9301 error="exit status 2"
2021/02/13 15:02:04 [DEBUG] aws_nat_gateway.natGw: apply errored, but we're indicating that via the Error pointer rather than returning it: rpc error: code = Canceled desc = context canceled
2021/02/13 15:02:04 [TRACE] EvalMaybeTainted: aws_nat_gateway.natGw encountered an error during creation, so it is now marked as tainted
2021/02/13 15:02:04 [TRACE] EvalWriteState: removing state object for aws_nat_gateway.natGw
2021/02/13 15:02:04 [TRACE] EvalApplyProvisioners: aws_nat_gateway.natGw has no state, so skipping provisioners
2021/02/13 15:02:04 [TRACE] EvalMaybeTainted: aws_nat_gateway.natGw encountered an error during creation, so it is now marked as tainted
2021/02/13 15:02:04 [TRACE] EvalWriteState: removing state object for aws_nat_gateway.natGw
2021/02/13 15:02:04 [WARN] Early exit triggered by hook: *terraform.stopHook
2021/02/13 15:02:04 [TRACE] vertex "aws_nat_gateway.natGw": visit complete
2021/02/13 15:02:04 [TRACE] dag/walk: visiting "aws_route_table.rtPrivate[0]"
2021/02/13 15:02:04 [TRACE] vertex "aws_route_table.rtPrivate[0]": starting visit (*terraform.NodeApplyableResourceInstance)
2021-02-13T15:02:04.257Z [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Canceled desc = context canceled"
2021/02/13 15:02:04 [TRACE] EvalReadDiff: Read Create change from plan for aws_route_table.rtPrivate[0]
2021/02/13 15:02:04 [TRACE] EvalReadState: reading state for aws_route_table.rtPrivate[0]
2021/02/13 15:02:04 [TRACE] EvalReadState: no state present for aws_route_table.rtPrivate[0]
2021/02/13 15:02:04 [TRACE] EvalReadDiff: Read Create change from plan for aws_route_table.rtPrivate[0]
2021/02/13 15:02:04 [WARN] Early exit triggered by hook: *terraform.stopHook
2021/02/13 15:02:04 [WARN] Errors while provisioning aws_instance.jump with "remote-exec", so aborting
2021/02/13 15:02:04 [TRACE] EvalApplyProvisioners: aws_instance.jump provisioning failed, but we will continue anyway at the caller's request
2021/02/13 15:02:04 [TRACE] EvalMaybeTainted: aws_instance.jump encountered an error during creation, so it is now marked as tainted
2021/02/13 15:02:04 [TRACE] EvalWriteState: recording 8 dependencies for aws_instance.jump
2021/02/13 15:02:04 [TRACE] EvalWriteState: writing current state object for aws_instance.jump
2021/02/13 15:02:04 [ERROR] unknown instance "aws_nat_gateway.natGw" referenced during plan
2021/02/13 15:02:04 [TRACE] Re-validating config for "aws_route_table.rtPrivate[0]"
2021/02/13 15:02:04 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:02:04 [TRACE] vertex "aws_route_table.rtPrivate[0]": visit complete
2021/02/13 15:02:04 [TRACE] dag/walk: upstream of "aws_route_table_association.subnetAssociationMysql" errored, so skipping
2021/02/13 15:02:04 [WARN] Early exit triggered by hook: *terraform.stopHook
2021/02/13 15:02:04 [TRACE] vertex "aws_instance.jump": visit complete
2021/02/13 15:02:04 [TRACE] dag/walk: visiting "null_resource.foo7"
2021/02/13 15:02:04 [TRACE] vertex "null_resource.foo7": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:02:04 [TRACE] dag/walk: upstream of "aws_route_table_association.subnetAssociationBackend[2]" errored, so skipping
2021/02/13 15:02:04 [TRACE] EvalReadDiff: Read Create change from plan for null_resource.foo7
2021/02/13 15:02:04 [TRACE] dag/walk: visiting "aws_route53_record.jump"
2021/02/13 15:02:04 [TRACE] vertex "aws_route53_record.jump": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/13 15:02:04 [TRACE] EvalReadState: reading state for null_resource.foo7
2021/02/13 15:02:04 [TRACE] EvalReadState: no state present for null_resource.foo7
2021/02/13 15:02:04 [TRACE] dag/walk: visiting "output.jumpPublicIp"
2021/02/13 15:02:04 [TRACE] vertex "output.jumpPublicIp": starting visit (*terraform.NodeApplyableOutput)
2021/02/13 15:02:04 [TRACE] EvalReadDiff: Read Create change from plan for null_resource.foo7
2021/02/13 15:02:04 [TRACE] Re-validating config for "null_resource.foo7"
2021/02/13 15:02:04 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:02:04 [TRACE] dag/walk: upstream of "aws_route_table_association.subnetAssociationBackend[0]" errored, so skipping
2021/02/13 15:02:04 [TRACE] dag/walk: upstream of "aws_route_table_association.subnetAssociationBackend[1]" errored, so skipping
2021/02/13 15:02:04 [TRACE] EvalReadDiff: Read Create change from plan for aws_route53_record.jump
2021/02/13 15:02:04 [TRACE] EvalReadState: reading state for aws_route53_record.jump
2021/02/13 15:02:04 [TRACE] EvalReadState: no state present for aws_route53_record.jump
2021/02/13 15:02:04 [TRACE] EvalReadDiff: Read Create change from plan for aws_route53_record.jump
2021/02/13 15:02:04 [TRACE] ExecuteWriteOutput: Saving Create change for output.jumpPublicIp in changeset
2021/02/13 15:02:04 [TRACE] EvalWriteOutput: Saving value for output.jumpPublicIp in state
2021/02/13 15:02:04 [TRACE] vertex "output.jumpPublicIp": visit complete
2021/02/13 15:02:04 [TRACE] dag/walk: visiting "output.destroy"
2021/02/13 15:02:04 [TRACE] vertex "output.destroy": starting visit (*terraform.NodeApplyableOutput)
2021/02/13 15:02:04 [TRACE] Re-validating config for "aws_route53_record.jump"
2021/02/13 15:02:04 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/13 15:02:04 [TRACE] vertex "aws_route53_record.jump": visit complete
2021/02/13 15:02:04 [TRACE] dag/walk: upstream of "provider[\"registry.terraform.io/hashicorp/aws\"] (close)" errored, so skipping
2021/02/13 15:02:04 [TRACE] ExecuteWriteOutput: Saving Create change for output.destroy in changeset
2021/02/13 15:02:04 [TRACE] EvalWriteOutput: Saving value for output.destroy in state
2021/02/13 15:02:04 [TRACE] vertex "output.destroy": visit complete
2021/02/13 15:02:04 [WARN] Early exit triggered by hook: *terraform.stopHook
2021/02/13 15:02:04 [TRACE] vertex "null_resource.foo7": visit complete
2021/02/13 15:02:04 [TRACE] dag/walk: upstream of "meta.count-boundary (EachMode fixup)" errored, so skipping
2021/02/13 15:02:04 [TRACE] dag/walk: visiting "provisioner.file (close)"
2021/02/13 15:02:04 [TRACE] vertex "provisioner.file (close)": starting visit (*terraform.graphNodeCloseProvisioner)
2021/02/13 15:02:04 [TRACE] dag/walk: visiting "provisioner.remote-exec (close)"
2021/02/13 15:02:04 [TRACE] vertex "provisioner.remote-exec (close)": starting visit (*terraform.graphNodeCloseProvisioner)
2021/02/13 15:02:04 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/null\"] (close)"
2021/02/13 15:02:04 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/null\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/13 15:02:04 [TRACE] GRPCProvider: Close
2021-02-13T15:02:04.262Z [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-13T15:02:04.262Z [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-13T15:02:04.263Z [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/null/3.0.0/linux_amd64/terraform-provider-null_v3.0.0_x5 pid=9338
2021-02-13T15:02:04.263Z [DEBUG] plugin: plugin exited
2021/02/13 15:02:04 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/null\"] (close)": visit complete
2021-02-13T15:02:04.264Z [DEBUG] plugin: plugin process exited: path=/usr/bin/terraform pid=9291
2021-02-13T15:02:04.264Z [DEBUG] plugin: plugin exited
2021/02/13 15:02:04 [TRACE] vertex "provisioner.file (close)": visit complete
2021-02-13T15:02:04.264Z [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-13T15:02:04.266Z [DEBUG] plugin: plugin process exited: path=/usr/bin/terraform pid=9315
2021-02-13T15:02:04.266Z [DEBUG] plugin: plugin exited
2021/02/13 15:02:04 [TRACE] vertex "provisioner.remote-exec (close)": visit complete
2021/02/13 15:02:04 [TRACE] dag/walk: upstream of "root" errored, so skipping
2021/02/13 15:02:04 [TRACE] backend/local: graceful stop has completed
2021/02/13 15:02:04 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/13 15:02:04 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3385
2021/02/13 15:02:04 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/13 15:02:04 [WARN] terraform: stop complete
2021/02/13 15:02:04 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/02/13 15:02:04 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021-02-13T15:02:04.271Z [DEBUG] plugin: plugin exited
2021-02-13T15:02:04.273Z [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-13T15:02:04.273Z [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-13T15:02:04.273Z [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-13T15:02:04.273Z [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-13T15:02:04.275Z [DEBUG] plugin: plugin process exited: path=/usr/bin/terraform pid=9157
2021-02-13T15:02:04.275Z [DEBUG] plugin: plugin exited
2021-02-13T15:02:04.275Z [DEBUG] plugin: plugin process exited: path=/usr/bin/terraform pid=9181
2021-02-13T15:02:04.275Z [DEBUG] plugin: plugin exited
2021-02-13T15:02:04.276Z [DEBUG] plugin: plugin process exited: path=/usr/bin/terraform pid=9247
2021-02-13T15:02:04.276Z [DEBUG] plugin: plugin exited
2021-02-13T15:02:04.276Z [DEBUG] plugin: plugin process exited: path=/usr/bin/terraform pid=9222
2021-02-13T15:02:04.276Z [DEBUG] plugin: plugin exited
